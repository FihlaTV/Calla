/**
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
var t;!function(t,e){if(t){var n={},i=t.TraceKit,r=[].slice,a=/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;n.noConflict=function(){return t.TraceKit=i,n},n.wrap=function(t){return function(){try{return t.apply(this,arguments)}catch(t){throw n.report(t),t}}},n.report=function(){var e,i,r=[],o=null,l=null;function c(t,e,i){var a=null;if(!e||n.collectWindowErrors){for(var o in r)if(s(r,o))try{r[o](t,e,i)}catch(t){a=t}if(a)throw a}}function h(t,i,r,s,o){if(l)n.computeStackTrace.augmentStackTraceWithInitialElement(l,i,r,t),u();else if(o)c(n.computeStackTrace(o),!0,o);else{var h,d={url:i,line:r,column:s},p=t;if("[object String]"==={}.toString.call(t)){var f=t.match(a);f&&(h=f[1],p=f[2])}d.func=n.computeStackTrace.guessFunctionName(d.url,d.line),d.context=n.computeStackTrace.gatherContext(d.url,d.line),c({name:h,message:p,mode:"onerror",stack:[d]},!0,null)}return!!e&&e.apply(this,arguments)}function u(){var t=l,e=o;l=null,o=null,c(t,!1,e)}function d(t){if(l){if(o===t)return;u()}var e=n.computeStackTrace(t);throw l=e,o=t,setTimeout((function(){o===t&&u()}),e.incomplete?2e3:0),t}return d.subscribe=function(n){!function(){if(!0===i)return;e=t.onerror,t.onerror=h,i=!0}(),r.push(n)},d.unsubscribe=function(n){for(var a=r.length-1;a>=0;--a)r[a]===n&&r.splice(a,1);0===r.length&&(t.onerror=e,i=!1)},d}(),n.computeStackTrace=function(){var e={};function i(i){if("string"!=typeof i)return[];if(!s(e,i)){var r="",a="";try{a=t.document.domain}catch(t){}var o=/(.*)\:\/\/([^:\/]+)([:\d]*)\/{0,1}([\s\S]*)/.exec(i);o&&o[2]===a&&(r=function(e){if(!n.remoteFetching)return"";try{var i=function(){try{return new t.XMLHttpRequest}catch(e){return new t.ActiveXObject("Microsoft.XMLHTTP")}}();return i.open("GET",e,!1),i.send(""),i.responseText}catch(t){return""}}(i)),e[i]=r?r.split("\n"):[]}return e[i]}function r(t,e){var n,r=/function ([^(]*)\(([^)]*)\)/,a=/['"]?([0-9A-Za-z$_]+)['"]?\s*[:=]\s*(function|eval|new Function)/,s="",l=i(t);if(!l.length)return"?";for(var c=0;c<10;++c)if(!o(s=l[e-c]+s)){if(n=a.exec(s))return n[1];if(n=r.exec(s))return n[1]}return"?"}function a(t,e){var r=i(t);if(!r.length)return null;var a=[],s=Math.floor(n.linesOfContext/2),l=s+n.linesOfContext%2,c=Math.max(0,e-s-1),h=Math.min(r.length,e+l-1);e-=1;for(var u=c;u<h;++u)o(r[u])||a.push(r[u]);return a.length>0?a:null}function l(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#]/g,"\\$&")}function c(t){return l(t).replace("<","(?:<|&lt;)").replace(">","(?:>|&gt;)").replace("&","(?:&|&amp;)").replace('"','(?:"|&quot;)').replace(/\s+/g,"\\s+")}function h(t,e){for(var n,r,a=0,s=e.length;a<s;++a)if((n=i(e[a])).length&&(n=n.join("\n"),r=t.exec(n)))return{url:e[a],line:n.substring(0,r.index).split("\n").length,column:r.index-n.lastIndexOf("\n",r.index)-1};return null}function u(t,e,n){var r,a=i(e),s=new RegExp("\\b"+l(t)+"\\b");return n-=1,a&&a.length>n&&(r=s.exec(a[n]))?r.index:null}function d(e){if(!o(t&&t.document)){for(var n,i,r,a,s=[t.location.href],u=t.document.getElementsByTagName("script"),d=""+e,p=0;p<u.length;++p){var f=u[p];f.src&&s.push(f.src)}if(r=/^function(?:\s+([\w$]+))?\s*\(([\w\s,]*)\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/.exec(d)){var m=r[1]?"\\s+"+r[1]:"",g=r[2].split(",").join("\\s*,\\s*");n=l(r[3]).replace(/;$/,";?"),i=new RegExp("function"+m+"\\s*\\(\\s*"+g+"\\s*\\)\\s*{\\s*"+n+"\\s*}")}else i=new RegExp(l(d).replace(/\s+/g,"\\s+"));if(a=h(i,s))return a;if(r=/^function on([\w$]+)\s*\(event\)\s*\{\s*(\S[\s\S]*\S)\s*\}\s*$/.exec(d)){var A=r[1];if(n=c(r[2]),a=h(i=new RegExp("on"+A+"=[\\'\"]\\s*"+n+"\\s*[\\'\"]","i"),s[0]))return a;if(a=h(i=new RegExp(n),s))return a}return null}}function p(t){if(!t.stack)return null;for(var e,n,i,s=/^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,l=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i,c=/^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,h=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,d=/\((\S*)(?::(\d+))(?::(\d+))\)/,p=t.stack.split("\n"),f=[],m=/^(.*) is undefined$/.exec(t.message),g=0,A=p.length;g<A;++g){if(n=s.exec(p[g])){var v=n[2]&&0===n[2].indexOf("native");n[2]&&0===n[2].indexOf("eval")&&(e=d.exec(n[2]))&&(n[2]=e[1],n[3]=e[2],n[4]=e[3]),i={url:v?null:n[2],func:n[1]||"?",args:v?[n[2]]:[],line:n[3]?+n[3]:null,column:n[4]?+n[4]:null}}else if(n=c.exec(p[g]))i={url:n[2],func:n[1]||"?",args:[],line:+n[3],column:n[4]?+n[4]:null};else{if(!(n=l.exec(p[g])))continue;n[3]&&n[3].indexOf(" > eval")>-1&&(e=h.exec(n[3]))?(n[3]=e[1],n[4]=e[2],n[5]=null):0!==g||n[5]||o(t.columnNumber)||(f[0].column=t.columnNumber+1),i={url:n[3],func:n[1]||"?",args:n[2]?n[2].split(","):[],line:n[4]?+n[4]:null,column:n[5]?+n[5]:null}}!i.func&&i.line&&(i.func=r(i.url,i.line)),i.context=i.line?a(i.url,i.line):null,f.push(i)}return f.length?(f[0]&&f[0].line&&!f[0].column&&m&&(f[0].column=u(m[1],f[0].url,f[0].line)),{mode:"stack",name:t.name,message:t.message,stack:f}):null}function f(t,e,n,i){var s={url:e,line:n};if(s.url&&s.line){t.incomplete=!1,s.func||(s.func=r(s.url,s.line)),s.context||(s.context=a(s.url,s.line));var o=/ '([^']+)' /.exec(i);if(o&&(s.column=u(o[1],s.url,s.line)),t.stack.length>0&&t.stack[0].url===s.url){if(t.stack[0].line===s.line)return!1;if(!t.stack[0].line&&t.stack[0].func===s.func)return t.stack[0].line=s.line,t.stack[0].context=s.context,!1}return t.stack.unshift(s),t.partial=!0,!0}return t.incomplete=!0,!1}function m(t,e){for(var i,a,s,o=/function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i,l=[],c={},h=!1,p=m.caller;p&&!h;p=p.caller)if(p!==g&&p!==n.report){if(a={url:null,func:"?",args:[],line:null,column:null},p.name?a.func=p.name:(i=o.exec(p.toString()))&&(a.func=i[1]),void 0===a.func)try{a.func=i.input.substring(0,i.input.indexOf("{"))}catch(t){}if(s=d(p)){a.url=s.url,a.line=s.line,"?"===a.func&&(a.func=r(a.url,a.line));var A=/ '([^']+)' /.exec(t.message||t.description);A&&(a.column=u(A[1],s.url,s.line))}c[""+p]?h=!0:c[""+p]=!0,l.push(a)}e&&l.splice(0,e);var v={mode:"callers",name:t.name,message:t.message,stack:l};return f(v,t.sourceURL||t.fileName,t.line||t.lineNumber,t.message||t.description),v}function g(e,n){var o=null;n=null==n?0:+n;try{if(o=function(t){var e=t.stacktrace;if(e){for(var n,i=/ line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,s=/ line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i,o=e.split("\n"),l=[],c=0;c<o.length;c+=2){var h=null;if((n=i.exec(o[c]))?h={url:n[2],line:+n[1],column:null,func:n[3],args:[]}:(n=s.exec(o[c]))&&(h={url:n[6],line:+n[1],column:+n[2],func:n[3]||n[4],args:n[5]?n[5].split(","):[]}),h){if(!h.func&&h.line&&(h.func=r(h.url,h.line)),h.line)try{h.context=a(h.url,h.line)}catch(t){}h.context||(h.context=[o[c+1]]),l.push(h)}}return l.length?{mode:"stacktrace",name:t.name,message:t.message,stack:l}:null}}(e))return o}catch(t){false}try{if(o=p(e))return o}catch(t){false}try{if(o=function(e){var n=e.message.split("\n");if(n.length<4)return null;var o,l=/^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,u=/^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,d=/^\s*Line (\d+) of function script\s*$/i,p=[],f=t&&t.document&&t.document.getElementsByTagName("script"),m=[];for(var g in f)s(f,g)&&!f[g].src&&m.push(f[g]);for(var A=2;A<n.length;A+=2){var v=null;if(o=l.exec(n[A]))v={url:o[2],func:o[3],args:[],line:+o[1],column:null};else if(o=u.exec(n[A])){v={url:o[3],func:o[4],args:[],line:+o[1],column:null};var _=+o[1],x=m[o[2]-1];if(x){var w=i(v.url);if(w){var y=(w=w.join("\n")).indexOf(x.innerText);y>=0&&(v.line=_+w.substring(0,y).split("\n").length)}}}else if(o=d.exec(n[A])){var M=t.location.href.replace(/#.*$/,""),b=h(new RegExp(c(n[A+1])),[M]);v={url:M,func:"",args:[],line:b?b.line:o[1],column:null}}if(v){v.func||(v.func=r(v.url,v.line));var S=a(v.url,v.line),E=S?S[Math.floor(S.length/2)]:null;S&&E.replace(/^\s*/,"")===n[A+1].replace(/^\s*/,"")?v.context=S:v.context=[n[A+1]],p.push(v)}}return p.length?{mode:"multiline",name:e.name,message:n[0],stack:p}:null}(e))return o}catch(t){false}try{if(o=m(e,n+1))return o}catch(t){false}return{name:e.name,message:e.message,mode:"failed"}}return g.augmentStackTraceWithInitialElement=f,g.computeStackTraceFromStackProp=p,g.guessFunctionName=r,g.gatherContext=a,g.ofCaller=function(t){t=1+(null==t?0:+t);try{throw new Error}catch(e){return g(e,t+1)}},g.getSource=i,g}(),n.extendToAsynchronousCallbacks=function(){var e=function(e){var i=t[e];t[e]=function(){var t=r.call(arguments),e=t[0];return"function"==typeof e&&(t[0]=n.wrap(e)),i.apply?i.apply(this,t):i(t[0],t[1])}};e("setTimeout"),e("setInterval")},n.remoteFetching||(n.remoteFetching=!0),n.collectWindowErrors||(n.collectWindowErrors=!0),(!n.linesOfContext||n.linesOfContext<1)&&(n.linesOfContext=11),"function"==typeof define&&define.amd?define("TraceKit",[],n):"undefined"!=typeof module&&module.exports&&t.module!==module?module.exports=n:t.TraceKit=n}function s(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function o(t){return void 0===t}}("undefined"!=typeof window?window:global),t=!0,TraceKit.report.subscribe(e=>{if(t)try{e.userAgent=navigator.userAgent;const n=new XMLHttpRequest;n.onerror=function(){t=!1},n.open("POST","/ErrorLog"),n.setRequestHeader("Content-Type","application/json"),n.send(JSON.stringify(e))}catch(e){t=!1}});try{function e(t,e,n){return typeof t===e||t instanceof n}function n(t){return e(t,"function",Function)}function i(t){return e(t,"string",String)}function r(t){return e(t,"number",Number)}function a(t){return r(t)&&!Number.isNaN(t)}function s(t){return e(t,"boolean",Boolean)}function o(t,e){return n=>{t(n),e(n)}}function l(t,e,n,s){return void 0===s&&a(n)&&(s=n,n=void 0),new Promise((a,l)=>{const c=i(e);if(c){const n=a,i=()=>{t.removeEventListener(e,n)};a=o(i,a),l=o(i,l)}const h=i(n);if(h){const e=l,i=()=>{t.removeEventListener(n,e)};a=o(i,a),l=o(i,l)}if(r(s)){const t=setTimeout(l,s,`'${e}' has timed out.`),n=()=>clearTimeout(t);a=o(n,a),l=o(n,l)}c&&t.addEventListener(e,a),h&&t.addEventListener(n,()=>{l("Rejection event found")})})}async function c(t){const e=fetch(t),n=await e;if(!n.ok)throw new Error(`[${n.status}] - ${n.statusText}`);return n}async function h(t,e){if(!n(e))throw new Error("progress callback is required");e(0,1,t);const i=await c(t),r=parseInt(i.headers.get("Content-Length"),10);if(!r)throw new Error("Server did not provide a content length header.");const a=i.headers.get("Content-Type");if(!a)throw new Error("Server did not provide a content type");const s=i.body.getReader(),o=new Uint8Array(r);let l=0;for(;;){const{done:n,value:i}=await s.read();if(n)break;if(l+i.length>r)throw new Error("Whoa! Recieved content exceeded expected amount");o.set(i,l),l+=i.length,e(l,r,t)}return e(1,1,t),{buffer:o,contentType:a}}async function u(t,e){const{buffer:n,contentType:i}=await h(t,e);return new Blob([n],{type:i})}const t=new Map;async function d(t,e=null){if(n(e))return await async function(t,e){const{buffer:n}=await h(t,e),i=new TextDecoder("utf-8").decode(n);return JSON.parse(i)}(t,e);const i=await c(t);return await i.json()}async function p(e,i=null){if(n(i))return await async function(e,n){const i=e;if(t.has(i)){n(0,1,e);const r=t.get(i);return n(1,1,e),r}{const r=await u(e,n),a=URL.createObjectURL(r);return t.set(i,a),a}}(e,i);const r=await async function(t,e=null){if(n(e))return await u(t,e);const i=await c(t);return await i.blob()}(e);return URL.createObjectURL(r)}function f(){}Object.assign(f.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t)}}});const jn=[];for(let t=0;t<256;t++)jn[t]=(t<16?"0":"")+t.toString(16);let Qn=1234567;const Xn={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(jn[255&t]+jn[t>>8&255]+jn[t>>16&255]+jn[t>>24&255]+"-"+jn[255&e]+jn[e>>8&255]+"-"+jn[e>>16&15|64]+jn[e>>24&255]+"-"+jn[63&n|128]+jn[n>>8&255]+"-"+jn[n>>16&255]+jn[n>>24&255]+jn[255&i]+jn[i>>8&255]+jn[i>>16&255]+jn[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(Qn=t%2147483647),Qn=16807*Qn%2147483647,(Qn-1)/2147483646},degToRad:function(t){return t*Xn.DEG2RAD},radToDeg:function(t){return t*Xn.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((e+i)/2),h=s((e+i)/2),u=a((e-i)/2),d=s((e-i)/2),p=a((i-e)/2),f=s((i-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*d,o*c);break;case"YZY":t.set(l*d,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*d,o*h,o*c);break;case"XZX":t.set(o*h,l*f,l*p,o*c);break;case"YXY":t.set(l*p,o*h,l*f,o*c);break;case"ZYZ":t.set(l*f,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}},Yn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},qn={h:0,s:0,l:0},Zn={h:0,s:0,l:0};function m(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function g(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function A(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Jn{constructor(t,e,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=Xn.euclideanModulo(t,1),e=Xn.clamp(e,0,1),n=Xn.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=m(r,i,t+1/3),this.g=m(r,i,t),this.b=m(r,i,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const i=n[1],r=n[2];switch(i){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[5]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[5]),this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r)){const n=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[5]),this.setHSL(n,i,r)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Yn[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e){void 0===e&&(e=2);const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=g(t.r),this.g=g(t.g),this.b=g(t.b),this}copyLinearToSRGB(t){return this.r=A(t.r),this.g=A(t.g),this.b=A(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i);let s,o;const l=(a+r)/2;if(a===r)s=0,o=0;else{const t=r-a;switch(o=l<=.5?t/(r+a):t/(2-r-a),r){case e:s=(n-i)/t+(n<i?6:0);break;case n:s=(i-e)/t+2;break;case i:s=(e-n)/t+4}s/=6}return t.h=s,t.s=o,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(qn),qn.h+=t,qn.s+=e,qn.l+=n,this.setHSL(qn.h,qn.s,qn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpHSL(t,e){this.getHSL(qn),t.getHSL(Zn);const n=Xn.lerp(qn.h,Zn.h,e),i=Xn.lerp(qn.s,Zn.s,e),r=Xn.lerp(qn.l,Zn.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Jn.NAMES=Yn,Jn.prototype.r=1,Jn.prototype.g=1,Jn.prototype.b=1;class Kn{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=n,this._w=i}static slerp(t,e,n,i){return n.copy(t).slerp(e,i)}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(h!==f||o!==u||l!==d||c!==p){let t=1-s;const e=o*u+l*d+c*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-s*d,t[e+2]=l*p+c*d+s*u-o*h,t[e+3]=c*p-s*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+l)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Xn.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class $n{constructor(t=0,e=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ei.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ei.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*i-s*n,c=o*n+s*e-r*i,h=o*i+r*n-a*e,u=-r*e-a*n-s*i;return this.x=l*o+u*-r+c*-s-h*-a,this.y=c*o+u*-a+h*-r-l*-s,this.z=h*o+u*-s+l*-a-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return ti.copy(this).projectOnVector(t),this.sub(ti)}reflect(t){return this.sub(ti.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Xn.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const ti=new $n,ei=new Kn;class ni{constructor(t,e,n,i,r,a){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new $n,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new Jn,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==a?a:0}clone(){return(new this.constructor).copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}}class ii{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],A=i[1],v=i[4],_=i[7],x=i[2],w=i[5],y=i[8];return r[0]=a*f+s*A+o*x,r[3]=a*m+s*v+o*w,r[6]=a*g+s*_+o*y,r[1]=l*f+c*A+h*x,r[4]=l*m+c*v+h*w,r[7]=l*g+c*_+h*y,r[2]=u*f+d*A+p*x,r[5]=u*m+d*v+p*w,r[8]=u*g+d*_+p*y,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o}getInverse(t,e){void 0!==e&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=t.elements,i=this.elements,r=n[0],a=n[1],s=n[2],o=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],p=d*l-c*u,f=c*h-d*o,m=u*o-l*h,g=r*p+a*f+s*m;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const A=1/g;return i[0]=p*A,i[1]=(s*u-d*a)*A,i[2]=(c*a-s*l)*A,i[3]=f*A,i[4]=(d*r-s*h)*A,i[5]=(s*o-c*r)*A,i[6]=m*A,i[7]=(a*h-u*r)*A,i[8]=(l*r-a*o)*A,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).getInverse(this).transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),l=Math.sin(r);this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1)}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*l,i[6]=e*s+n*c,i[1]=-n*r+e*o,i[4]=-n*a+e*l,i[7]=-n*s+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}}class ri{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new $n(1/0,1/0,1/0),this.max=void 0!==e?e:new $n(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],h=t[o+2];l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),h=t.getZ(o);l<e&&(e=l),c<n&&(n=c),h<i&&(i=h),l>r&&(r=l),c>a&&(a=c),h>s&&(s=h)}return this.min.set(e,n,i),this.max.set(r,a,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=si.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new $n),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new $n),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),oi.copy(e.boundingBox),oi.applyMatrix4(t.matrixWorld),this.union(oi));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new $n),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,si),si.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(fi),mi.subVectors(this.max,fi),li.subVectors(t.a,fi),ci.subVectors(t.b,fi),hi.subVectors(t.c,fi),ui.subVectors(ci,li),di.subVectors(hi,ci),pi.subVectors(li,hi);let e=[0,-ui.z,ui.y,0,-di.z,di.y,0,-pi.z,pi.y,ui.z,0,-ui.x,di.z,0,-di.x,pi.z,0,-pi.x,-ui.y,ui.x,0,-di.y,di.x,0,-pi.y,pi.x,0];return!!v(e,li,ci,hi,mi)&&(e=[1,0,0,0,1,0,0,0,1],!!v(e,li,ci,hi,mi)&&(gi.crossVectors(ui,di),e=[gi.x,gi.y,gi.z],v(e,li,ci,hi,mi)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new $n),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return si.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(si).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(ai[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ai[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ai[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ai[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ai[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ai[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ai[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ai[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ai)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function v(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){Ai.fromArray(t,a);const s=r.x*Math.abs(Ai.x)+r.y*Math.abs(Ai.y)+r.z*Math.abs(Ai.z),o=e.dot(Ai),l=n.dot(Ai),c=i.dot(Ai);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const ai=[new $n,new $n,new $n,new $n,new $n,new $n,new $n,new $n],si=new $n,oi=new ri,li=new $n,ci=new $n,hi=new $n,ui=new $n,di=new $n,pi=new $n,fi=new $n,mi=new $n,gi=new $n,Ai=new $n,vi=new ri;class _i{constructor(t,e){this.center=void 0!==t?t:new $n,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):vi.setFromPoints(t).getCenter(n);let i=0;for(let e=0,r=t.length;e<r;e++)i=Math.max(i,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new $n),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new ri),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}class xi{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new xi).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/wi.setFromMatrixColumn(t,0).length(),r=1/wi.setFromMatrixColumn(t,1).length(),a=1/wi.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-s*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*c,e[9]=r-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=a*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Mi,t,bi)}lookAt(t,e,n){const i=this.elements;return Ti.subVectors(t,e),0===Ti.lengthSq()&&(Ti.z=1),Ti.normalize(),Si.crossVectors(n,Ti),0===Si.lengthSq()&&(1===Math.abs(n.z)?Ti.x+=1e-4:Ti.z+=1e-4,Ti.normalize(),Si.crossVectors(n,Ti)),Si.normalize(),Ei.crossVectors(Ti,Si),i[0]=Si.x,i[4]=Ei.x,i[8]=Ti.x,i[1]=Si.y,i[5]=Ei.y,i[9]=Ti.y,i[2]=Si.z,i[6]=Ei.z,i[10]=Ti.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],A=n[3],v=n[7],_=n[11],x=n[15],w=i[0],y=i[4],M=i[8],b=i[12],S=i[1],E=i[5],T=i[9],P=i[13],D=i[2],C=i[6],L=i[10],R=i[14],F=i[3],B=i[7],N=i[11],I=i[15];return r[0]=a*w+s*S+o*D+l*F,r[4]=a*y+s*E+o*C+l*B,r[8]=a*M+s*T+o*L+l*N,r[12]=a*b+s*P+o*R+l*I,r[1]=c*w+h*S+u*D+d*F,r[5]=c*y+h*E+u*C+d*B,r[9]=c*M+h*T+u*L+d*N,r[13]=c*b+h*P+u*R+d*I,r[2]=p*w+f*S+m*D+g*F,r[6]=p*y+f*E+m*C+g*B,r[10]=p*M+f*T+m*L+g*N,r[14]=p*b+f*P+m*R+g*I,r[3]=A*w+v*S+_*D+x*F,r[7]=A*y+v*E+_*C+x*B,r[11]=A*M+v*T+_*L+x*N,r[15]=A*b+v*P+_*R+x*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*a*u-i*a*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*s*d-r*a*h+n*a*d+r*s*c-n*l*c)+t[15]*(-i*s*c-e*o*h+e*s*u+i*a*h-n*a*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}getInverse(t,e){void 0!==e&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=t.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],A=i[13],v=i[14],_=i[15],x=p*v*u-A*f*u+A*h*m-c*v*m-p*h*_+c*f*_,w=g*f*u-d*v*u-g*h*m+l*v*m+d*h*_-l*f*_,y=d*A*u-g*p*u+g*c*m-l*A*m-d*c*_+l*p*_,M=g*p*h-d*A*h-g*c*f+l*A*f+d*c*v-l*p*v,b=r*x+a*w+s*y+o*M;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/b;return n[0]=x*S,n[1]=(A*f*o-p*v*o-A*s*m+a*v*m+p*s*_-a*f*_)*S,n[2]=(c*v*o-A*h*o+A*s*u-a*v*u-c*s*_+a*h*_)*S,n[3]=(p*h*o-c*f*o-p*s*u+a*f*u+c*s*m-a*h*m)*S,n[4]=w*S,n[5]=(d*v*o-g*f*o+g*s*m-r*v*m-d*s*_+r*f*_)*S,n[6]=(g*h*o-l*v*o-g*s*u+r*v*u+l*s*_-r*h*_)*S,n[7]=(l*f*o-d*h*o+d*s*u-r*f*u-l*s*m+r*h*m)*S,n[8]=y*S,n[9]=(g*p*o-d*A*o-g*a*m+r*A*m+d*a*_-r*p*_)*S,n[10]=(l*A*o-g*c*o+g*a*u-r*A*u-l*a*_+r*c*_)*S,n[11]=(d*c*o-l*p*o-d*a*u+r*p*u+l*a*m-r*c*m)*S,n[12]=M*S,n[13]=(d*A*s-g*p*s+g*a*f-r*A*f-d*a*v+r*p*v)*S,n[14]=(g*c*s-l*A*s-g*a*h+r*A*h+l*a*v-r*c*v)*S,n[15]=(l*p*s-d*c*s+d*a*h-r*p*h-l*a*f+r*c*f)*S,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,h=s+s,u=r*l,d=r*c,p=r*h,f=a*c,m=a*h,g=s*h,A=o*l,v=o*c,_=o*h,x=n.x,w=n.y,y=n.z;return i[0]=(1-(f+g))*x,i[1]=(d+_)*x,i[2]=(p-v)*x,i[3]=0,i[4]=(d-_)*w,i[5]=(1-(u+g))*w,i[6]=(m+A)*w,i[7]=0,i[8]=(p+v)*y,i[9]=(m-A)*y,i[10]=(1-(u+f))*y,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=wi.set(i[0],i[1],i[2]).length();const a=wi.set(i[4],i[5],i[6]).length(),s=wi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],yi.copy(this);const o=1/r,l=1/a,c=1/s;return yi.elements[0]*=o,yi.elements[1]*=o,yi.elements[2]*=o,yi.elements[4]*=l,yi.elements[5]*=l,yi.elements[6]*=l,yi.elements[8]*=c,yi.elements[9]*=c,yi.elements[10]*=c,e.setFromRotationMatrix(yi),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,i,r,a){const s=this.elements,o=1/(e-t),l=1/(n-i),c=1/(a-r),h=(e+t)*o,u=(n+i)*l,d=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const wi=new $n,yi=new xi,Mi=new $n(0,0,0),bi=new $n(1,1,1),Si=new $n,Ei=new $n,Ti=new $n;class Pi{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Di{constructor(t=0,e=0,n=0,i=Di.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const i=Xn.clamp,r=t.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(i(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ci.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ci,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return Li.setFromEuler(this),this.setFromQuaternion(Li,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new $n(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Di.DefaultOrder="XYZ",Di.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const Ci=new xi,Li=new Kn;class Ri{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Fi=0;const Bi=new $n,Ni=new Kn,Ii=new xi,Oi=new $n,Ui=new $n,zi=new $n,ki=new Kn,Gi=new $n(1,0,0),Hi=new $n(0,1,0),Wi=new $n(0,0,1),Vi={type:"added"},ji={type:"removed"};function _(){Object.defineProperty(this,"id",{value:Fi++}),this.uuid=Xn.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_.DefaultUp.clone();const t=new $n,e=new Di,n=new Kn,i=new $n(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xi},normalMatrix:{value:new ii}}),this.matrix=new xi,this.matrixWorld=new xi,this.matrixAutoUpdate=_.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Ri,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}_.DefaultUp=new $n(0,1,0),_.DefaultMatrixAutoUpdate=!0,_.prototype=Object.assign(Object.create(f.prototype),{constructor:_,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Ni.setFromAxisAngle(t,e),this.quaternion.multiply(Ni),this},rotateOnWorldAxis:function(t,e){return Ni.setFromAxisAngle(t,e),this.quaternion.premultiply(Ni),this},rotateX:function(t){return this.rotateOnAxis(Gi,t)},rotateY:function(t){return this.rotateOnAxis(Hi,t)},rotateZ:function(t){return this.rotateOnAxis(Wi,t)},translateOnAxis:function(t,e){return Bi.copy(t).applyQuaternion(this.quaternion),this.position.add(Bi.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Gi,t)},translateY:function(t){return this.translateOnAxis(Hi,t)},translateZ:function(t){return this.translateOnAxis(Wi,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Ii.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?Oi.copy(t):Oi.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ui.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ii.lookAt(Ui,Oi,this.up):Ii.lookAt(Oi,Ui,this.up),this.quaternion.setFromRotationMatrix(Ii),i&&(Ii.extractRotation(i.matrixWorld),Ni.setFromRotationMatrix(Ii),this.quaternion.premultiply(Ni.inverse()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Vi)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ji)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),Ii.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ii.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ii),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new $n),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new Kn),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ui,t,zi),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new $n),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ui,ki,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new $n),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});let Qi=0;const Xi=new xi,Yi=new _,qi=new $n;function x(){Object.defineProperty(this,"id",{value:Qi+=2}),this.uuid=Xn.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}x.prototype=Object.assign(Object.create(f.prototype),{constructor:x,isGeometry:!0,applyMatrix4:function(t){const e=(new ii).getNormalMatrix(t);for(let e=0,n=this.vertices.length;e<n;e++){this.vertices[e].applyMatrix4(t)}for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];n.normal.applyMatrix3(e).normalize();for(let t=0,i=n.vertexNormals.length;t<i;t++)n.vertexNormals[t].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Xi.makeRotationX(t),this.applyMatrix4(Xi),this},rotateY:function(t){return Xi.makeRotationY(t),this.applyMatrix4(Xi),this},rotateZ:function(t){return Xi.makeRotationZ(t),this.applyMatrix4(Xi),this},translate:function(t,e,n){return Xi.makeTranslation(t,e,n),this.applyMatrix4(Xi),this},scale:function(t,e,n){return Xi.makeScale(t,e,n),this.applyMatrix4(Xi),this},lookAt:function(t){return Yi.lookAt(t),Yi.updateMatrix(),this.applyMatrix4(Yi.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,i=t.attributes;if(void 0===i.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,a=i.normal,s=i.color,o=i.uv,l=i.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let t=0;t<r.count;t++)e.vertices.push((new $n).fromBufferAttribute(r,t)),void 0!==s&&e.colors.push((new Jn).fromBufferAttribute(s,t));function c(t,n,i,r){const c=void 0===s?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[i].clone()],h=void 0===a?[]:[(new $n).fromBufferAttribute(a,t),(new $n).fromBufferAttribute(a,n),(new $n).fromBufferAttribute(a,i)],u=new ni(t,n,i,h,c,r);e.faces.push(u),void 0!==o&&e.faceVertexUvs[0].push([(new Pi).fromBufferAttribute(o,t),(new Pi).fromBufferAttribute(o,n),(new Pi).fromBufferAttribute(o,i)]),void 0!==l&&e.faceVertexUvs[1].push([(new Pi).fromBufferAttribute(l,t),(new Pi).fromBufferAttribute(l,n),(new Pi).fromBufferAttribute(l,i)])}const h=t.groups;if(h.length>0)for(let t=0;t<h.length;t++){const e=h[t],i=e.start;for(let t=i,r=i+e.count;t<r;t+=3)void 0!==n?c(n.getX(t),n.getX(t+1),n.getX(t+2),e.materialIndex):c(t,t+1,t+2,e.materialIndex)}else if(void 0!==n)for(let t=0;t<n.count;t+=3)c(n.getX(t),n.getX(t+1),n.getX(t+2));else for(let t=0;t<r.count;t+=3)c(t,t+1,t+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(qi).negate(),this.translate(qi.x,qi.y,qi.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,i=new xi;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new $n,e=new $n;for(let n=0,i=this.faces.length;n<i;n++){const i=this.faces[n],r=this.vertices[i.a],a=this.vertices[i.b],s=this.vertices[i.c];t.subVectors(s,a),e.subVectors(r,a),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);const e=new Array(this.vertices.length);for(let t=0,n=this.vertices.length;t<n;t++)e[t]=new $n;if(t){const t=new $n,n=new $n;for(let i=0,r=this.faces.length;i<r;i++){const r=this.faces[i],a=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c];t.subVectors(o,s),n.subVectors(a,s),t.cross(n),e[r.a].add(t),e[r.b].add(t),e[r.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let t=0,n=this.vertices.length;t<n;t++)e[t].normalize();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],i=n.vertexNormals;3===i.length?(i[0].copy(e[n.a]),i[1].copy(e[n.b]),i[2].copy(e[n.c])):(i[0]=e[n.a].clone(),i[1]=e[n.b].clone(),i[2]=e[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(let t=0,n=e.vertexNormals.length;t<n;t++)e.__originalVertexNormals[t]?e.__originalVertexNormals[t].copy(e.vertexNormals[t]):e.__originalVertexNormals[t]=e.vertexNormals[t].clone()}const t=new x;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const t=this.morphNormals[e].faceNormals,n=this.morphNormals[e].vertexNormals;for(let e=0,i=this.faces.length;e<i;e++){const e=new $n,i={a:new $n,b:new $n,c:new $n};t.push(e),n.push(i)}}const n=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],i=n.faceNormals[t],r=n.vertexNormals[t];i.copy(e.normal),r.a.copy(e.vertexNormals[0]),r.b.copy(e.vertexNormals[1]),r.c.copy(e.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ri),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new _i),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let i;const r=this.vertices.length,a=this.vertices,s=t.vertices,o=this.faces,l=t.faces,c=this.colors,h=t.colors;void 0===n&&(n=0),void 0!==e&&(i=(new ii).getNormalMatrix(e));for(let t=0,n=s.length;t<n;t++){const n=s[t].clone();void 0!==e&&n.applyMatrix4(e),a.push(n)}for(let t=0,e=h.length;t<e;t++)c.push(h[t].clone());for(let t=0,e=l.length;t<e;t++){const e=l[t];let a,s;const c=e.vertexNormals,h=e.vertexColors,u=new ni(e.a+r,e.b+r,e.c+r);u.normal.copy(e.normal),void 0!==i&&u.normal.applyMatrix3(i).normalize();for(let t=0,e=c.length;t<e;t++)a=c[t].clone(),void 0!==i&&a.applyMatrix3(i).normalize(),u.vertexNormals.push(a);u.color.copy(e.color);for(let t=0,e=h.length;t<e;t++)s=h[t],u.vertexColors.push(s.clone());u.materialIndex=e.materialIndex+n,o.push(u)}for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],r=[];for(let t=0,e=i.length;t<e;t++)r.push(i[t].clone());this.faceVertexUvs[e].push(r)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){const t={},e=[],n=[],i=Math.pow(10,4);for(let r=0,a=this.vertices.length;r<a;r++){const a=this.vertices[r],s=Math.round(a.x*i)+"_"+Math.round(a.y*i)+"_"+Math.round(a.z*i);void 0===t[s]?(t[s]=r,e.push(this.vertices[r]),n[r]=e.length-1):n[r]=n[t[s]]}const r=[];for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.a=n[e.a],e.b=n[e.b],e.c=n[e.c];const i=[e.a,e.b,e.c];for(let e=0;e<3;e++)if(i[e]===i[(e+1)%3]){r.push(t);break}}for(let t=r.length-1;t>=0;t--){const e=r[t];this.faces.splice(e,1);for(let t=0,n=this.faceVertexUvs.length;t<n;t++)this.faceVertexUvs[t].splice(e,1)}const a=this.vertices.length-e.length;return this.vertices=e,a},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const n=t[e];this.vertices.push(new $n(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let n=0;n<e;n++)t[n]._id=n;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));const n=this.faceVertexUvs[0],i=this.faceVertexUvs[1];let r,a;n&&n.length===e&&(r=[]),i&&i.length===e&&(a=[]);for(let s=0;s<e;s++){const e=t[s]._id;r&&r.push(n[e]),a&&a.push(i[e])}r&&(this.faceVertexUvs[0]=r),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}const e=[];for(let t=0;t<this.vertices.length;t++){const n=this.vertices[t];e.push(n.x,n.y,n.z)}const n=[],i=[],r={},a=[],s={},o=[],l={};for(let t=0;t<this.faces.length;t++){const e=this.faces[t],i=!0,r=!1,a=void 0!==this.faceVertexUvs[0][t],s=e.normal.length()>0,o=e.vertexNormals.length>0,l=1!==e.color.r||1!==e.color.g||1!==e.color.b,p=e.vertexColors.length>0;let f=0;if(f=c(f,0,0),f=c(f,1,i),f=c(f,2,r),f=c(f,3,a),f=c(f,4,s),f=c(f,5,o),f=c(f,6,l),f=c(f,7,p),n.push(f),n.push(e.a,e.b,e.c),n.push(e.materialIndex),a){const e=this.faceVertexUvs[0][t];n.push(d(e[0]),d(e[1]),d(e[2]))}if(s&&n.push(h(e.normal)),o){const t=e.vertexNormals;n.push(h(t[0]),h(t[1]),h(t[2]))}if(l&&n.push(u(e.color)),p){const t=e.vertexColors;n.push(u(t[0]),u(t[1]),u(t[2]))}}function c(t,e,n){return n?t|1<<e:t&~(1<<e)}function h(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==r[e]||(r[e]=i.length/3,i.push(t.x,t.y,t.z)),r[e]}function u(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==s[e]||(s[e]=a.length,a.push(t.getHex())),s[e]}function d(t){const e=t.x.toString()+t.y.toString();return void 0!==l[e]||(l[e]=o.length/2,o.push(t.x,t.y)),l[e]}return t.data={},t.data.vertices=e,t.data.normals=i,a.length>0&&(t.data.colors=a),o.length>0&&(t.data.uvs=[o]),t.data.faces=n,t},clone:function(){return(new x).copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let t=0,n=e.length;t<n;t++)this.vertices.push(e[t].clone());const n=t.colors;for(let t=0,e=n.length;t<e;t++)this.colors.push(n[t].clone());const i=t.faces;for(let t=0,e=i.length;t<e;t++)this.faces.push(i[t].clone());for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,i=n.length;t<i;t++){const i=n[t],r=[];for(let t=0,e=i.length;t<e;t++){const e=i[t];r.push(e.clone())}this.faceVertexUvs[e].push(r)}}const r=t.morphTargets;for(let t=0,e=r.length;t<e;t++){const e={};if(e.name=r[t].name,void 0!==r[t].vertices){e.vertices=[];for(let n=0,i=r[t].vertices.length;n<i;n++)e.vertices.push(r[t].vertices[n].clone())}if(void 0!==r[t].normals){e.normals=[];for(let n=0,i=r[t].normals.length;n<i;n++)e.normals.push(r[t].normals[n].clone())}this.morphTargets.push(e)}const a=t.morphNormals;for(let t=0,e=a.length;t<e;t++){const e={};if(void 0!==a[t].vertexNormals){e.vertexNormals=[];for(let n=0,i=a[t].vertexNormals.length;n<i;n++){const i=a[t].vertexNormals[n],r={};r.a=i.a.clone(),r.b=i.b.clone(),r.c=i.c.clone(),e.vertexNormals.push(r)}}if(void 0!==a[t].faceNormals){e.faceNormals=[];for(let n=0,i=a[t].faceNormals.length;n<i;n++)e.faceNormals.push(a[t].faceNormals[n].clone())}this.morphNormals.push(e)}const s=t.skinWeights;for(let t=0,e=s.length;t<e;t++)this.skinWeights.push(s[t].clone());const o=t.skinIndices;for(let t=0,e=o.length;t<e;t++)this.skinIndices.push(o[t].clone());const l=t.lineDistances;for(let t=0,e=l.length;t<e;t++)this.lineDistances.push(l[t]);const c=t.boundingBox;null!==c&&(this.boundingBox=c.clone());const h=t.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Zi{constructor(t=0,e=0,n=0,i=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=t.elements,s=a[0],o=a[4],l=a[8],c=a[1],h=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(o-c)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(o+c)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(s+1)/2,a=(h+1)/2,m=(f+1)/2,g=(o+c)/4,A=(l+d)/4,v=(u+p)/4;return t>a&&t>m?t<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=g/n,r=A/n):a>m?a<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(a),n=g/i,r=v/i):m<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(m),n=A/r,i=v/r),this.set(n,i,r,e),this}let m=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(c-o)*(c-o));return Math.abs(m)<.001&&(m=1),this.x=(p-u)/m,this.y=(l-d)/m,this.z=(c-o)/m,this.w=Math.acos((s+h+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}const Ji=0,Ki=1,$i=2,tr=1,er=2,nr=3,ir=0,rr=1,ar=2,sr=1,or=0,lr=1,cr=2,hr=3,ur=4,dr=5,pr=100,fr=101,mr=102,gr=103,Ar=104,vr=200,_r=201,xr=202,wr=203,yr=204,Mr=205,br=206,Sr=207,Er=208,Tr=209,Pr=210,Dr=0,Cr=1,Lr=2,Rr=3,Fr=4,Br=5,Nr=6,Ir=7,Or=0,Ur=1,zr=2,kr=0,Gr=1,Hr=2,Wr=3,Vr=4,jr=5,Qr=300,Xr=301,Yr=302,qr=303,Zr=304,Jr=306,Kr=307,$r=1e3,ta=1001,ea=1002,na=1003,ia=1004,ra=1005,aa=1006,sa=1007,oa=1008,la=1009,ca=1010,ha=1011,ua=1012,da=1013,pa=1014,fa=1015,ma=1016,ga=1017,Aa=1018,va=1019,_a=1020,xa=1021,wa=1022,ya=1023,Ma=1024,ba=1025,Sa=1026,Ea=1027,Ta=1028,Pa=1029,Da=1030,Ca=1031,La=1032,Ra=1033,Fa=33776,Ba=33777,Na=33778,Ia=33779,Oa=35840,Ua=35841,za=35842,ka=35843,Ga=36196,Ha=37492,Wa=37496,Va=37808,ja=37809,Qa=37810,Xa=37811,Ya=37812,qa=37813,Za=37814,Ja=37815,Ka=37816,$a=37817,ts=37818,es=37819,ns=37820,is=37821,rs=36492,as=37840,ss=37841,os=37842,ls=37843,cs=37844,hs=37845,us=37846,ds=37847,ps=37848,fs=37849,ms=37850,gs=37851,As=37852,vs=37853,_s=3e3,xs=3001,ws=3007,ys=3002,Ms=3003,bs=3004,Ss=3005,Es=3006,Ts=3200,Ps=3201,Ds=0,Cs=1,Ls=7680,Rs=519,Fs=35044,Bs="300 es",Ns=new $n,Is=new Pi;function w(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Fs,this.updateRange={offset:0,count:-1},this.version=0}function y(t,e,n){w.call(this,new Int8Array(t),e,n)}function M(t,e,n){w.call(this,new Uint8Array(t),e,n)}function b(t,e,n){w.call(this,new Uint8ClampedArray(t),e,n)}function S(t,e,n){w.call(this,new Int16Array(t),e,n)}function E(t,e,n){w.call(this,new Uint16Array(t),e,n)}function T(t,e,n){w.call(this,new Int32Array(t),e,n)}function P(t,e,n){w.call(this,new Uint32Array(t),e,n)}function D(t,e,n){w.call(this,new Float32Array(t),e,n)}function C(t,e,n){w.call(this,new Float64Array(t),e,n)}Object.defineProperty(w.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(w.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new Jn),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new Pi),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new $n),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let r=t[i];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new Zi),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Is.fromBufferAttribute(this,e),Is.applyMatrix3(t),this.setXY(e,Is.x,Is.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ns.fromBufferAttribute(this,e),Ns.applyMatrix3(t),this.setXYZ(e,Ns.x,Ns.y,Ns.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Ns.x=this.getX(e),Ns.y=this.getY(e),Ns.z=this.getZ(e),Ns.applyMatrix4(t),this.setXYZ(e,Ns.x,Ns.y,Ns.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Ns.x=this.getX(e),Ns.y=this.getY(e),Ns.z=this.getZ(e),Ns.applyNormalMatrix(t),this.setXYZ(e,Ns.x,Ns.y,Ns.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Ns.x=this.getX(e),Ns.y=this.getY(e),Ns.z=this.getZ(e),Ns.transformDirection(t),this.setXYZ(e,Ns.x,Ns.y,Ns.z);return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),y.prototype=Object.create(w.prototype),y.prototype.constructor=y,M.prototype=Object.create(w.prototype),M.prototype.constructor=M,b.prototype=Object.create(w.prototype),b.prototype.constructor=b,S.prototype=Object.create(w.prototype),S.prototype.constructor=S,E.prototype=Object.create(w.prototype),E.prototype.constructor=E,T.prototype=Object.create(w.prototype),T.prototype.constructor=T,P.prototype=Object.create(w.prototype),P.prototype.constructor=P,D.prototype=Object.create(w.prototype),D.prototype.constructor=D,C.prototype=Object.create(w.prototype),C.prototype.constructor=C;class Os{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const e=[];let n,i,r=void 0;const a=t.faces;for(i=0;i<a.length;i++){const t=a[i];t.materialIndex!==r&&(r=t.materialIndex,void 0!==n&&(n.count=3*i-n.start,e.push(n)),n={start:3*i,materialIndex:r})}void 0!==n&&(n.count=3*i-n.start,e.push(n)),this.groups=e}fromGeometry(t){const e=t.faces,n=t.vertices,i=t.faceVertexUvs,r=i[0]&&i[0].length>0,a=i[1]&&i[1].length>0,s=t.morphTargets,o=s.length;let l;if(o>0){l=[];for(let t=0;t<o;t++)l[t]={name:s[t].name,data:[]};this.morphTargets.position=l}const c=t.morphNormals,h=c.length;let u;if(h>0){u=[];for(let t=0;t<h;t++)u[t]={name:c[t].name,data:[]};this.morphTargets.normal=u}const d=t.skinIndices,p=t.skinWeights,f=d.length===n.length,m=p.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let t=0;t<e.length;t++){const g=e[t];this.vertices.push(n[g.a],n[g.b],n[g.c]);const A=g.vertexNormals;if(3===A.length)this.normals.push(A[0],A[1],A[2]);else{const t=g.normal;this.normals.push(t,t,t)}const v=g.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const t=g.color;this.colors.push(t,t,t)}if(!0===r){const e=i[0][t];void 0!==e?this.uvs.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new Pi,new Pi,new Pi))}if(!0===a){const e=i[1][t];void 0!==e?this.uvs2.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new Pi,new Pi,new Pi))}for(let t=0;t<o;t++){const e=s[t].vertices;l[t].data.push(e[g.a],e[g.b],e[g.c])}for(let e=0;e<h;e++){const n=c[e].vertexNormals[t];u[e].data.push(n.a,n.b,n.c)}f&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}function L(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}let Us=1;const zs=new xi,ks=new _,Gs=new $n,Hs=new ri,Ws=new ri,Vs=new $n;function R(){Object.defineProperty(this,"id",{value:Us+=2}),this.uuid=Xn.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}R.prototype=Object.assign(Object.create(f.prototype),{constructor:R,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(L(t)>65535?P:E)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new ii).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return zs.makeRotationX(t),this.applyMatrix4(zs),this},rotateY:function(t){return zs.makeRotationY(t),this.applyMatrix4(zs),this},rotateZ:function(t){return zs.makeRotationZ(t),this.applyMatrix4(zs),this},translate:function(t,e,n){return zs.makeTranslation(t,e,n),this.applyMatrix4(zs),this},scale:function(t,e,n){return zs.makeScale(t,e,n),this.applyMatrix4(zs),this},lookAt:function(t){return ks.lookAt(t),ks.updateMatrix(),this.applyMatrix4(ks.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gs).negate(),this.translate(Gs.x,Gs.y,Gs.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new D(3*e.vertices.length,3),n=new D(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new D(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new D(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Os).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new w(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new w(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new w(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new w(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new w(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const e in t.morphTargets){const n=[],i=t.morphTargets[e];for(let t=0,e=i.length;t<e;t++){const e=i[t],r=new D(3*e.data.length,3);r.name=e.name,n.push(r.copyVector3sArray(e.data))}this.morphAttributes[e]=n}if(t.skinIndices.length>0){const e=new D(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new D(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new ri);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new $n(-1/0,-1/0,-1/0),new $n(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Hs.setFromBufferAttribute(n),this.morphTargetsRelative?(Vs.addVectors(this.boundingBox.min,Hs.min),this.boundingBox.expandByPoint(Vs),Vs.addVectors(this.boundingBox.max,Hs.max),this.boundingBox.expandByPoint(Vs)):(this.boundingBox.expandByPoint(Hs.min),this.boundingBox.expandByPoint(Hs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new _i);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new $n,1/0);if(t){const n=this.boundingSphere.center;if(Hs.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ws.setFromBufferAttribute(n),this.morphTargetsRelative?(Vs.addVectors(Hs.min,Ws.min),Hs.expandByPoint(Vs),Vs.addVectors(Hs.max,Ws.max),Hs.expandByPoint(Vs)):(Hs.expandByPoint(Ws.min),Hs.expandByPoint(Ws.max))}Hs.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Vs.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Vs));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Vs.fromBufferAttribute(a,e),s&&(Gs.fromBufferAttribute(t,e),Vs.add(Gs)),i=Math.max(i,n.distanceToSquared(Vs))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new w(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new $n,r=new $n,a=new $n,s=new $n,o=new $n,l=new $n,c=new $n,h=new $n;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),s.add(c),o.add(c),l.add(c),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,s=e.count;t<s;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===t.attributes[i])continue;const r=n[i].array,a=t.attributes[i],s=a.array,o=a.itemSize*e,l=Math.min(s.length,r.length-o);for(let t=0,e=o;t<l;t++,e++)r[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Vs.fromBufferAttribute(t,e),Vs.normalize(),t.setXYZ(e,Vs.x,Vs.y,Vs.z)},toNonIndexed:function(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let t=0,r=e.length;t<r;t++){s=e[t]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new w(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new R,n=this.index.array,i=this.attributes;for(const r in i){const a=t(i[r],n);e.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let e=0,i=s.length;e<i;e++){const i=t(s[e],n);a.push(i)}e.morphAttributes[i]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,n=a.length;t<n;t++){const n=a[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),t.data.attributes[e]=r}const i={};let r=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],a=[];for(let e=0,i=n.length;e<i;e++){const i=n[e],r=i.toJSON(t.data);""!==i.name&&(r.name=i.name),a.push(r)}a.length>0&&(i[e]=a,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new R).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const t in i){const n=i[t];this.setAttribute(t,n.clone(e))}const r=t.morphAttributes;for(const t in r){const n=[],i=r[t];for(let t=0,r=i.length;t<r;t++)n.push(i[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class js extends R{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,n,i,r,a,p,f,m,g,A){const v=a/m,_=p/g,x=a/2,w=p/2,y=f/2,M=m+1,b=g+1;let S=0,E=0;const T=new $n;for(let a=0;a<b;a++){const s=a*_-w;for(let o=0;o<M;o++){const u=o*v-x;T[t]=u*i,T[e]=s*r,T[n]=y,l.push(T.x,T.y,T.z),T[t]=0,T[e]=0,T[n]=f>0?1:-1,c.push(T.x,T.y,T.z),h.push(o/m),h.push(1-a/g),S+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=u+e+M*t,i=u+e+M*(t+1),r=u+(e+1)+M*(t+1),a=u+(e+1)+M*t;o.push(n,i,a),o.push(i,r,a),E+=6}s.addGroup(d,E,A),d+=E,u+=S}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new D(l,3)),this.setAttribute("normal",new D(c,3)),this.setAttribute("uv",new D(h,2))}}const Qs=new $n,Xs=new $n,Ys=new $n,qs=new $n,Zs=new $n,Js=new $n,Ks=new $n;class $s{constructor(t,e){this.origin=void 0!==t?t:new $n,this.direction=void 0!==e?e:new $n(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new $n),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Qs)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new $n),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Qs.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Qs.copy(this.direction).multiplyScalar(e).add(this.origin),Qs.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Xs.copy(t).add(e).multiplyScalar(.5),Ys.copy(e).sub(t).normalize(),qs.copy(this.origin).sub(Xs);const r=.5*t.distanceTo(e),a=-this.direction.dot(Ys),s=qs.dot(this.direction),o=-qs.dot(Ys),l=qs.lengthSq(),c=Math.abs(1-a*a);let h,u,d,p;if(c>0)if(h=a*o-s,u=a*s-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+a*u+2*s)+u*(a*h+u+2*o)+l}else u=r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Ys).multiplyScalar(u).add(Xs),d}intersectSphere(t,e){Qs.subVectors(t.center,this.origin);const n=Qs.dot(this.direction),i=Qs.dot(Qs)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Qs)}intersectTriangle(t,e,n,i,r){Zs.subVectors(e,t),Js.subVectors(n,t),Ks.crossVectors(Zs,Js);let a,s=this.direction.dot(Ks);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}qs.subVectors(this.origin,t);const o=a*this.direction.dot(Js.crossVectors(qs,Js));if(o<0)return null;const l=a*this.direction.dot(Zs.cross(qs));if(l<0)return null;if(o+l>s)return null;const c=-a*qs.dot(Ks);return c<0?null:this.at(c/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}const to=new $n,eo=new $n,no=new ii;class io{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new $n(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=to.subVectors(n,e).cross(eo.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new $n),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new $n);const n=t.delta(to),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?void 0:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new $n),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||no.getNormalMatrix(t),i=this.coplanarPoint(to).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const ro=new $n,ao=new $n,so=new $n,oo=new $n,lo=new $n,co=new $n,ho=new $n,uo=new $n,po=new $n,fo=new $n;class mo{constructor(t,e,n){this.a=void 0!==t?t:new $n,this.b=void 0!==e?e:new $n,this.c=void 0!==n?n:new $n}static getNormal(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new $n),i.subVectors(n,e),ro.subVectors(t,e),i.cross(ro);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){ro.subVectors(i,e),ao.subVectors(n,e),so.subVectors(t,e);const a=ro.dot(ro),s=ro.dot(ao),o=ro.dot(so),l=ao.dot(ao),c=ao.dot(so),h=a*l-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new $n),0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*o-s*c)*u,p=(a*c-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,oo),oo.x>=0&&oo.y>=0&&oo.x+oo.y<=1}static getUV(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,oo),o.set(0,0),o.addScaledVector(r,oo.x),o.addScaledVector(a,oo.y),o.addScaledVector(s,oo.z),o}static isFrontFacing(t,e,n,i){return ro.subVectors(n,e),ao.subVectors(t,e),ro.cross(ao).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ro.subVectors(this.c,this.b),ao.subVectors(this.a,this.b),.5*ro.cross(ao).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new $n),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return mo.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new io),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return mo.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return mo.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return mo.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return mo.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new $n);const n=this.a,i=this.b,r=this.c;let a,s;lo.subVectors(i,n),co.subVectors(r,n),uo.subVectors(t,n);const o=lo.dot(uo),l=co.dot(uo);if(o<=0&&l<=0)return e.copy(n);po.subVectors(t,i);const c=lo.dot(po),h=co.dot(po);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(lo,a);fo.subVectors(t,r);const d=lo.dot(fo),p=co.dot(fo);if(p>=0&&d<=p)return e.copy(r);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(n).addScaledVector(co,s);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return ho.subVectors(r,i),s=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(ho,s);const g=1/(m+f+u);return a=f*g,s=u*g,e.copy(n).addScaledVector(lo,a).addScaledVector(co,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let go=0;function F(){Object.defineProperty(this,"id",{value:go++}),this.uuid=Xn.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=lr,this.side=ir,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=yr,this.blendDst=Mr,this.blendEquation=pr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Rs,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ls,this.stencilZFail=Ls,this.stencilZPass=Ls,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function B(t){F.call(this),this.type="MeshBasicMaterial",this.color=new Jn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Or,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}F.prototype=Object.assign(Object.create(f.prototype),{constructor:F,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===sr;continue}const i=this[e];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==lr&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==ir&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(F.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),B.prototype=Object.create(F.prototype),B.prototype.constructor=B,B.prototype.isMeshBasicMaterial=!0,B.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Ao=new xi,vo=new $s,_o=new _i,xo=new $n,wo=new $n,yo=new $n,Mo=new $n,bo=new $n,So=new $n,Eo=new $n,To=new $n,Po=new $n,Do=new Pi,Co=new Pi,Lo=new Pi,Ro=new $n,Fo=new $n;function N(t,e){_.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new R,this.material=void 0!==e?e:new B,this.updateMorphTargets()}function I(t,e,n,i,r,a,s,o){let l;if(l=e.side===rr?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,e.side!==ar,o),null===l)return null;Fo.copy(o),Fo.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Fo);return c<n.near||c>n.far?null:{distance:c,point:Fo.clone(),object:t}}function O(t,e,n,i,r,a,s,o,l,c,h,u){xo.fromBufferAttribute(r,c),wo.fromBufferAttribute(r,h),yo.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(e.morphTargets&&a&&d){Eo.set(0,0,0),To.set(0,0,0),Po.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],n=a[t];0!==e&&(Mo.fromBufferAttribute(n,c),bo.fromBufferAttribute(n,h),So.fromBufferAttribute(n,u),s?(Eo.addScaledVector(Mo,e),To.addScaledVector(bo,e),Po.addScaledVector(So,e)):(Eo.addScaledVector(Mo.sub(xo),e),To.addScaledVector(bo.sub(wo),e),Po.addScaledVector(So.sub(yo),e)))}xo.add(Eo),wo.add(To),yo.add(Po)}t.isSkinnedMesh&&(t.boneTransform(c,xo),t.boneTransform(h,wo),t.boneTransform(u,yo));const p=I(t,e,n,i,xo,wo,yo,Ro);if(p){o&&(Do.fromBufferAttribute(o,c),Co.fromBufferAttribute(o,h),Lo.fromBufferAttribute(o,u),p.uv=mo.getUV(Ro,xo,wo,yo,Do,Co,Lo,new Pi)),l&&(Do.fromBufferAttribute(l,c),Co.fromBufferAttribute(l,h),Lo.fromBufferAttribute(l,u),p.uv2=mo.getUV(Ro,xo,wo,yo,Do,Co,Lo,new Pi));const t=new ni(c,h,u);mo.getNormal(xo,wo,yo,t.normal),p.face=t}return p}function U(t){F.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Jn(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Jn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ds,this.normalScale=new Pi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}N.prototype=Object.assign(Object.create(_.prototype),{constructor:N,isMesh:!0,copy:function(t){return _.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),_o.copy(n.boundingSphere),_o.applyMatrix4(r),!1===t.ray.intersectsSphere(_o))return;if(Ao.getInverse(r),vo.copy(t.ray).applyMatrix4(Ao),null!==n.boundingBox&&!1===vo.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative,c=n.attributes.uv,h=n.attributes.uv2,u=n.groups,d=n.drawRange;if(null!==r)if(Array.isArray(i))for(let n=0,p=u.length;n<p;n++){const p=u[n],f=i[p.materialIndex];for(let n=Math.max(p.start,d.start),i=Math.min(p.start+p.count,d.start+d.count);n<i;n+=3){const i=r.getX(n),u=r.getX(n+1),d=r.getX(n+2);a=O(this,f,t,vo,s,o,l,c,h,i,u,d),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=p.materialIndex,e.push(a))}}else{for(let n=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);n<u;n+=3){const u=r.getX(n),d=r.getX(n+1),p=r.getX(n+2);a=O(this,i,t,vo,s,o,l,c,h,u,d,p),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}}else if(void 0!==s)if(Array.isArray(i))for(let n=0,r=u.length;n<r;n++){const r=u[n],p=i[r.materialIndex];for(let n=Math.max(r.start,d.start),i=Math.min(r.start+r.count,d.start+d.count);n<i;n+=3){a=O(this,p,t,vo,s,o,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=r.materialIndex,e.push(a))}}else{for(let n=Math.max(0,d.start),r=Math.min(s.count,d.start+d.count);n<r;n+=3){a=O(this,i,t,vo,s,o,l,c,h,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}}}else if(n.isGeometry){const r=Array.isArray(i),s=n.vertices,o=n.faces;let l;const c=n.faceVertexUvs[0];c.length>0&&(l=c);for(let n=0,c=o.length;n<c;n++){const c=o[n],h=r?i[c.materialIndex]:i;if(void 0===h)continue;const u=s[c.a],d=s[c.b],p=s[c.c];if(a=I(this,h,t,vo,u,d,p,Ro),a){if(l&&l[n]){const t=l[n];Do.copy(t[0]),Co.copy(t[1]),Lo.copy(t[2]),a.uv=mo.getUV(Ro,u,d,p,Do,Co,Lo,new Pi)}a.face=c,a.faceIndex=n,e.push(a)}}}}}),U.prototype=Object.create(F.prototype),U.prototype.constructor=U,U.prototype.isMeshStandardMaterial=!0,U.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};const Bo=new Map;function z(t){const e=Object.keys(t).map(e=>`${e}:${t[e]}`).join(",");if(!Bo.has(e)){const n=t.lit;"lit"in t&&delete t.lit,"name"in t&&delete t.name,!1!==n?Bo.set(e,new U(t)):Bo.set(e,new B(t))}return Bo.get(e)}const No=new js(1,1,1,1,1,1);No.name="CubeGeom";const Io=No.clone();Io.name="InvertedCubeGeom",function(t){const e=t.attributes.position,n=t.attributes.normal,i=t.attributes.uv;for(let t=0;t<n.count;++t){const r=t*n.itemSize,a=t*n.itemSize+1,s=t*n.itemSize+2,o=n.array[r],l=n.array[a],c=n.array[s],h=Math.abs(o),u=Math.abs(l),d=Math.abs(c),p=e.array[r],f=e.array[a],m=e.array[s],g=Math.abs(p),A=Math.abs(f),v=Math.abs(m),_=t*i.itemSize,x=t*i.itemSize+1;let w=i.array[_],y=i.array[x],M=0,b=h,S=g;u>b&&(M=1,b=u,S=A),d>b&&(M=2,b=d,S=v),0===M?p<0?(w=-m,y=f):(w=m,y=f):1===M?f<0?(w=p,y=-m):(w=p,y=m):m<0?(w=p,y=f):(w=-p,y=f),w=(w/S+1)/8,y=(y/S+1)/6,0===M?p<0?(w+=0,y+=1/3):(w+=.5,y+=1/3):1===M?f<0?(w+=.25,y+=0):(w+=.25,y+=2/3):m<0?(w+=.25,y+=1/3):(w+=.75,y+=1/3),i.array[_]=w,i.array[x]=y}}(Io);class Oo extends N{constructor(t,e,n,i,r){super(No,z(Object.assign({transparent:!0,opacity:1},r,{color:t}))),this.scale.set(e,n,i)}}class Uo extends Oo{constructor(t=16711680){super(t,.1,.1,.1);const e=new Oo(16711680,3,.1,.1),n=new Oo(65280,.1,3,.1),i=new Oo(255,.1,.1,3);e.position.x=1.5,n.position.y=1.5,i.position.z=1.5,this.add(e,n,i)}}const zo=function(){try{return new window.EventTarget,class extends EventTarget{constructor(){super()}}}catch(t){const e=new WeakMap;return class{constructor(){e.set(this,new Map)}addEventListener(t,i,r){if(n(i)){const n=e.get(this);n.has(t)||n.set(t,[]);const a=n.get(t);a.find(t=>t.callback===i)||a.push({target:this,callback:i,options:r})}}removeEventListener(t,i){if(n(i)){const n=e.get(this);if(n.has(t)){const e=n.get(t),r=e.findIndex(t=>t.callback===i);r>=0&&function(t,e){if(!(t instanceof Array))throw new Error("Must provide an array as the first parameter.");t.splice(e,1)}(e,r)}}}dispatchEvent(t){const n=e.get(this);if(n.has(t.type)){const e=n.get(t.type);for(let n of e)n.options&&n.options.once&&this.removeEventListener(t.type,n.callback),n.callback.call(n.target,t);return!t.defaultPrevented}return!0}}}}();function k(t,e,n,i=1){const r=t.imageSmoothingEnabled,a=t.textBaseline,s=t.textAlign,o=t.font,l=function(t,e,n,i=1){return e=Math.floor(e*i),n=Math.floor(n*i),(t.width!=e||t.height!=n)&&(t.width=e,t.height=n,!0)}(t.canvas,e,n,i);return l&&(t.imageSmoothingEnabled=r,t.textBaseline=a,t.textAlign=s,t.font=o),l}class ko{constructor(t,e,...n){this.key=t,this.value=e,this.tags=n.map(t=>t.toLocaleUpperCase()),Object.freeze(this)}apply(t){0===this.tags.length||this.tags.indexOf(t.tagName)>-1?"style"===this.key?Object.assign(t[this.key],this.value):s(H)?this.value?t.setAttribute(this.key,""):t.removeAttribute(this.key):t[this.key]=this.value:console.warn(`Element ${t.tagName} does not support Attribute ${this.key}`)}}function G(t){return new ko("height",t,"canvas","embed","iframe","img","input","object","video")}function H(t){return new ko("value",t,"button","data","input","li","meter","option","progress","param")}function W(t){return new ko("width",t,"canvas","embed","iframe","img","input","object","video")}class Go{constructor(t,e){this.key=t,this.value=e,Object.freeze(this)}apply(t){t.style[this.key]=this.value}}class Ho{constructor(...t){this.set=new Map;const e=(t,e)=>{e||s(e)?this.set.set(t,e):this.set.has(t)&&this.set.delete(t)};for(let n of t)if(n instanceof Go){const{key:t,value:i}=n;e(t,i)}else if(n instanceof Ho)for(let t of n.set.entries()){const[n,i]=t;e(n,i)}}apply(t){for(let e of this.set.entries()){const[n,i]=e;t.style[n]=i}}}function V(t){return new Go("fontFamily",t)}V("'Droid Sans Mono', 'Consolas', 'Lucida Console', 'Courier New', 'Courier', monospace"),V("-apple-system, '.SFNSText-Regular', 'San Francisco', 'Roboto', 'Segoe UI', 'Helvetica Neue', 'Lucida Grande', sans-serif");class Wo{constructor(t,e,i){if(!n(e))throw new Error("A function instance is required for this parameter");this.name=t,this.callback=e,this.opts=i,Object.freeze(this)}add(t){t.addEventListener(this.name,this.callback,this.opts)}remove(t){t.removeEventListener(this.name,this.callback)}}const Vo=["change","click","contextmenu","dblclick","mouseup","pointerup","reset","submit","touchend"];function j(t,...e){let a=null;for(let t=0;t<e.length;++t){const i=e[t];n(i)&&(e[t]=i(!0)),i instanceof ko&&"id"===i.key&&(a=document.getElementById(i.value))}null===a&&(a=document.createElement(t));for(let t of e)null!=t&&(i(t)||r(t)||s(t)||t instanceof Date?a.appendChild(document.createTextNode(t)):t instanceof Node?a.appendChild(t):t.element instanceof Node?a.appendChild(t.element):t instanceof ko||t instanceof Go||t instanceof Ho?t.apply(a):t instanceof Wo?t.add(a):console.trace(`Skipping ${t}: unsupported value type.`,t));return a}function Q(...t){return function(...t){return j("button",...t)}(...t,function(t){return new ko("type",t,"button","input","command","embed","object","script","source","style","menu")}("button"))}function X(...t){return j("canvas",...t)}const jo="The quick brown fox jumps over the lazy dog",Qo=[];function Y(t){const e=[];return t.fontStyle&&"normal"!==t.fontStyle&&e.push(t.fontStyle),t.fontVariant&&"normal"!==t.fontVariant&&e.push(t.fontVariant),t.fontWeight&&"normal"!==t.fontWeight&&e.push(t.fontWeight),e.push(t.fontSize+"px"),e.push(t.fontFamily),e.join(" ")}const Xo=new WeakMap,Yo=new Event("redrawn");class qo{constructor(){this.color="black",this.bgColor=null,this.fontStyle="normal",this.fontVariant="normal",this.fontWeight="normal",this.fontFamily="sans-serif",this.fontSize=20,this.scale=1,this.padding={top:0,right:0,bottom:0,left:0},this.value=null,this.canvas=function(t,e,...n){return window.OffscreenCanvas?new OffscreenCanvas(t,e):X(...n,W(t),G(e))}(10,10),this.g=this.canvas.getContext("2d"),this.g.textBaseline="top"}redraw(t){if(this.g.clearRect(0,0,this.canvas.width,this.canvas.height),this.fontFamily&&this.fontSize&&this.color&&this.scale&&this.value){const e=this.fontSize*this.scale,n=Y(this);this.g.font=n;const i=this.g.measureText(this.value);let r=0,a=0,s=i.width,o=e;void 0!==i.actualBoundingBoxLeft&&(a=i.actualBoundingBoxAscent,s=i.actualBoundingBoxRight-i.actualBoundingBoxLeft,o=i.actualBoundingBoxDescent+i.actualBoundingBoxAscent),r+=this.padding.left,a+=this.padding.top,s+=this.padding.right+this.padding.left,o+=this.padding.top+this.padding.bottom,k(this.g,s,o),this.bgColor?(this.g.fillStyle=this.bgColor,this.g.fillRect(0,0,this.canvas.width,this.canvas.height)):this.g.clearRect(0,0,this.canvas.width,this.canvas.height),this.g.fillStyle=this.color,this.g.fillText(this.value,r,a),t.dispatchEvent(Yo)}}}class Zo extends zo{constructor(){super(),Xo.set(this,new qo)}async loadFontAndSetText(t=null){const e=Y(this);await async function(t,e=null){-1===Qo.indexOf(t)&&(e=e||jo,0===(await document.fonts.load(t,e)).length?console.warn(`Failed to load font "${t}". If this is a system font, just set the object's \`value\` property, instead of calling \`loadFontAndSetText\`.`):Qo.push(t))}(e,t),this.value=t}get canvas(){return Xo.get(this).canvas}get width(){const t=Xo.get(this);return t.canvas.width/t.scale}get height(){const t=Xo.get(this);return t.canvas.height/t.scale}get scale(){return Xo.get(this).scale}set scale(t){if(this.scale!==t){const e=Xo.get(this);e.scale=t,e.redraw(this)}}get padding(){return Xo.get(this).padding}set padding(t){if(t instanceof Array)if(1===t.length)t={top:t[0],right:t[0],bottom:t[0],left:t[0]};else if(2===t.length)t={top:t[0],right:t[1],bottom:t[0],left:t[1]};else{if(4!==t.length)return;t={top:t[0],right:t[1],bottom:t[2],left:t[3]}}else r(t)&&(t={top:t,right:t,bottom:t,left:t});if(this.padding.top!==t.top||this.padding.right!=t.right||this.padding.bottom!=t.bottom||this.padding.left!=t.left){const e=Xo.get(this);e.padding=t,e.redraw(this)}}get fontStyle(){return Xo.get(this).fontStyle}set fontStyle(t){if(this.fontStyle!==t){const e=Xo.get(this);e.fontStyle=t,e.redraw(this)}}get fontVariant(){return Xo.get(this).fontVariant}set fontVariant(t){if(this.fontVariant!==t){const e=Xo.get(this);e.fontVariant=t,e.redraw(this)}}get fontWeight(){return Xo.get(this).fontWeight}set fontWeight(t){if(this.fontWeight!==t){const e=Xo.get(this);e.fontWeight=t,e.redraw(this)}}get fontSize(){return Xo.get(this).fontSize}set fontSize(t){if(this.fontSize!==t){const e=Xo.get(this);e.fontSize=t,e.redraw(this)}}get fontFamily(){return Xo.get(this).fontFamily}set fontFamily(t){if(this.fontFamily!==t){const e=Xo.get(this);e.fontFamily=t,e.redraw(this)}}get color(){return Xo.get(this).color}set color(t){if(this.color!==t){const e=Xo.get(this);e.color=t,e.redraw(this)}}get bgColor(){return Xo.get(this).bgColor}set bgColor(t){if(this.bgColor!==t){const e=Xo.get(this);e.bgColor=t,e.redraw(this)}}get value(){return Xo.get(this).value}set value(t){if(this.value!==t){const e=Xo.get(this);e.value=t,e.redraw(this)}}draw(t,e,n){const i=Xo.get(this);i.canvas.width>0&&i.canvas.height>0&&t.drawImage(i.canvas,e,n,this.width,this.height)}}class Jo extends R{constructor(t,e,n,i){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=(t=t||1)/2,a=(e=e||1)/2,s=Math.floor(n)||1,o=Math.floor(i)||1,l=s+1,c=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let t=0;t<c;t++){const e=t*u-a;for(let n=0;n<l;n++){const i=n*h-r;p.push(i,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){const n=e+l*t,i=e+l*(t+1),r=e+1+l*(t+1),a=e+1+l*t;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new D(p,3)),this.setAttribute("normal",new D(f,3)),this.setAttribute("uv",new D(m,2))}}const Ko=new Jo(1,1,1,1);let $o;Ko.name="PlaneGeom";const tl={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===$o&&($o=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),$o.width=t.width,$o.height=t.height;const n=$o.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=$o}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let el=0;function q(t,e,n,i,r,a,s,o,l,c){Object.defineProperty(this,"id",{value:el++}),this.uuid=Xn.generateUUID(),this.name="",this.image=void 0!==t?t:q.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:q.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:ta,this.wrapT=void 0!==i?i:ta,this.magFilter=void 0!==r?r:aa,this.minFilter=void 0!==a?a:oa,this.anisotropy=void 0!==l?l:1,this.format=void 0!==s?s:ya,this.internalFormat=null,this.type=void 0!==o?o:la,this.offset=new Pi(0,0),this.repeat=new Pi(1,1),this.center=new Pi(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ii,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:_s,this.version=0,this.onUpdate=null}q.DEFAULT_IMAGE=void 0,q.DEFAULT_MAPPING=Qr,q.prototype=Object.assign(Object.create(f.prototype),{constructor:q,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=Xn.generateUUID()),!e&&void 0===t.images[i.uuid]){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)e.push(tl.getDataURL(i[t]))}else e=tl.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:e}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Qr)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case $r:t.x=t.x-Math.floor(t.x);break;case ta:t.x=t.x<0?0:1;break;case ea:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case $r:t.y=t.y-Math.floor(t.y);break;case ta:t.y=t.y<0?0:1;break;case ea:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(q.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class nl extends N{constructor(t,e){super(t,e),this.isVideo=!1}async setImage(t,e){if(i(t)&&(t=function(...t){return j("img",...t)}(function(t){return new ko("src",t,"audio","embed","iframe","img","input","script","source","track","video")}(t=await p(t,e)))),t instanceof HTMLImageElement){t.complete||await l(t,"load","error",1e4);const e=Math.pow(2,Math.floor(Math.log2(t.width))),n=Math.pow(2,Math.floor(Math.log2(t.height))),i=X(W(e),G(n));i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,e,n),t=i}t instanceof q||(t=new q(t)),this.material.map=t,t=this.material.map.image,this.isVideo=t instanceof HTMLVideoElement,this.updateTexture()}updateTexture(){this.material&&this.material.map&&(this.material.map.needsUpdate=!0)}update(){this.isVideo&&this.updateTexture()}}class il extends nl{constructor(t,e){super(Ko,z(Object.assign({transparent:!0,opacity:1},e,{name:t}))),t&&(this.name=t)}}class rl extends il{constructor(t,e){super(t,e),this.textImage=new Zo,this.setImage(this.textImage.canvas),this.textImage.addEventListener("redrawn",()=>{this.scale.set(this.textImage.width/400,this.textImage.height/400,1),this.updateTexture()})}async loadFontAndSetText(t=null){await this.textImage.loadFontAndSetText(t)}get textWidth(){this.textImage.width}get textHeight(){return this.textImage.height}get textScale(){return this.textImage.scale}set textScale(t){this.textImage.scale=t}get textPadding(){return this.textImage.padding}set textPadding(t){this.textImage.padding=t}get fontStyle(){return this.textImage.fontStyle}set fontStyle(t){this.textImage.fontStyle=t}get fontVariant(){return this.textImage.fontVariant}set fontVariant(t){this.textImage.fontVariant=t}get fontWeight(){return this.textImage.fontWeight}set fontWeight(t){this.textImage.fontWeight=t}get fontSize(){return this.textImage.fontSize}set fontSize(t){this.textImage.fontSize=t}get fontFamily(){return this.textImage.fontFamily}set fontFamily(t){this.textImage.fontFamily=t}get textColor(){return this.textImage.color}set textColor(t){this.textImage.color=t}get textBgColor(){return this.textImage.bgColor}set textBgColor(t){this.textImage.bgColor=t}get value(){return this.textImage.value}set value(t){this.textImage.loadFontAndSetText(t)}}function Z(t,e,n){return Math.min(n,Math.max(e,t))}class al extends Event{constructor(){super("audioActivity"),this.id=null,this.isActive=!1,Object.seal(this)}set(t,e){this.id=t,this.isActive=e}}const sl=new al,ol=0,ll=60,cl=5;function J(t,e,n){const i=e/2;return Z(Math.round(t/i*n),0,n)}class hl extends zo{constructor(t,e,n){if(super(),!a(n)||n<=0)throw new Error("Buffer size must be greater than 0");this.id=t.id,this.bufferSize=n,this.buffer=new Float32Array(this.bufferSize),this.wasActive=!1,this.lastAudible=!0,this.activityCounter=0,this.analyser=null;const i=()=>{t.spatializer.source?(this.analyser=e.createAnalyser(),this.analyser.fftSize=2*this.bufferSize,this.analyser.smoothingTimeConstant=.2,t.spatializer.source.connect(this.analyser)):setTimeout(i,0)};i()}dispose(){this.analyser&&(this.analyser.disconnect(),this.analyser=null),this.buffer=null}update(){if(this.analyser){this.analyser.getFloatFrequencyData(this.buffer);const t=1.1+function(t,e,n,i,r){const a=t.context.sampleRate,s=J(n,a,r),o=J(i,a,r),l=o-s;let c=0;for(let t=s;t<o;++t)c+=e[t];return 0===l?0:c/l}(this.analyser,this.buffer,85,255,this.bufferSize)/100;t>=.5&&this.activityCounter<ll?this.activityCounter++:t<.5&&this.activityCounter>ol&&this.activityCounter--;const e=this.activityCounter>cl;this.wasActive!==e&&(this.wasActive=e,sl.id=this.id,sl.isActive=e,this.dispatchEvent(sl))}}}function K(t,e,n){const i=n-e;return 0===i?0:(t-e)/i}function $(t,e,n,i){const r=e.dot(n),a=Math.acos(r);if(0!==a){const r=Math.sin(a),s=Math.sin((1-i)*a)/r,o=Math.sin(i*a)/r;t.x=s*e.x+o*n.x,t.y=s*e.y+o*n.y,t.x=s*e.z+o*n.z}}class ul{constructor(){this.t=0,this.p=new $n,this.f=new $n,this.f.set(0,0,-1),this.u=new $n,this.u.set(0,1,0),Object.seal(this)}set(t,e,n,i,r,a,s,o,l){this.p.set(t,e,n),this.f.set(i,r,a),this.u.set(s,o,l)}copy(t){this.p.copy(t.p),this.f.copy(t.f),this.u.copy(t.u)}interpolate(t,e,n){if(n<=t.t)this.copy(t);else if(e.t<=n)this.copy(e);else if(t.t<n){const i=K(n,t.t,e.t);this.p.copy(t.p),this.p.lerp(e.p,i),$(this.f,t.f,e.f,i),$(this.u,t.u,e.u,i),this.t=n}}}class dl{constructor(){this.start=new ul,this.current=new ul,this.end=new ul,Object.seal(this)}setTarget(t,e,n,i,r,a,s,o,l,c,h){this.end.set(t,e,n,i,r,a,s,o,l),this.end.t=c+h,h<=0?(this.start.copy(this.end),this.start.t=c,this.current.copy(this.end),this.current.t=c):(this.start.copy(this.current),this.start.t=c)}setTargetPosition(t,e,n,i,r){this.setTarget(t,e,n,this.end.f.x,this.end.f.y,this.end.f.z,this.end.u.x,this.end.u.y,this.end.u.z,i,r)}setTargetOrientation(t,e,n,i,r,a,s,o){this.setTarget(this.end.p.x,this.end.p.y,this.end.p.z,t,e,n,i,r,a,s,o)}update(t){this.current.interpolate(this.start,this.end,t)}}class pl{constructor(){this.pose=new dl,this.tracks=new Map,this._spatializer=null}get spatializer(){return this._spatializer}set spatializer(t){this.spatializer!==t&&(this._spatializer&&this._spatializer.dispose(),this._spatializer=t)}dispose(){this.spatializer=null}update(t){this.pose.update(t),this.spatializer&&this.spatializer.update(this.pose.current)}}class fl{constructor(){this._t=performance.now()/1e3,Object.seal(this)}get currentTime(){return performance.now()/1e3-this._t}get destination(){return null}}const ml=HTMLAudioElement.prototype.setSinkId instanceof Function;class gl extends zo{constructor(){super(),this.minDistance=1,this.minDistanceSq=1,this.maxDistance=10,this.maxDistanceSq=100,this.rolloff=1,this.transitionTime=.5}setAudioProperties(t,e,n,i){this.minDistance=t,this.maxDistance=e,this.transitionTime=i,this.rolloff=n}dispose(){}update(t){}}class Al extends gl{constructor(t,e,n,i){if(super(),this.id=t,this.audio=null,this.stream=null,this.source=null,this.volume=1,e instanceof HTMLAudioElement)this.audio=e,this.source=n.createMediaElementSource(this.audio),this.source.connect(i);else if(e instanceof MediaStream){this.stream=e,this.audio=document.createElement("audio"),this.audio.srcObject=this.stream;const t=()=>{this.stream.active?(this.source=n.createMediaStreamSource(this.stream),this.source.connect(i)):setTimeout(t,0)};setTimeout(t,0)}else if(null!==e)throw new Error("Can't create a node from the given stream. Expected type HTMLAudioElement or MediaStream.");this.audio.playsInline=!0}async play(){this.audio&&await this.audio.play()}stop(){this.audio&&this.audio.pause()}dispose(){this.source&&(this.source.disconnect(),this.source=null),this.audio&&(this.audio.pause(),this.audio=null),this.stream=null,super.dispose()}setAudioOutputDevice(t){this.audio&&ml&&this.audio.setSinkId(t)}}class vl extends Al{constructor(t,e,n,i){super(t,e,n,i),this.inNode=i,this.inNode.connect(n.destination)}dispose(){this.inNode&&(this.inNode.disconnect(),this.inNode=null),super.dispose()}}class _l extends vl{constructor(t,e,n){const i=n.createPanner();super(t,e,n,i),this.inNode.panningModel="HRTF",this.inNode.distanceModel="inverse",this.inNode.coneInnerAngle=360,this.inNode.coneOuterAngle=0,this.inNode.coneOuterGain=0}update(t){super.update(t),this.inNode.refDistance=this.minDistance,this.inNode.rolloffFactor=this.rolloff}}class xl extends _l{constructor(t,e,n){super(t,e,n),Object.seal(this)}update(t){super.update(t);const{p:e,f:n}=t;this.inNode.positionX.setValueAtTime(e.x,0),this.inNode.positionY.setValueAtTime(e.y,0),this.inNode.positionZ.setValueAtTime(e.z,0),this.inNode.orientationX.setValueAtTime(n.x,0),this.inNode.orientationY.setValueAtTime(n.y,0),this.inNode.orientationZ.setValueAtTime(n.z,0)}}class wl extends Al{constructor(t,e,n){super(t,e,n,n.destination)}}class yl extends gl{constructor(){super()}createSource(t,e,n,i){if(n)throw new Error("Calla no longer supports manual volume scaling");return new wl(t,e,i)}}class Ml extends yl{constructor(t){super(),this.node=t}dispose(){this.node=null,super.dispose()}}class bl extends Ml{constructor(t){super(t),Object.seal(this)}update(t){super.update(t);const{p:e,f:n,u:i}=t;this.node.positionX.setValueAtTime(e.x,0),this.node.positionY.setValueAtTime(e.y,0),this.node.positionZ.setValueAtTime(e.z,0),this.node.forwardX.setValueAtTime(n.x,0),this.node.forwardY.setValueAtTime(n.y,0),this.node.forwardZ.setValueAtTime(n.z,0),this.node.upX.setValueAtTime(i.x,0),this.node.upY.setValueAtTime(i.y,0),this.node.upZ.setValueAtTime(i.z,0)}createSource(t,e,n,i){return n?new xl(t,e,i):super.createSource(t,e,n,i)}}class Sl extends _l{constructor(t,e,n){super(t,e,n),Object.seal(this)}update(t){super.update(t);const{p:e,f:n}=t;this.inNode.setPosition(e.x,e.y,e.z),this.inNode.setOrientation(n.x,n.y,n.z)}}class El extends Ml{constructor(t){super(t),Object.seal(this)}update(t){super.update(t);const{p:e,f:n,u:i}=t;this.node.setPosition(e.x,e.y,e.z),this.node.setOrientation(n.x,n.y,n.z,i.x,i.y,i.z)}createSource(t,e,n,i){return n?new Sl(t,e,i):super.createSource(t,e,n,i)}}
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tt(){const t=`[Omnitone] ${Array.prototype.slice.call(arguments).join(" ")} (${performance.now().toFixed(2)}ms)`;window.console.log(t)}function et(){const t=`[Omnitone] ${Array.prototype.slice.call(arguments).join(" ")} (${performance.now().toFixed(2)}ms)`;throw window.console.error(t),new Error(t)}function nt(t){return t instanceof AudioContext||t instanceof OfflineAudioContext}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Tl={BASE64:"base64",URL:"url"};class Pl{constructor(t,e,n){nt(t)||et("BufferList: Invalid BaseAudioContext."),this._context=t,this._options={dataType:Tl.BASE64,verbose:!1},n&&(n.dataType&&function(t,e){for(let n in t)if(e===t[n])return!0;return!1}(Tl,n.dataType)&&(this._options.dataType=n.dataType),n.verbose&&(this._options.verbose=Boolean(n.verbose))),this._bufferData=this._options.dataType===Tl.BASE64?e:e.slice(0)}async load(){try{const t=this._bufferData.map((t,e)=>this._launchAsyncLoadTask(t,e)),e=await Promise.all(t);return tt("BufferList: "+(this._options.dataType===Tl.BASE64?this._bufferData.length+" AudioBuffers from Base64-encoded HRIRs":this._bufferData.length+" files via XHR")+" loaded successfully."),e}catch(t){et('BufferList: error while loading "'+bData+'". ('+t.message+")")}}async _launchAsyncLoadTask(t,e){const n=await this._fetch(t),i=await this._context.decodeAudioData(n);return tt("BufferList: "+(this._options.dataType===Tl.BASE64?"ArrayBuffer("+e+") from Base64-encoded HRIR":'"'+t+'"')+" successfully loaded."),i}async _fetch(t){if(this._options.dataType===Tl.BASE64)return function(t){const e=window.atob(t),n=new Uint8Array(e.length);return n.forEach((t,i)=>n[i]=e.charCodeAt(i)),n.buffer}(t);{const e=await fetch(t);return await e.arrayBuffer()}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Dl{constructor(t,e){this._context=t,this._active=!1,this._isBufferLoaded=!1,this._buildAudioGraph(),e&&this.setHRIRBufferList(e),this.enable()}_buildAudioGraph(){this._splitterWYZX=this._context.createChannelSplitter(4),this._mergerWY=this._context.createChannelMerger(2),this._mergerZX=this._context.createChannelMerger(2),this._convolverWY=this._context.createConvolver(),this._convolverZX=this._context.createConvolver(),this._splitterWY=this._context.createChannelSplitter(2),this._splitterZX=this._context.createChannelSplitter(2),this._inverter=this._context.createGain(),this._mergerBinaural=this._context.createChannelMerger(2),this._summingBus=this._context.createGain(),this._splitterWYZX.connect(this._mergerWY,0,0),this._splitterWYZX.connect(this._mergerWY,1,1),this._splitterWYZX.connect(this._mergerZX,2,0),this._splitterWYZX.connect(this._mergerZX,3,1),this._mergerWY.connect(this._convolverWY),this._mergerZX.connect(this._convolverZX),this._convolverWY.connect(this._splitterWY),this._convolverZX.connect(this._splitterZX),this._splitterWY.connect(this._mergerBinaural,0,0),this._splitterWY.connect(this._mergerBinaural,0,1),this._splitterWY.connect(this._mergerBinaural,1,0),this._splitterWY.connect(this._inverter,1,0),this._inverter.connect(this._mergerBinaural,0,1),this._splitterZX.connect(this._mergerBinaural,0,0),this._splitterZX.connect(this._mergerBinaural,0,1),this._splitterZX.connect(this._mergerBinaural,1,0),this._splitterZX.connect(this._mergerBinaural,1,1),this._convolverWY.normalize=!1,this._convolverZX.normalize=!1,this._inverter.gain.value=-1,this.input=this._splitterWYZX,this.output=this._summingBus}dispose(){this._active&&this.disable(),this._splitterWYZX.disconnect(this._mergerWY,0,0),this._splitterWYZX.disconnect(this._mergerWY,1,1),this._splitterWYZX.disconnect(this._mergerZX,2,0),this._splitterWYZX.disconnect(this._mergerZX,3,1),this._mergerWY.disconnect(this._convolverWY),this._mergerZX.disconnect(this._convolverZX),this._convolverWY.disconnect(this._splitterWY),this._convolverZX.disconnect(this._splitterZX),this._splitterWY.disconnect(this._mergerBinaural,0,0),this._splitterWY.disconnect(this._mergerBinaural,0,1),this._splitterWY.disconnect(this._mergerBinaural,1,0),this._splitterWY.disconnect(this._inverter,1,0),this._inverter.disconnect(this._mergerBinaural,0,1),this._splitterZX.disconnect(this._mergerBinaural,0,0),this._splitterZX.disconnect(this._mergerBinaural,0,1),this._splitterZX.disconnect(this._mergerBinaural,1,0),this._splitterZX.disconnect(this._mergerBinaural,1,1)}setHRIRBufferList(t){this._isBufferLoaded||(this._convolverWY.buffer=t[0],this._convolverZX.buffer=t[1],this._isBufferLoaded=!0)}enable(){this._mergerBinaural.connect(this._summingBus),this._active=!0}disable(){this._mergerBinaural.disconnect(),this._active=!1}}const Cl=["UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wIA9v8QAPv/CwD+/wcA/v8MAP//AQD7/wEACAAEAPj/+v8YABAA7v/n//v/9P/M/8D//f34/R38EvzxAfEBtA2lDTcBJQFJ9T71FP0D/cD1tfVo/Wv9uPTO9PPmOufc/U/+agL3Aisc/RxuGKEZBv3j/iYMzQ2gAzsEQQUABiQFrASzA5cB2QmyCy0AtgR4AeYGtfgAA2j5OQHP+scArPsMBJgEggIEBtz6+QVq/pj/aPg8BPP3gQEi+jEAof0fA1v9+/7S+8IBjvwd/xD4IADL/Pf9zvs+/l3+wgB7/+L+7fzFADH9kf6A+n3+DP6+/TP9xP68/pn+w/26/i39YgA0/u790Pt9/kD+7v1s/Wb+8f4C/1P+pf/x/cT+6/3p/Xz9ff5F/0f9G/4r/6v/4P5L/sL+ff7c/pj+Ov7X/UT+9P5G/oz+6v6A/2D+9/6P/8r/bP7m/ij+C//e/tj/Gf4e/9v+FwDP/lz/sP7F/2H+rv/G/s7/Hf7y/4P+NAD9/k0AK/6w/zP/hACh/sX/gf44AOP+dgCm/iUAk/5qAOD+PwC+/jEAWP4CAAr/bQBw/vv/zf5iACD/OgCS/uD/Cv9oAAb/CgDK/kwA//5tACH/TgCg/h4AHP9aABP/JADP/hEAYv9gAAj/3f8m/ysAYv8gACX/8/8k/ysAXv8bABH//v8j/ygAa/8qAAD/9f9g/1YAWf8JACH/AgB2/z4AXP/w/z3/FgB2/ykAX//9/z//EwCV/zUAS//n/1T/GACK/x4ATv/0/4P/QQB4//v/WP/2/3X/HAB8//P/V//3/2f/AQBh/9v/Tf/x/5P/IwCI/wMAf/8hAKP/JACZ/xUAiv8nAK//HgCr/yMAm/8uAMz/OACi/yQAqf87AMT/MwCY/yUAtP9FAMH/KgCu/ycAyP85AMv/IwCz/xoA1f8qAMn/FgC8/xQA4/8nAMX/CwDJ/xQA4f8ZAMH/BgDO/xQA4f8WAMP/BwDU/xQA4P8QAMH/AQDb/xQA3P8JAMP/AgDh/xIA2v8EAMj/AgDk/w0A1f/+/8v/AwDm/wwA0v/+/9H/BgDl/wkAzv/8/9T/BwDk/wcAzv/8/9r/CQDi/wQAzf/8/9//CADf////0P/9/+L/BwDd//7/0////+T/BgDb//z/1f8AAOf/BQDZ//v/2v8CAOb/AwDY//v/3v8EAOb/AgDY//3/4f8FAOX/AQDZ//7/5P8GAOP/AADb/wAA5/8GAOH////d/wIA5/8FAOD////f/wMA6P8FAOD////h/wQA6P8EAN7////h/wUA4v8DANv/AQDd/wQA3P8CANn/AgDb/wMA2/8CANv/AgDd/wIA3v8CAOH/AQDj/wEA","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAAAA/f8CAP//AQD//wEA//8BAP3/AAACAP7/+f8AAAIA/P8FAAQA8/8AABoA+f/V/wQAHQDO/xoAQQBO/ocA0Px1/ucHW/4UCm8HLO6kAjv8/fCRDdAAYfPiBIgFXveUCM0GBvh6/nz7rf0J/QcQSRVdBgoBSgFR62r9NP8m+LoEAvriBVAAiAPmABEGMf2l+SwBjva6/G4A//8P/CYDMgXm/R0CKAE6/fcBBwAtAND+kQA0A5UDhwFs/8IB8fydAEP/A/8v/e7/mP8j/2YBIwE3Av0AYv+uAOD8lgAg/wwAIf/L/n0Ae//OAJMB3P/XAF//XwCM/08AB/8NAEf/rf4jAT3/lgAJAP4AHgDpAO8AUf9L/07/Qf8KAOD/x/+D/3sATQCDAMoA0f79/+L/EQDt/7EAqv+S/7IAuv/o/wgAc//X//H/SwCm/+3/Yf/B/yoAAADI/7X/AwBg/5EATgCX/xYA/P+q/00AVACY/6v/BADD/zwALQCN/8z/KQDu/ygAEgCZ/6f/VQDC//T/KQCs/7P/UgAfAO7/NgC8/57/awAZAPP/+P/V/8z/bQBBAL//DgD0/+T/TABBAMz/CwAxAPz/SQBqALn/BgALAPz/EAA7AIz/3/8iAAUA//8kALf/y/9VABQA+v81AOj/0P9cAB4A+f8WAOr/vv83ABgAw/8JAOj/4f8nACIAsf/y/w4A3v8gACQAxP/n/ycA7P8WAC0Ayf/U/ycA9v/7/yUA0P/P/zUABADc/xUA5P/J/zcACwDS/xUA9P/m/zAACQDX/+3/9v/2/yQACgDZ/+P/AwAKABYA///b/9j/EQALABkADgD6/+7/GwD4/w4A8P/w//j/EgAEAAUA9f/1/wQAGgD4/wAA5////wAAGQD1////7f8FAAUAFQDv/wAA6v8LAAcAFQDs/wEA9P8SAAYACwDr//7/AQASAAYABQDv/wIAAwAWAAIAAgDv/wAABgATAAEA/f/u/wQABgAQAPr/+P/z/wUACQALAPj/9//4/wgABwAKAPT/+f/5/w4ABwAIAPT/+//9/w4AAwADAPH//f///w8A//8BAPP///8BAA0A/f/+//X/AgACAA0A+//8//b/BAADAAoA+f/7//n/BgADAAcA+P/7//v/BwABAAQA+P/8//3/CQABAAIA9//9////CQD/////+P///wAACAD9//7/+f8AAAAABwD8//3/+v8CAAAABgD7//z//P8EAAAABAD6//3//P8FAP//AgD6//7//v8FAP7/AQD7//////8GAP7/AAD7/wEA//8EAP3/AAD9/wEA/v8DAP3/AAD9/wIA/v8CAP3/AQD9/wIA/v8CAP7/AQD+/wEA"];
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Ll{constructor(t){this._context=t,this._splitter=this._context.createChannelSplitter(4),this._inX=this._context.createGain(),this._inY=this._context.createGain(),this._inZ=this._context.createGain(),this._m0=this._context.createGain(),this._m1=this._context.createGain(),this._m2=this._context.createGain(),this._m3=this._context.createGain(),this._m4=this._context.createGain(),this._m5=this._context.createGain(),this._m6=this._context.createGain(),this._m7=this._context.createGain(),this._m8=this._context.createGain(),this._outX=this._context.createGain(),this._outY=this._context.createGain(),this._outZ=this._context.createGain(),this._merger=this._context.createChannelMerger(4),this._splitter.connect(this._inX,1),this._splitter.connect(this._inY,2),this._splitter.connect(this._inZ,3),this._inX.gain.value=-1,this._inY.gain.value=-1,this._inZ.gain.value=-1,this._inX.connect(this._m0),this._inX.connect(this._m1),this._inX.connect(this._m2),this._inY.connect(this._m3),this._inY.connect(this._m4),this._inY.connect(this._m5),this._inZ.connect(this._m6),this._inZ.connect(this._m7),this._inZ.connect(this._m8),this._m0.connect(this._outX),this._m1.connect(this._outY),this._m2.connect(this._outZ),this._m3.connect(this._outX),this._m4.connect(this._outY),this._m5.connect(this._outZ),this._m6.connect(this._outX),this._m7.connect(this._outY),this._m8.connect(this._outZ),this._splitter.connect(this._merger,0,0),this._outX.connect(this._merger,0,1),this._outY.connect(this._merger,0,2),this._outZ.connect(this._merger,0,3),this._outX.gain.value=-1,this._outY.gain.value=-1,this._outZ.gain.value=-1,this.setRotationMatrix3(new Float32Array([1,0,0,0,1,0,0,0,1])),this.input=this._splitter,this.output=this._merger}dispose(){this._splitter.disconnect(this._inX,1),this._splitter.disconnect(this._inY,2),this._splitter.disconnect(this._inZ,3),this._inX.disconnect(this._m0),this._inX.disconnect(this._m1),this._inX.disconnect(this._m2),this._inY.disconnect(this._m3),this._inY.disconnect(this._m4),this._inY.disconnect(this._m5),this._inZ.disconnect(this._m6),this._inZ.disconnect(this._m7),this._inZ.disconnect(this._m8),this._m0.disconnect(this._outX),this._m1.disconnect(this._outY),this._m2.disconnect(this._outZ),this._m3.disconnect(this._outX),this._m4.disconnect(this._outY),this._m5.disconnect(this._outZ),this._m6.disconnect(this._outX),this._m7.disconnect(this._outY),this._m8.disconnect(this._outZ),this._splitter.disconnect(this._merger,0,0),this._outX.disconnect(this._merger,0,1),this._outY.disconnect(this._merger,0,2),this._outZ.disconnect(this._merger,0,3)}setRotationMatrix3(t){this._m0.gain.value=t[0],this._m1.gain.value=t[1],this._m2.gain.value=t[2],this._m3.gain.value=t[3],this._m4.gain.value=t[4],this._m5.gain.value=t[5],this._m6.gain.value=t[6],this._m7.gain.value=t[7],this._m8.gain.value=t[8]}setRotationMatrix4(t){this._m0.gain.value=t[0],this._m1.gain.value=t[1],this._m2.gain.value=t[2],this._m3.gain.value=t[4],this._m4.gain.value=t[5],this._m5.gain.value=t[6],this._m6.gain.value=t[8],this._m7.gain.value=t[9],this._m8.gain.value=t[10]}getRotationMatrix3(){const t=new Float32Array(9);return t[0]=this._m0.gain.value,t[1]=this._m1.gain.value,t[2]=this._m2.gain.value,t[3]=this._m3.gain.value,t[4]=this._m4.gain.value,t[5]=this._m5.gain.value,t[6]=this._m6.gain.value,t[7]=this._m7.gain.value,t[8]=this._m8.gain.value,t}getRotationMatrix4(){const t=new Float32Array(16);return t[0]=this._m0.gain.value,t[1]=this._m1.gain.value,t[2]=this._m2.gain.value,t[4]=this._m3.gain.value,t[5]=this._m4.gain.value,t[6]=this._m5.gain.value,t[8]=this._m6.gain.value,t[9]=this._m7.gain.value,t[10]=this._m8.gain.value,t}}
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Rl={DEFAULT:[0,1,2,3],SAFARI:[2,0,1,3],FUMA:[0,3,1,2]};class Fl{constructor(t,e){this._context=t,this._splitter=this._context.createChannelSplitter(4),this._merger=this._context.createChannelMerger(4),this.input=this._splitter,this.output=this._merger,this.setChannelMap(e||Rl.DEFAULT)}setChannelMap(t){Array.isArray(t)&&(this._channelMap=t,this._splitter.disconnect(),this._splitter.connect(this._merger,0,this._channelMap[0]),this._splitter.connect(this._merger,1,this._channelMap[1]),this._splitter.connect(this._merger,2,this._channelMap[2]),this._splitter.connect(this._merger,3,this._channelMap[3]))}dipose(){this._splitter.disconnect(this._merger,0,this._channelMap[0]),this._splitter.disconnect(this._merger,1,this._channelMap[1]),this._splitter.disconnect(this._merger,2,this._channelMap[2]),this._splitter.disconnect(this._merger,3,this._channelMap[3])}}Fl.ChannelMap=Rl;var it=Object.freeze({AMBISONIC:"ambisonic",BYPASS:"bypass",OFF:"off"});
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Bl{constructor(t,e){nt(t)||et("FOARenderer: Invalid BaseAudioContext."),this._context=t,this._config={channelMap:Fl.ChannelMap.DEFAULT,renderingMode:it.AMBISONIC},e&&(e.channelMap&&(Array.isArray(e.channelMap)&&4===e.channelMap.length?this._config.channelMap=e.channelMap:et("FOARenderer: Invalid channel map. (got "+e.channelMap+")")),e.hrirPathList&&(Array.isArray(e.hrirPathList)&&2===e.hrirPathList.length?this._config.pathList=e.hrirPathList:et("FOARenderer: Invalid HRIR URLs. It must be an array with 2 URLs to HRIR files. (got "+e.hrirPathList+")")),e.renderingMode&&(Object.values(it).includes(e.renderingMode)?this._config.renderingMode=e.renderingMode:tt("FOARenderer: Invalid rendering mode order. (got"+e.renderingMode+') Fallbacks to the mode "ambisonic".'))),this._buildAudioGraph(),this._tempMatrix4=new Float32Array(16)}_buildAudioGraph(){this.input=this._context.createGain(),this.output=this._context.createGain(),this._bypass=this._context.createGain(),this._foaRouter=new Fl(this._context,this._config.channelMap),this._foaRotator=new Ll(this._context),this._foaConvolver=new Dl(this._context),this.input.connect(this._foaRouter.input),this.input.connect(this._bypass),this._foaRouter.output.connect(this._foaRotator.input),this._foaRotator.output.connect(this._foaConvolver.input),this._foaConvolver.output.connect(this.output),this.input.channelCount=4,this.input.channelCountMode="explicit",this.input.channelInterpretation="discrete"}dipose(){mode===it.BYPASS&&this._bypass.connect(this.output),this.input.disconnect(this._foaRouter.input),this.input.disconnect(this._bypass),this._foaRouter.output.disconnect(this._foaRotator.input),this._foaRotator.output.disconnect(this._foaConvolver.input),this._foaConvolver.output.disconnect(this.output),this._foaConvolver.dispose(),this._foaRotator.dispose(),this._foaRouter.dipose()}async initialize(){tt("FOARenderer: Initializing... (mode: "+this._config.renderingMode+")");const t=this._config.pathList?new Pl(this._context,this._config.pathList,{dataType:"url"}):new Pl(this._context,Cl);try{const e=await t.load();this._foaConvolver.setHRIRBufferList(e),this.setRenderingMode(this._config.renderingMode),tt("FOARenderer: HRIRs loaded successfully. Ready.")}catch(t){et("FOARenderer: HRIR loading/decoding failed. Reason: "+t.message)}}setChannelMap(t){t.toString()!==this._config.channelMap.toString()&&(tt("Remapping channels (["+this._config.channelMap.toString()+"] -> ["+t.toString()+"])."),this._config.channelMap=t.slice(),this._foaRouter.setChannelMap(this._config.channelMap))}setRotationMatrix3(t){this._foaRotator.setRotationMatrix3(t)}setRotationMatrix4(t){this._foaRotator.setRotationMatrix4(t)}getRenderingMode(){return this._config.renderingMode}setRenderingMode(t){if(t!==this._config.renderingMode){switch(t){case it.AMBISONIC:this._foaConvolver.enable(),this._bypass.disconnect();break;case it.BYPASS:this._foaConvolver.disable(),this._bypass.connect(this.output);break;case it.OFF:this._foaConvolver.disable(),this._bypass.disconnect();break;default:return void tt('FOARenderer: Rendering mode "'+t+'" is not supported.')}this._config.renderingMode=t,tt("FOARenderer: Rendering mode changed. ("+t+")")}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Nl{constructor(t,e,n){this._context=t,this._active=!1,this._isBufferLoaded=!1,this._ambisonicOrder=e,this._numberOfChannels=(this._ambisonicOrder+1)*(this._ambisonicOrder+1),this._buildAudioGraph(),n&&this.setHRIRBufferList(n),this.enable()}_buildAudioGraph(){const t=Math.ceil(this._numberOfChannels/2);this._inputSplitter=this._context.createChannelSplitter(this._numberOfChannels),this._stereoMergers=[],this._convolvers=[],this._stereoSplitters=[],this._positiveIndexSphericalHarmonics=this._context.createGain(),this._negativeIndexSphericalHarmonics=this._context.createGain(),this._inverter=this._context.createGain(),this._binauralMerger=this._context.createChannelMerger(2),this._outputGain=this._context.createGain();for(let e=0;e<t;++e)this._stereoMergers[e]=this._context.createChannelMerger(2),this._convolvers[e]=this._context.createConvolver(),this._stereoSplitters[e]=this._context.createChannelSplitter(2),this._convolvers[e].normalize=!1;for(let t=0;t<=this._ambisonicOrder;++t)for(let e=-t;e<=t;e++){const n=t*t+t+e,i=Math.floor(n/2);this._inputSplitter.connect(this._stereoMergers[i],n,n%2),this._stereoMergers[i].connect(this._convolvers[i]),this._convolvers[i].connect(this._stereoSplitters[i]),e>=0?this._stereoSplitters[i].connect(this._positiveIndexSphericalHarmonics,n%2):this._stereoSplitters[i].connect(this._negativeIndexSphericalHarmonics,n%2)}this._positiveIndexSphericalHarmonics.connect(this._binauralMerger,0,0),this._positiveIndexSphericalHarmonics.connect(this._binauralMerger,0,1),this._negativeIndexSphericalHarmonics.connect(this._binauralMerger,0,0),this._negativeIndexSphericalHarmonics.connect(this._inverter),this._inverter.connect(this._binauralMerger,0,1),this._inverter.gain.value=-1,this.input=this._inputSplitter,this.output=this._outputGain}dispose(){this._active&&this.disable();for(let t=0;t<=this._ambisonicOrder;++t)for(let e=-t;e<=t;e++){const n=t*t+t+e,i=Math.floor(n/2);this._inputSplitter.disconnect(this._stereoMergers[i],n,n%2),this._stereoMergers[i].disconnect(this._convolvers[i]),this._convolvers[i].disconnect(this._stereoSplitters[i]),e>=0?this._stereoSplitters[i].disconnect(this._positiveIndexSphericalHarmonics,n%2):this._stereoSplitters[i].disconnect(this._negativeIndexSphericalHarmonics,n%2)}this._positiveIndexSphericalHarmonics.disconnect(this._binauralMerger,0,0),this._positiveIndexSphericalHarmonics.disconnect(this._binauralMerger,0,1),this._negativeIndexSphericalHarmonics.disconnect(this._binauralMerger,0,0),this._negativeIndexSphericalHarmonics.disconnect(this._inverter),this._inverter.disconnect(this._binauralMerger,0,1)}setHRIRBufferList(t){if(!this._isBufferLoaded){for(let e=0;e<t.length;++e)this._convolvers[e].buffer=t[e];this._isBufferLoaded=!0}}enable(){this._binauralMerger.connect(this._outputGain),this._active=!0}disable(){this._binauralMerger.disconnect(),this._active=!1}}
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function rt(t,e){return t===e?1:0}function at(t,e,n){return(n+t)*(2*t+1)+(e+t)}function st(t,e,n,i,r){const a=at(e,n,i);t[e-1][a].gain.value=r}function ot(t,e,n,i){const r=at(e,n,i);return t[e-1][r].gain.value}function lt(t,e,n,i,r){return i===r?ot(t,1,e,1)*ot(t,r-1,n,r-1)-ot(t,1,e,-1)*ot(t,r-1,n,1-r):i===-r?ot(t,1,e,1)*ot(t,r-1,n,1-r)+ot(t,1,e,-1)*ot(t,r-1,n,r-1):ot(t,1,e,0)*ot(t,r-1,n,i)}function ct(t,e,n,i){return lt(t,0,e,n,i)}function ht(t,e,n,i){if(0===e)return lt(t,1,1,n,i)+lt(t,-1,-1,n,i);if(e>0){const r=rt(e,1);return lt(t,1,e-1,n,i)*Math.sqrt(1+r)-lt(t,-1,1-e,n,i)*(1-r)}{const r=rt(e,-1);return lt(t,1,e+1,n,i)*(1-r)+lt(t,-1,-e-1,n,i)*Math.sqrt(1+r)}}function ut(t,e,n,i){return 0===e?0:e>0?lt(t,1,e+1,n,i)+lt(t,-1,-e-1,n,i):lt(t,1,e-1,n,i)-lt(t,-1,1-e,n,i)}function dt(t,e,n){const i=rt(t,0),r=Math.abs(e)===n?1/(2*n*(2*n-1)):1/((n+e)*(n-e));return[Math.sqrt((n+t)*(n-t)*r),.5*(1-2*i)*Math.sqrt((1+i)*(n+Math.abs(t)-1)*(n+Math.abs(t))*r),-.5*(1-i)*Math.sqrt((n-Math.abs(t)-1)*(n-Math.abs(t)))*r]}function pt(t,e){for(let n=-e;n<=e;n++)for(let i=-e;i<=e;i++){const r=dt(n,i,e);Math.abs(r[0])>0&&(r[0]*=ct(t,n,i,e)),Math.abs(r[1])>0&&(r[1]*=ht(t,n,i,e)),Math.abs(r[2])>0&&(r[2]*=ut(t,n,i,e)),st(t,e,n,i,r[0]+r[1]+r[2])}}function ft(t){for(let e=2;e<=t.length;e++)pt(t,e)}class Il{constructor(t,e){this._context=t,this._ambisonicOrder=e;const n=(e+1)*(e+1);this._splitter=this._context.createChannelSplitter(n),this._merger=this._context.createChannelMerger(n),this._gainNodeMatrix=[];for(let t=1;t<=e;t++){const e=t*t,n=2*t+1;this._gainNodeMatrix[t-1]=[];for(let i=0;i<n;i++){const r=e+i;for(let a=0;a<n;a++){const s=e+a,o=i*n+a;this._gainNodeMatrix[t-1][o]=this._context.createGain(),this._splitter.connect(this._gainNodeMatrix[t-1][o],r),this._gainNodeMatrix[t-1][o].connect(this._merger,0,s)}}}this._splitter.connect(this._merger,0,0),this.setRotationMatrix3(new Float32Array([1,0,0,0,1,0,0,0,1])),this.input=this._splitter,this.output=this._merger}dispose(){for(let t=1;t<=ambisonicOrder;t++){const e=t*t,n=2*t+1;for(let i=0;i<n;i++){const r=e+i;for(let a=0;a<n;a++){const s=e+a,o=i*n+a;this._splitter.disconnect(this._gainNodeMatrix[t-1][o],r),this._gainNodeMatrix[t-1][o].disconnect(this._merger,0,s)}}}this._splitter.disconnect(this._merger,0,0)}setRotationMatrix3(t){this._gainNodeMatrix[0][0].gain.value=t[0],this._gainNodeMatrix[0][1].gain.value=t[1],this._gainNodeMatrix[0][2].gain.value=t[2],this._gainNodeMatrix[0][3].gain.value=t[3],this._gainNodeMatrix[0][4].gain.value=t[4],this._gainNodeMatrix[0][5].gain.value=t[5],this._gainNodeMatrix[0][6].gain.value=t[6],this._gainNodeMatrix[0][7].gain.value=t[7],this._gainNodeMatrix[0][8].gain.value=t[8],ft(this._gainNodeMatrix)}setRotationMatrix4(t){this._gainNodeMatrix[0][0].gain.value=t[0],this._gainNodeMatrix[0][1].gain.value=t[1],this._gainNodeMatrix[0][2].gain.value=t[2],this._gainNodeMatrix[0][3].gain.value=t[4],this._gainNodeMatrix[0][4].gain.value=t[5],this._gainNodeMatrix[0][5].gain.value=t[6],this._gainNodeMatrix[0][6].gain.value=t[8],this._gainNodeMatrix[0][7].gain.value=t[9],this._gainNodeMatrix[0][8].gain.value=t[10],ft(this._gainNodeMatrix)}getRotationMatrix3(){const t=new Float32Array(9);return t[0]=this._gainNodeMatrix[0][0].gain.value,t[1]=this._gainNodeMatrix[0][1].gain.value,t[2]=this._gainNodeMatrix[0][2].gain.value,t[3]=this._gainNodeMatrix[0][3].gain.value,t[4]=this._gainNodeMatrix[0][4].gain.value,t[5]=this._gainNodeMatrix[0][5].gain.value,t[6]=this._gainNodeMatrix[0][6].gain.value,t[7]=this._gainNodeMatrix[0][7].gain.value,t[8]=this._gainNodeMatrix[0][8].gain.value,t}getRotationMatrix4(){const t=new Float32Array(16);return t[0]=this._gainNodeMatrix[0][0].gain.value,t[1]=this._gainNodeMatrix[0][1].gain.value,t[2]=this._gainNodeMatrix[0][2].gain.value,t[4]=this._gainNodeMatrix[0][3].gain.value,t[5]=this._gainNodeMatrix[0][4].gain.value,t[6]=this._gainNodeMatrix[0][5].gain.value,t[8]=this._gainNodeMatrix[0][6].gain.value,t[9]=this._gainNodeMatrix[0][7].gain.value,t[10]=this._gainNodeMatrix[0][8].gain.value,t}getAmbisonicOrder(){return this._ambisonicOrder}}const Ol=["UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wQA8/8YAP3/CgACAAAA//8CAAYA8/8AAPH/CgDv/97/e/+y/9P+UQDwAHUBEwV7/pP8P/y09bsDwAfNBGYIFf/Y+736+fP890Hv8AGcC3T/vwYy+S70AAICA3AD4AagBw0R4w3ZEAcN8RVYAV8Q8P2z+kECHwdK/jIG0QNKAYUElf8IClj7BgjX+/f8j/l3/5f/6fkK+xz8FP0v/nj/Mf/n/FcBPfvH/1H3+gBP/Hf8cfiCAR/54QBh+UQAcvkzAWL8TP13+iD/V/73+wv9Kv+Y/hv+xPz7/UL83//a/z/9AP6R/5L+jf26/P3+rP26/tD8nP7B/Pv+WP1V/sP9gv91/3P9xP3J/nv/GP5S/sb+IP8v/9j/dv7U/pr+6v+u/Z3/sv5cAOr9Q/83/+n/zP5x/57+2//k/nwA/v01//L+SACB/sD/Ff81AJT+TgDp/ocAm/5dAFT+MgD+/pMAW/7o/yH/xQDA/kkA9P6LAL3+pAC0/iQAz/5UALD+UwAt/3UAhf4UAA//pwC+/joAz/5aAAv/fwDY/iMAIf+uAPP+ZAAc/0QAy/4xAB7/TgDs/goADP8wAEL/NwDo/ub/Uf9BAC3/+v9F/y4ARP9HAFP/EQA3/xMATP81AG3/HQAu/wgAaP9FACb/9f9B/y0AUP8rAED/CwBV/z4AW/8TAGH/BQBK/xsAfv8eAFn/AgB3/zwAff8RAGj//v+E/yAAb//0/3n/FwBz/xcAiv8PAHn/FQCJ/xgAg//x/3j/EQCa/ycAff/w/47/HwCI//X/iv/7/43/JQCM/+n/kP8AAJb/JACj//7/oP8ZAML/SwCo/w4Atv8tAMb/PACr/xcAwP9HAMP/OADF/y4A0f9IANL/NwC//zEA0f9LAMb/MAC8/y4A3f9GAMH/FQDQ/yYA2/8sAMT/AwDX/xkA3v8SAM3/9v/c/w8A4f8LAMj/8f/h/xQA2P8CAMn/8//j/xQA0v/7/9H//P/i/xEA0v/1/9L//f/j/w0A0f/x/9f//v/k/wgAz//u/9z/AwDg/wMA0P/v/9//BQDf////0v/y/+D/CADc//3/0v/2/+L/CgDa//r/1v/5/+T/CgDY//j/2f/9/+T/CADY//f/3P8AAOT/BwDY//f/4P8EAOP/BADZ//j/4v8GAOL/AwDa//r/5f8IAOH/AQDc//3/5v8JAOD//v/f////5v8IAOD//v/h/wIA5/8HAOD//f/j/wMA5/8GAOD//f/l/wYA5v8EAOD//v/m/wYA5f8CAOL////n/wYA5P8BAOH/AADl/wUA4f///+H/AQDk/wMA4f///+T/AQDm/wEA5////+r/AADt/wAA7/////P/AAD1////","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD//////v///wAAAAAAAAAAAQAAAAAA///9/wAABAD+//n/AgAJAAAA+v/+//f/DAAdAPv/+v+l/8L+jf/4/vgAdwVPAQACLQBo+Qj/Ev7o/N3/VgCbA08Bxf+L+yn9J/2HCU8FmgBvDe30Rv5h/LT09gi5CxkA5gOi8/30kwEM+4YJMf2nBmkJJAQQBLoFtvvv+m4A7PF6/R0Bif3qAuf8WARAAf4GyABG/BIAwvr4Acv8U//c/yIC8AEn/B8Daf2CAgMBAf3MAN38vgLK/UT/QwCyAPYClPyvAW/+pQAoASD+zP+R/IYC1f7C/nEBQP96AZb+1QAIAM//yQE7/tkAZ/7TAXL/w/8+AIsAtwB7/24A4v9a/z4A7v4iADb/dwCj/23/kgBOANUAIv8lAKEAxP9gAK7/BwCP/5kA7/9v/0wAzv9DAGT/3/9vAHv/6P+q/xUA7P8XAO//uv/g/2UAEgCV/wEATADM/+7/+//j/+D/9v/i//j/IgD+/xoAxf/6/z4A5/+8/9D/QwDq/+3/OQDT/zUAIgA/APP/PgAjAPD/BwAGACAADAC3//b/HAA3AN//RgDN/w8AIAACAN//GQBDACEAIwA+ACoAJQAeAPz/KgAYAPr/DgAEABYAIgAcAMT/7f8OAOL/5P/2//L/9P8GAPT/7v/8/+7/6v/t//z/AgAUAOL//P8VAAMA4/8IAPb/+P8MAAoA5v8NAAsA9v///wEAAAD9//n/9/8JAAYA7v/6/wMA+f8GAAEA7f/7/xgACAD4/w8A///3/w0A+f8BAAIA/P/5/xIA///9//r/7v/+/xYACQD///H/CwDz/wEADgAHAPP/FADn/+3/AQD5//f/AgD7/wEABwAMAAEADQD8//n/8f8OAPX/BAD+//X/+v8WAAQA+f8CAAEA7/8QAAEA/P8DAAUA9f8KAAwA9v8DAAUA+f8OAAoA9f/7/w0A+v8EAAgA8P/6/woA+//8/wkA+P/3/woA+//8/wcA9//1/woAAwD5/wcA/P/3/w0AAwD3/wEABAD2/wkABgD3/wEABQD3/wUABQD3//v/BwD3/wMABQD3//r/CQD7////BQD6//n/CQD9//3/BAD9//j/BwAAAPv/AwD///j/BwABAPn/AQABAPn/BQACAPn///8DAPr/AwADAPr//v8EAPv/AQADAPv//P8FAP3///8DAPz/+/8FAP7//f8CAP7/+/8EAP///P8BAP//+/8DAAEA+/8AAAEA+/8CAAIA+////wIA/f8AAAIA/P/+/wIA/f8AAAIA/f/9/wMA/////wEA///+/wIA/////wAAAAD+/wAAAAD/////AAD//wAA//8AAP//AAD//wAA","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD////////+//////8AAP////8AAP//AAAAAPz//f8IAAMA9////w4AAQD6/wwA8//+/y8Afv/0/2H/UP5gAbH+2QG1B2cAVAIh/l32FPyM/nACPQDV/+UEo/Q6AQwCu/oLD9kF8QJA/Uz+Wf2KCOcC+wUKBsL5aQBQ97rwOPiPAvn5CAl8AHEDkQPcAA8Bn/lIAdz7HQF1+xz9cAM4/94E4gDKAun+cgPYAYr9JgJr/bf+ivxz/MoBgv5UA8EBSgAQAJ7/UgEk/cQB7f63/sD/vf4XAhT/BQFCADYAnQGI/9EBtv3hALD/vP+c/3H/TgIN/1sBpf8yAP3/4f8qABr+1f8OAJ3/dwAGADEBnv9JAPz/IQBwAIH/jgAS/4wAsACTAOn/DQDCALn/ZQCSAAIAAwD1/9//jv9aADQA/v9EAB0AfgA8AAQACgB9APr/IAARAPT/5v9xACAABAAHAGUAt/89AC4ACgAjAMP/+v/9/xYA7f/1/+D/7P87AC0Auv8RAAcA9/8FAC8A2//y/xIAEwAaADQAJADp/zoAAgAfABIA2f/e/zUA+P/6/w4A9//A/zcA4//P//T/5f/R////EwDb/w4A8/8BABkANADh/xEA+f/0/wIAHADc//j/GwD1//f/GADs/+v/EAAAAPz/EgD3/+r/FgAMAAkAGAD9/+z/IQAQAPH/GQD3//z/CgAfAOX/AgD8//H/BAATAOv/+v///wIABAAdAOj/BQAPAAcAAQATAOz/8/8JAAkA6f8VAOv/+f8QABUA/v8OAO3/+P8KABUA9f8FAPv/5/8TAA0A7f8XAAkAAQAJABYA4/8WAAcACgANABEA7v8EAP7/AAD+/wMA9//7/xAAAQD8/wQA+f/7/wMABgDq/wAA+v/3/wYACQD1//3/BAD9/wgADgDw//r/AgD6/wEACADv//j/BQD///X/BwDu//j/AgACAPP/BAD2//n/BAAGAPb/BAD8//3/BQAJAPL/AwD+//3/BAAIAPP//f8DAPz/AAAGAPP/+/8CAP7//f8FAPX/+f8DAAAA/P8EAPf/+v8GAAMA+/8EAPv/+/8GAAQA+v8CAP///P8EAAUA+f8AAP///f8CAAUA+P///wEA/v8BAAUA+f/+/wIAAAD//wUA+v/9/wMAAQD9/wQA+//9/wMAAgD8/wMA/P/9/wMAAwD7/wEA/v/+/wIAAwD6/wEA///+/wAABAD6/wAAAQD//wAAAwD7////AQAAAP//AwD8//7/AgABAP3/AgD9//7/AQABAP3/AQD+//7/AAACAPz/AAD+//////8BAP3/AAD//wAA//8BAP7/AAD//wAA/v8AAP7/AAD//wAA//8AAP//","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD//////P/9//3//////wAAAAAAAAIAAgACAP//CAAEAEEA//+cAAUAb/8HAAH9+P9eARkAogQUAJn8BwCd/gX/+QQNAKoC9gFdAtb/b/vd/936TP/6AsD/nfqn/un1W/0dA8IEsQLvAJv2bP72+WMAkP8dAcX+nQO2AIr6bP/EABX+NgK/Bdj2IQv2AE4EUAiD/xQAnwIm/B0B/wGNAoH7sQaP/b8CiQakAqD+R/9xA477KQL//6r75v/O/pcCgQCtAiMCBQAkANAARwHf//39hgBl/kUAJgEtAUEATgA/AgoASADK/zUAJv29/vL+l/9c/0cAUwBBAE8A6QE5/87/Wv9NAOf+5v7P/5P/4/9BAKYAQwDD/zYB5v+r/zYATwAp/1v/WQAEAB0AhwA0AA0AIAA3AAEAzv/u/+//5v9m/zwAIADQ/8T/SABiANb/SwAbAFf/MQDX/7L/hP8TAPr/AgAMAAsAHwAZAI3/VgDC/9v/5//x/6P/AwBlAMv/yf82AB4A+P9WAPj/NwDi/1EA0v9JANj/JwAcAAEADABYANj/4f8MAEwAmP82AN//3P8UADYA7//6/wIACADU/ygAyv82AN7/9v/2/ygAxv/9/+3/5//n/zUA6//g/y4ADgD5/wsABwDv/xIADwAGACoAJQD3/zIA+/8FABsAFgDO/zAAHAAIABQALADp/xcACAAAAPH/GADs/wkACQAFAAgAFQDp/wIAHAD1//P/EQDw/+3/GAD9/+f/HAD8//T/DAAQAPH/HwD4//r/DwAPAOj/EQACAOn/DAAXAOX/BAAOANH/9/8MAO//9f8LANT/9f8EAO//6f8NANb/+P8KAOz/5v8MAOD/7f8UAO//7//+//7/9v8YAPj/9f/z/wsA+v8SAPD/+v/x/xYA+f8SAPb/9//3/xEABQACAPn/9//y/xQACQD///b//v/7/xIACQD9//H/AAD7/xEAAgD5//P/AwD9/w8AAgD3//D/BAD//wUA/v/0//D/BgADAAMA/P/2//f/BwAGAP7/+//2//j/CAAFAPv/+f/5//v/BwAHAPn/9//7//7/BQAFAPf/9//+/wEABAACAPf/+P8BAAIAAgAAAPj/9/8CAAMAAAD+//n/+f8EAAQA/v/8//r/+/8EAAMA/P/7//z//P8EAAIA/P/5//7//v8DAAEA+//5//////8CAAAA+//5/wEAAAABAP//+//6/wIAAQD///3//P/7/wMAAQD///3//f/9/wIAAQD9//3//v/9/wMAAQD9//z/AAD//wEAAAD9//z/AAAAAAAA///9//3/AAD//wAA/v////7/AAD//wAA////////AAD//wAA//8AAP//","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+////+f////v//v///wAA/////wUAAQAIAAIABwACAHkATAAOAaMAAf9C/9X6QvwhArAAtghABW37nv/y+0wAWQNcAE8JRwSOC6AEJe8P8S/zrPWaBI/+LQA/+0L+P/4K8AgAb/8uCh78BQtC614GaQWfAin5UfzN8Tf+GQizAZ4MCQMbGJ4BoRS7AvcHyQARA6n9ZwHZ/z4DvwAZAlAB6gbNAS4GFADFATL7E/2K+j37C/xp/SD9Uv0VAOsDs//WAd3+bv7F/f79mP2X/KH+FwC0/1n+VgFcATABHQGaAET+nf8Y/hoAovpqAXj9CQKW/lsCl/4RApj+bAHk/RcAlv4BAG/+DgDi//3/GwAOAEIAq/+y/3z/8v8+/7T/Tv8//27/mgDZ/1sA+P+cAAAA/P/i/yMAi/85AMP/KgDM/9MA9P+QABoA4QAiACwACwBdAP7/TQDb/y0Ayf+SAA0AZwDg/4wA+/8/AAMAgQDp/w0ADAAQAAoANgAgAA4AKABIAB4A4v/3/+f/+v/c/+n/EADn/wgAFAAqAOz/IwDc/9//3f8XAND/2v/a/w0A5v8BANb/9P/m/wAA8P8ZAN3/RwAGAEsABgB/AP7/NAASAEgABAA3AP3/KgD9/1sA8P8lAOr/FgD1/xAA4/8kAOv/AwD4/xEA5f8NAPT/+v/3/x8A7f8PAPj/IwD5/yAA9/8ZAAEAGgD4/xoA9f8HAAMACAD0/xgA+P8AAPr/IQDp/w4A8v8HAPX/IgD1/wYA+P8GAPX/GgD3/woABQASAAcAGQDw/+v/9P8bAP3/HADs/+f/7/8LAPr//v/0//T/AgD2/wsA6P///+P/CADY//7/5v/3/wQA/v8LAPD/GgD1/yMA/P8QAOv/LADw/yQA+P8XAO7/MQD9/yEAAQAcAPD/IgD9/xMA+/8OAO//FQABAAoA+/8PAPP/FQABAAQA9/8PAPX/CAADAAEA+P8NAPv/CAAGAAUA9/8JAP//AAAFAPz/+f8HAAQA/f8FAP3//P8FAAYA+P8DAP7/+/8AAAcA9/8BAP///f///wgA9//+/wAA/v/8/wUA9//8/wIA///7/wUA+v/7/wIAAAD6/wMA/P/6/wEAAQD6/wEA/v/7/wIAAgD6////AAD7/wEAAgD7//7/AQD8/wAAAwD8//3/AwD9/wAAAgD9//z/AwD/////AgD+//z/AwAAAP7/AQD///3/AgABAP3/AAAAAP3/AgACAPz///8BAP3/AQACAP3//v8BAP7/AAABAP3//v8CAP7///8BAP7//f8CAP////8AAAAA/v8CAAAAAAAAAAAA/v8BAAAAAAD//wAA//8AAP//AAD//wAA//8AAP//","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAP//AAD//wAA//8AAAAA/////wAAAQD+////AAAGAP3/OAABAIIAAwBv//f/E/0QAK0ADQCzA/7/8P4u/0cBDQCJA6ABbQDg/w7/z/9o+Vn/SPnL/1//Ef+2+jr9RfZgA5QFZwILDFj+PAb2/nEFKgKk/R0Dlv6b/FUDsP6YAoj9SgAT/iL/tAPwAv8A0P6zAr7/dwAnAf39uP22/skA2v///2YCoP4UAUsAZgF2AJH+4P70/rz9+f+U/Xv/8v7CAcb+TACS/kwAv/+x/tX9oP71/oL/1f8nAEUAZwGtAAgAIgC/AD4BaP8GAGH/dQDF/64Arf8nAakAhAH9/+kAQQD3AFb/q/8p/yIAR/8FAPD/ZAA/AIYA3v8tADQADQBp/3f/CwABAP3/Wf8OANj/WwDH/xoAe/8DAKz/zv96/z8A3f/J/5X/IAD5//j/q//c/+//RADq//D/vv8pADUAFQDI/y8ACAAbANb/OwD3/+3/9f/e/wcAIAAeAMH/8/8xAC0AEADW/+3/HAADAPv/8P8DAOL/OwD3/xcACQAHAM//5f8XAAcAz//T/9D/HgD9////yf/e//v/AgD//9H/6/////H/+/8hAAIA9//7/w0AFgAQAPL/2v/8/xsAGQABANz/9P8YAAQA/v/y/wMA5v8YAAkAAAAAAAMA7/8KABgADwDs//j/BwATABsA8P/1//z/BAAMAAAA9P/s/xAA/v8GAAkA/v/p/wMACwALAP7/9P/p/wcADQAFAPb/7//4/w0ACAD8//b//v/1/wMACwD1//T/8P/8/wAACQDz/+f/5P8GAAkABQD5//D/+v8FAA0AAwD///T/AgACABAA/v8CAPD/+/8FAAoA9f/3//f//v8GAP7/9v/t//z/+f8AAPj/+v/3/wEA+v8HAPr//P/5/wQA//8DAPr/+P/3/wYA///+//X/+//5/wQA/f/7//X/+//4/wMA/f/8//j//v/9/wYA///8//f/AgAAAAUA/f/6//n/AwACAAIA/f/7//z/AwACAAAA/f/6//3/AgADAP7//f/7/wAAAwAFAPz////8/wMAAgAEAPv//v/+/wMAAgADAPv//v///wMAAQABAPv//f8AAAIAAAD///v//f8BAAIA///+//z//v8CAAIA/v/9//3///8CAAEA/v/9//7/AAACAAAA/v/9////AAABAAAA/f/9/wAAAQABAP///f/+/wEAAQAAAP///v/+/wEAAQD///7//v///wEAAQD///7//v///wEAAAD+//7///8AAAAAAAD+//7///8AAAAA///+//7///8AAAAA////////AAAAAP////////////8AAP//////////","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAAAAAAABAAAAAAD//////////////v////3/////////+//8////AQD9//z/9f8BAAIA+f8dACgAWQBxAJX/qv+Y/uz9aP9k/7UDUQQBAiQA4Pgi/AkB0gKaBsD/+fxp/vz9CQSp/I/+ywDO+vMD0fzK/PABcgBeBfoBv/+uAuH9Sf5gAy39awMmBWUBuP9fA9/9fgDj/2/+EACaACcCSv9Z/2j/rv7hAA0AWf55/7L84P7E/SIAT/67AMv/tf+FAA7/1v+7/gv/IP+E/sQA+P5aAXz/tP9XAFX/tP8o/4r/j//e/yQAMv9mAJT/rgCr/9X/EwCb//H/9f7F/6D/EAAoAK3//v+e/zsAh/+B/7r/if/C/2r/4P/z/6//HwCy/0IA7/9ZALT/y/80ACgA9v/J/9//DgA5ADUALQARADIACwAfAOf/NgArACMACQBBAEcAGAAjAC4AWQBUAHcAAAAfACEAIAAcAPj/CADk/yQA7v89AEEAFwD5/xYA6f8aAOX/AADF/zQADwAUAOT/BQDr/yUA6P8XAOf/HADR/0AA8P8nAAgACQDt/ycAKAAHAPH/IQDz/xsACADn//n/DgADAA4A8P///8z/GgDN/yMA/f8QANj/MwACAC0ACwAOAO3/JgAZAAUACgAAAA4AIgAaAAkADwACAAAAHQATAAUABQACAAgACwAjAO////8AAA8ABQAPAPL//f8GAAsABgAGAPD/8v8GAPz/CAD6//H/6v8PAAgABgD4//3/9v8aAAgABwD1//7//v8QAAoACAD//wUA9v8QAAoABAAFAAgAAgAJAAoAAwD//w0AAgD//wcA/v8DAAoABQAFABUABAAKAAYABwAHAA8ACgAGAAwADwAMAAkAEAAJAAgADwAMAAgADgAJAAUACQAPAAUACwAHAAEABgAIAAEABAAGAP//AgAJAAAAAgAEAP7///8IAAIA//8GAAEAAQAJAAIA/v8EAAMA//8JAAEA/v8DAAMA/v8HAAMA/f8BAAUA/v8FAAMA/v8BAAcA//8DAAMA/v8BAAYA//8CAAMA/////wcAAAAAAAMAAAD//wYAAQD+/wMAAQD//wUAAQD+/wIAAgD//wQAAgD+/wEAAwD//wMAAwD+/wEAAwD//wIAAwD//wEABAAAAAEABAD//wAABAABAAAAAwAAAAAABAABAP//AwABAAAAAwACAP//AgACAAAAAwACAP//AgACAAAAAgACAAAAAQADAAAAAQACAAAAAQADAAAAAQACAAAAAAACAAEAAAACAAEAAAACAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAAAAAAAAAAAAAAA","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAP//AAD//wAA//8AAAAA//8AAP//AAACAAAA+f8BAAYA///4/wIA//8AAA8A/v/V/wEAEwA9AAEBRwA2AF7/kfog/3gBwv99CDYBU/qtAUX/AP7OAfkAX/o9B38FSfwaAuT14/60BAr8CQAI/tfyIQTzAXP+egdUBBwBof7TBMT8bAWi/5EEWwBRAAAKyfxE/8b88vp6ACP+PAF4/qD8MQNM/ygCJ/2XAPD9kP5gAVT/iP9I/lEB4P8qAD0BFAGa/+7/DgB2AOP98gFm/u/+Vv5/AG8ASP9gAM//qv9w//oAcv+2/jIBHgA7/6D/oAAGAKH/lADT/wAAggC8AAYAkP9yAEcAkf8BAOD/RAAr/zUANwDt/xQAJQAkAMT/zwA/AOH/xv9zAGsANQBTAIcALAAvACIATACy/xMADADg/xcAWABvAJL/7f9VAPb/EgDt/wcA4f8kAPP/5P+h/wgACQDy//r/LgAQAMn/8/9CAOX/5v/S/9//3P8pABYAuP/s/w8AFgDt/+3/7v/w/9j/5/8GAOf/2P/2//P//v8kABMAuf/m/xoADADZ/+r/3P8KAAUAKwDe/wsA3P8VAAAADgAfAB0ACAAMAF4AGgAhAPL/MwDz/0kABAAKAPX/LwAbAAkA9v/s/+3/8/8CABAAAADm//n/BQALAAUAAQDj//n/JQAVAPX/9v/+/wIAEQABAPP/8P/1/wAABgD6/+3/7//o//j/DAD8/+b/8P8IAAkABgD4//D/8P8UAAoAAwD4/wAA+f8OAAcAAAAFAPX/9v8TAAkA8v8EAPb/9/8dAA0A7/8CAPn/+f8SAAQA8/8CAOf/+v8DAAgA9P////H//P8IAAUA8//0/wIAAQAGAAgA9//7/wAA+/8EAP//+P/+////AgACAAsA8v/+/wIABQD7/wgA9v/7/wMABAD5/wAA/P/3/wEAAQD7//7//P/1/wQA///3//r////3/wMAAwD1//r/AwD6////AgD4//n/AwD8//7/AgD4//n/AwD+//3/AQD4//n/BQD///n/AAD6//j/BAABAPj/AAD9//v/AwADAPj//v/+//z/AwAEAPj//v8BAP7/AQADAPj//f8CAP////8EAPr//P8DAAAA/v8CAPv//P8DAAEA/f8BAP3//f8DAAIA/P8AAP7//f8DAAIA/P///wAA/f8BAAIA+//+/wEA//8AAAEA+//+/wEA/////wEA/P/+/wEA///+/wAA/f/9/wEAAAD9/wAA/f/+/wEAAQD8/////v/+/wAAAQD8////////////AQD9////AAD/////AAD+////AAAAAP//AAD///////8AAP//AAD//wAA//8AAP//"],Ul=["UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wQA8/8ZAPr/DAD+/wMA/v8KAAQA/f8DAAMABADs//z/8v/z/8f/R/90/ob+//zAAWsDAwY3DKn9//tu93DvkwI6An4CuwJ0/BH7VPux92X0Gu7N/EX9mgfqCkkIiRMgBd4NQQGL/c0G/xBxAKELZATUA/sIHRSx+fkCyAUmBNEJIARlAdHz2AjNACcIsAW4AlECsvtJ/P/7K/tf++n8aP4W+g0FXAElAMn8nQHn/sT+Zv7N+9X2xvzM/O3+EvpqBBD7SQLd+vb/sPlw/JD72/3n+Rr+L/wS/vz6UQGg/Nf+Av5L/5X9Gv2//SP+mf3j/lf+v/2B/ZH/5P05/iL9MP9F/uf9UP4v/qv9mv7o/Xn+wP2k/8L+uP5J/tD+Dv/Y/bL+mP72/n3+pP+7/hAA+/5zAGH+Z/+u/g8Azv2y/6L+//9o/iIADP8VACz/CwCN/pb/1v4yAFP+wf+4/jsAcf5VAP3+bADa/nMA6f4sAOT+IQBd/v7/7v6aAIL+QADe/nEA0P4yAKz+CQCo/moAuf5xAN7+mAC8/jcANf9eAPX+IAA1/1kAAP9hAMz+PQD5/m0A2/4gAPr+UQDh/jQAEv9BAPH+FABN/zkASv9DADP/BABe/1IAGf8oAE3/RQAw/zIAQf8mADn/GgBE/xIAR/8hAD7/BABy/zEAKP/0/07/GwBX/z4ARf8mAFr/QQBV/zUAVP8eAFz/JABt/0EAUP8MAHz/KgBr/ycAYv8EAH3/MABl/x8Agv8bAIj/GgBv//z/ff8AAJX/IABu/+T/jv/r/4z/9/9n/77/pP8JAJD/EQCJ//r/q/8WAJ//GQCU/xYAtv8qAKr/PQCW/ysAwf8+ALb/OgC3/ygAz/8uAM7/OgDH/ygAz/8kAMz/OgC//xsA1f8qAMn/LwDN/xcA1f8oAMv/JQDR/xMAzf8bAM//HgDU/wUA2v8ZANL/EwDW/wEA1f8ZAMz/BwDX/wIA0v8SANT/BQDW/wMA0/8PANT/AADY/wIA1f8MANX/+f/a/wUA0v8IANf/+//Y/wUA0/8DANr/+f/Y/wQA1v8BANr/+f/Z/wUA1//8/9z/+v/Y/wYA2f/8/93//v/Y/wUA2v/9/93////Z/wUA3P/8/97/AgDa/wMA3v/8/97/AwDb/wIA3//9/97/BADd/wEA4f///9//BQDf/wAA4v8AAN//BQDf/wAA4/8CAN//BADh/wAA4/8DAOD/BADi////4/8DAOH/AwDk/wAA5P8FAOL/AgDl/wEA5P8FAOL/AQDl/wEA4/8EAOL/AQDj/wIA4P8DAN//AADg/wIA3v8CAOD/AADh/wEA4v8AAOP/AADm/wAA6P8AAOz/AADu/wAA","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD//////f/+//7///8AAP////8BAAEA/f8AAAEAAQAFAAUA9//6/x0A2f/9/xMA3P+jAE//of9HAKP//gCj/77/Z/vi/28D9/ywDJAJIvr6AsX0Xec4BhcGzf23DZP7yfZ6C1//nwBDBIHyYgob/Tf3sQ41ANoKRA/A+E7yffAa9gD5EQUBDMwMygiqAHMAqPqhAGUB2/gE+a78H/+4APT6DwIUAA0HNwMhBfL8E/90A5n7dP9cALIC+v5C/q0AOv9kAogBHv01/+3/qAQD/ub8T/4vAOUA5P6KATv+ywEYAeT+KP6i/3gCFP6h/hr/+P83ACL/VADn/8UARQJI/4MAu/8qAlj+wf4iAPb/LgFJ/8QAUABAAI4ABf+k/3X/YgFK/ij/j/9HADoAi/+WAA0BVwC/ACL/LACe//cARv9i/xgAUgA0ACj/FgBgAIj/5P9M/7z/zv8/AKz/gv8sAEQA6/+I/yYAawDL/7T/xf8qAOv/FQCu/5n/EgAyAO3/i/9LAE4A+//R//P/FgDe/8z/u/8DADIALAAZALL/TAA8ABwAo//1/xwA/P/L/z0A6P8jAN7/7v+a/zAAwf/7/3//KQAuACwA9v8RAGYAIwBNADgAKgASAF0ADgANACEAMQDH//H/LQACAB0Ay////x0APAABAAQA2v8iAAcAEgDE/+v/FQD+/+P/DAD1/97/6v/4//X/EwD4/+7/5P8cAA0ACQDH//7/CQAXAAEA/P/5//j/CwAWAAEABQD9//n/AQAWAB0A7v/k/wAACQAmAP//9/8AAPn/8/8aAO//6/8fAOv/5v8hAP//5/8PAOf/AAAGAPn/6v8JAAYABgABAOv/1//1//L/+P8DABcA6f/8/wMACgD7/xAA3v/2//z/DADu//z/5v/5/wEA/P/6//7/7v/x/wQABgD5/wAA8v/w/wkAEQD2//j/+v8EAAcAEAD3//v/+v8CAAAACQD3//v//v/9/wUADAD2//X/AgAHAAAABwD2//T/BgAKAP7/AQD4//r/BAAIAPn/AAD3//f/BQAHAPv//v/7//n/BQAJAPj/+v/9//7/AgAGAPj/+f8BAAEAAgAFAPn/+v8BAAIAAAAEAPn/+f8CAAQA/v8BAPr/+v8CAAQA/P////v//P8CAAQA+//+//3//f8CAAUA+v/9//////8AAAQA+v/8////AAD//wIA+//8/wAAAQD+/wEA+//8/wAAAgD9/////P/9/wEAAgD8//7//f/9/wAAAgD8//3//v/+////AQD8//z/////////AAD8//3///8AAP7/AAD9//7///8AAP7////+//////8AAP7////+////////////////////","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD//////v8AAP///////wAAAAAAAP7/AQABAAAABwD///X/BQAjAPL/CQDb/9D/GAAb/7sAYwCW/z0BcP/X/7T/2QDW+wH8yANCCCUJ5QT++UXmhPwhA78FuAxH+p78ifudBlAG9vmu/lAK2fdlB///cfjoCa0E7Akn9Yb/zvba+AkAHPywBGEBFwUNAL8AXAAGA20DFvmR/kz+F/06Ag/+GwHl/5EEKgJd/q0AP/ym/9n6EfxY/2H+/QFtAC4C6QBDAaMCo/20/+3/3f/p/fL9rv9V/6cBhQHuAX4AcwJYAaH/IP/P/gsApP0LAe7/sQBuAI0AAgGDAE4BzACe/5X//v+v/+f+Zf+gAOv/5QBhAOIApAANASYAuP+h/8b/HQBr/9//bACWAGEAFAB5AD0AWQDU/+D/Yf/p//D/s/+R/4QAMQBvABEAkQBfABQAJgDW/wwA8/8XALz/vf8zAFAAKwD1/zEAPwDJ/x0A7/8LAOX/FwDR//H/EQAdAO//6P8QAFEA2f8WABEAMgDy/xIA+f/s/xAALgDv////HQAvAPT/+f8iAAYAEgAFABoAGgD//w0A+f/0/xsAHgDx/9f/GAACAPH/8f8JAPf/GwALABEA7/8cAPT/CgD2//j/BQD8/+3/OgAgAAYA9f8PAN7/DgD9/9r/1//3/+3/9//1//b/8//5//f/AgAJAOf/+v8OAAMACwD9/+7/5f8eAAEA9//q//7/8P8WAP7/+//4/wIA+f8TAAIA9f/5/wcA+P8iAAgA9v/n/xoA//8gAAUABwDj/wAA9v8BAAUAFQDn/wMA7v8QABAAEQDm/wwA8f8aAAAABwDu/wcACgASAAEA7//w//f/BgARAAkA6P/3/wcADgAKAAYA4f/4/wYADgAAAPr/8P/9/xQACgAHAPn/7//9/xEAAgD+//L/8v/8/xUAAwDw//H/9f8CAAsA/v/q//L/+f8FAAYA/P/r//j///8GAAkA+//o//j/AQAIAP//+v/o//v/CAAIAPv/+P/w/wEACQAHAPj/+f/0/wIACwAFAPb/+f/4/wQACwACAPP/+f/+/wYACAD///L/+/8BAAYABQD9//P//P8FAAUAAgD7//T//f8HAAQA///7//f///8IAAMA/P/6//r/AQAIAAEA+v/6//3/AgAHAAAA+f/7/wAAAwAFAP7/+P/8/wIAAgACAP3/+f/9/wMAAwAAAPz/+v/+/wQAAgD+//z/+/8AAAQAAQD8//z//f8BAAQAAAD7//3///8BAAMA///7//3/AAACAAEA/v/7//7/AQABAAAA/v/9////AQAAAP///v/+////AAD/////////////////////////////","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD////////+//////8AAAAA/v/+/wAAAQD8//3/CQAJAP3/+v8PAAcApABlABkBkwCO/i//lfqa/HQAcf/3BdkCzwJcBCMC0wMN/9/9wgI7AaECYfxV/Tf83vhn/xrt8Owx/8n7cgHABYb43QcZDh4WugNrA7P74gHu/9z/zv0t/acCiQHY/iv4qQOl/ysCE/0//XT9Sf4O//j9xfupAn394gHO+rsCXAFIAxQC9wIXBgcD2AQuAnb/9gJh/6wAVfxEAI4Bvf7oAFv/bALsAMQBe/88/joAT/4dAH39/v9LAXn/gwDI//QBdABcAA0A7f4lAMn///+9/tv/iABp/13/pP/dALv/w/8MAHv//f+y/6////7U/5AAZP+Z/8r/nQDR/5r/DwDr/xAA4v+s/3z/+P9uAOv/t/82AGcAHgCb/yQAFQBGAM7/CgD3/xoAegAaAOz/CgBHAA8Adv8/AAAABQC2/xIAAAA7ABQAKgCj/z4AAQAXAJz/JAADAAcA8f/1/2AAAQAlAPD/NgDx/1wA7v/4/wMAZADv//3/HQAkAFoA8P9FAPv/FgBIAPf/WQAHAEUACQD0/xIAQwDu/wMAwP9VALn/XwCw/yEA5f8sAPj/FgDD/1YAyv8rAOX/HQDo//j/IQAQACAAHwD9/yQAHQBAABgABQAiAAUAKAD3/wkACwAKAAMABwAJAPb/+f8GAOr/JQAHABMA6P8TAA4AGgD//woA8/8ZAP//GADu/w0A9v8SAAMABwD4/wQA5P8XAAQACgDq/wUA+/8VAAcACADs/xIAAAATAPH/+v/1//T/7f///+z/+v/y/+//9/8KAAcACgAJAPT/BAAKAAAABgAIAPL/9v8KAAMABAACAPr/9v8OAAIA+P/x//v/+f8MAPb/+P/w/wQA9f8MAPn////7/woA/v8PAAEAAgD1/xAAAQAPAP//AwD//xQABwALAAAABgADABAAAgAHAAAACAABAA8ABQAFAAMABwAEAA4ABwADAAEACQAFAAoAAwD//wAACQADAAUAAQD/////CAABAAMAAAD/////BwACAAEAAAD/////BwACAP7///8BAAAABgABAP7///8CAAAABAAAAP7///8DAAAAAwAAAP3///8DAAAAAQAAAP3//v8EAAAAAAD+//////8EAP/////+/wAA/v8EAP/////+/wEA/v8EAP///v/+/wIA//8DAP///v/+/wIA//8BAP///v/+/wMA//8BAP/////+/wMA//8AAP//AAD+/wQA//8AAP7/AQD//wIA////////AQD//wIA////////AQAAAAEAAAAAAP//AQD//wEAAAAAAP//AQAAAAEAAAAAAAAA","UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wAA+v8AAPz/AAD//wAA/f8AAAEAAAD+/wAACQAAAAQAAAAZAAAAtgAAAFsBAABW/gAAH/oAAGcBAABoBwAAlAAAAO3/AAARAQAA+wIAAEoEAACe/gAAiv4AALD0AADJ8wAAkQQAAF34AABi8QAAPQAAAAH2AAD19AAADAMAAJwGAACTEAAA0AwAAJkHAACOBwAAuQEAANcDAAC6AgAAHwUAAHEFAAB0AwAAbgEAADz+AADYAQAAGAAAAJwCAADgAAAA//0AAMn+AAAT/AAAwP8AAOn9AAAJAAAAewEAAOn+AACN/wAAOv0AAO3+AADN/gAAcP8AACj/AACq/gAA+f4AAML9AACa/wAA/f4AAN7/AABo/wAA6/4AAE//AAAC/wAAEQAAAHX/AAB0AAAA5f8AAEwAAAB3AAAA5/8AAMIAAABCAAAAzgAAAE8AAAB3AAAAKAAAADMAAACqAAAALwAAAK4AAAASAAAAVgAAACgAAAAtAAAATAAAAP3/AAA7AAAA2/8AACQAAADw/wAALQAAADEAAAAlAAAAbAAAADMAAABUAAAAEAAAACgAAAD1/wAA9v8AAPr/AADu/wAALgAAABIAAABUAAAARAAAAGUAAABGAAAAOAAAAGAAAAAuAAAARQAAACEAAAAfAAAAAAAAAAkAAAAQAAAAAwAAABIAAADs/wAAEAAAAAYAAAASAAAAIgAAABEAAAADAAAABAAAAA8AAAD4/wAAHQAAAAsAAAAIAAAADgAAAP//AAAcAAAADwAAAAYAAAASAAAAFwAAAAMAAAAYAAAAEgAAAPr/AAAQAAAADQAAAAoAAAD3/wAABgAAAPb/AADf/wAA/v8AAPL/AAD6/wAAFAAAAAQAAAAEAAAAGwAAAAEAAAAMAAAAIAAAAAIAAAAdAAAAGAAAAAIAAAAcAAAAEgAAAAcAAAAeAAAADwAAAAQAAAAeAAAABAAAAAYAAAAZAAAAAQAAAA4AAAATAAAA/v8AAAoAAAAOAAAA+/8AAAsAAAAJAAAA+f8AAAsAAAABAAAA+f8AAAoAAAD9/wAA+v8AAAcAAAD5/wAA+v8AAAUAAAD3/wAA/f8AAAQAAAD2/wAAAAAAAAEAAAD3/wAAAgAAAAAAAAD4/wAAAwAAAP7/AAD6/wAABAAAAP3/AAD8/wAABAAAAPv/AAD+/wAAAwAAAPv/AAD//wAAAQAAAPv/AAAAAAAAAAAAAPv/AAACAAAA//8AAPz/AAACAAAA/v8AAP3/AAACAAAA/f8AAP7/AAABAAAA/f8AAP//AAABAAAA/f8AAAAAAAAAAAAA/v8AAAEAAAAAAAAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA"],zl=[2,3];class kl{constructor(t,e){nt(t)||et("HOARenderer: Invalid BaseAudioContext."),this._context=t,this._config={ambisonicOrder:3,renderingMode:it.AMBISONIC},e&&e.ambisonicOrder&&(zl.includes(e.ambisonicOrder)?this._config.ambisonicOrder=e.ambisonicOrder:tt("HOARenderer: Invalid ambisonic order. (got "+e.ambisonicOrder+") Fallbacks to 3rd-order ambisonic.")),this._config.numberOfChannels=(this._config.ambisonicOrder+1)*(this._config.ambisonicOrder+1),this._config.numberOfStereoChannels=Math.ceil(this._config.numberOfChannels/2),e&&e.hrirPathList&&(Array.isArray(e.hrirPathList)&&e.hrirPathList.length===this._config.numberOfStereoChannels?this._config.pathList=e.hrirPathList:et("HOARenderer: Invalid HRIR URLs. It must be an array with "+this._config.numberOfStereoChannels+" URLs to HRIR files. (got "+e.hrirPathList+")")),e&&e.renderingMode&&(Object.values(it).includes(e.renderingMode)?this._config.renderingMode=e.renderingMode:tt("HOARenderer: Invalid rendering mode. (got "+e.renderingMode+') Fallbacks to "ambisonic".')),this._buildAudioGraph()}_buildAudioGraph(){this.input=this._context.createGain(),this.output=this._context.createGain(),this._bypass=this._context.createGain(),this._hoaRotator=new Il(this._context,this._config.ambisonicOrder),this._hoaConvolver=new Nl(this._context,this._config.ambisonicOrder),this.input.connect(this._hoaRotator.input),this.input.connect(this._bypass),this._hoaRotator.output.connect(this._hoaConvolver.input),this._hoaConvolver.output.connect(this.output),this.input.channelCount=this._config.numberOfChannels,this.input.channelCountMode="explicit",this.input.channelInterpretation="discrete"}dispose(){mode===it.BYPASS&&this._bypass.connect(this.output),this.input.disconnect(this._hoaRotator.input),this.input.disconnect(this._bypass),this._hoaRotator.output.disconnect(this._hoaConvolver.input),this._hoaConvolver.output.disconnect(this.output),this._hoaRotator.dispose(),this._hoaConvolver.dispose()}async initialize(){let t;tt("HOARenderer: Initializing... (mode: "+this._config.renderingMode+", ambisonic order: "+this._config.ambisonicOrder+")"),t=this._config.pathList?new Pl(this._context,this._config.pathList,{dataType:"url"}):2===this._config.ambisonicOrder?new Pl(this._context,Ul):new Pl(this._context,Ol);try{const e=await t.load();this._hoaConvolver.setHRIRBufferList(e),this.setRenderingMode(this._config.renderingMode),tt("HOARenderer: HRIRs loaded successfully. Ready.")}catch(t){et("HOARenderer: HRIR loading/decoding failed. Reason: "+t.message)}}setRotationMatrix3(t){this._hoaRotator.setRotationMatrix3(t)}setRotationMatrix4(t){this._hoaRotator.setRotationMatrix4(t)}getRenderingMode(){return this._config.renderingMode}setRenderingMode(t){if(t!==this._config.renderingMode){switch(t){case it.AMBISONIC:this._hoaConvolver.enable(),this._bypass.disconnect();break;case it.BYPASS:this._hoaConvolver.disable(),this._bypass.connect(this.output);break;case it.OFF:this._hoaConvolver.disable(),this._bypass.disconnect();break;default:return void tt('HOARenderer: Rendering mode "'+t+'" is not supported.')}this._config.renderingMode=t,tt("HOARenderer: Rendering mode changed. ("+t+")")}}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Gl="1.4.2",Hl=function(){const t=navigator.userAgent;let e,n=t.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d\.]+)/i)||[];if(/trident/i.test(n[1]))return e=/\brv[ :]+(\d+)/g.exec(t)||[],{name:"IE",version:e[1]||""};if("Chrome"===n[1]&&(e=t.match(/\bOPR|Edge\/(\d+)/),null!=e))return{name:"Opera",version:e[1]};n=n[2]?[n[1],n[2]]:[navigator.appName,navigator.appVersion,"-?"],null!=(e=t.match(/version\/([\d.]+)/i))&&n.splice(1,1,e[1]);let i=t.match(/android|ipad|iphone/i);return i||(i=t.match(/cros|linux|mac os x|windows/i)),{name:n[0],version:n[1],platform:i?i[0]:"unknown"}}();
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */tt(`Version ${Gl} (running ${Hl.name} ${Hl.version} on ${Hl.platform})`),"safari"===Hl.name.toLowerCase()&&(window.webkitAudioContext&&window.webkitOfflineAudioContext&&(window.AudioContext=window.webkitAudioContext,window.OfflineAudioContext=window.webkitOfflineAudioContext),tt(Hl.name+" detected. Polyfill applied."));const Wl=[[[0,0,0,1,1,1],[.052336,.034899,.017452,.999848,.999391,.99863],[.104528,.069756,.034899,.999391,.997564,.994522],[.156434,.104528,.052336,.99863,.994522,.987688],[.207912,.139173,.069756,.997564,.990268,.978148],[.258819,.173648,.087156,.996195,.984808,.965926],[.309017,.207912,.104528,.994522,.978148,.951057],[.358368,.241922,.121869,.992546,.970296,.93358],[.406737,.275637,.139173,.990268,.961262,.913545],[.45399,.309017,.156434,.987688,.951057,.891007],[.5,.34202,.173648,.984808,.939693,.866025],[.544639,.374607,.190809,.981627,.927184,.838671],[.587785,.406737,.207912,.978148,.913545,.809017],[.62932,.438371,.224951,.97437,.898794,.777146],[.669131,.469472,.241922,.970296,.882948,.743145],[.707107,.5,.258819,.965926,.866025,.707107],[.743145,.529919,.275637,.961262,.848048,.669131],[.777146,.559193,.292372,.956305,.829038,.62932],[.809017,.587785,.309017,.951057,.809017,.587785],[.838671,.615661,.325568,.945519,.788011,.544639],[.866025,.642788,.34202,.939693,.766044,.5],[.891007,.669131,.358368,.93358,.743145,.45399],[.913545,.694658,.374607,.927184,.71934,.406737],[.93358,.71934,.390731,.920505,.694658,.358368],[.951057,.743145,.406737,.913545,.669131,.309017],[.965926,.766044,.422618,.906308,.642788,.258819],[.978148,.788011,.438371,.898794,.615661,.207912],[.987688,.809017,.45399,.891007,.587785,.156434],[.994522,.829038,.469472,.882948,.559193,.104528],[.99863,.848048,.48481,.87462,.529919,.052336],[1,.866025,.5,.866025,.5,0],[.99863,.882948,.515038,.857167,.469472,-.052336],[.994522,.898794,.529919,.848048,.438371,-.104528],[.987688,.913545,.544639,.838671,.406737,-.156434],[.978148,.927184,.559193,.829038,.374607,-.207912],[.965926,.939693,.573576,.819152,.34202,-.258819],[.951057,.951057,.587785,.809017,.309017,-.309017],[.93358,.961262,.601815,.798636,.275637,-.358368],[.913545,.970296,.615661,.788011,.241922,-.406737],[.891007,.978148,.62932,.777146,.207912,-.45399],[.866025,.984808,.642788,.766044,.173648,-.5],[.838671,.990268,.656059,.75471,.139173,-.544639],[.809017,.994522,.669131,.743145,.104528,-.587785],[.777146,.997564,.681998,.731354,.069756,-.62932],[.743145,.999391,.694658,.71934,.034899,-.669131],[.707107,1,.707107,.707107,0,-.707107],[.669131,.999391,.71934,.694658,-.034899,-.743145],[.62932,.997564,.731354,.681998,-.069756,-.777146],[.587785,.994522,.743145,.669131,-.104528,-.809017],[.544639,.990268,.75471,.656059,-.139173,-.838671],[.5,.984808,.766044,.642788,-.173648,-.866025],[.45399,.978148,.777146,.62932,-.207912,-.891007],[.406737,.970296,.788011,.615661,-.241922,-.913545],[.358368,.961262,.798636,.601815,-.275637,-.93358],[.309017,.951057,.809017,.587785,-.309017,-.951057],[.258819,.939693,.819152,.573576,-.34202,-.965926],[.207912,.927184,.829038,.559193,-.374607,-.978148],[.156434,.913545,.838671,.544639,-.406737,-.987688],[.104528,.898794,.848048,.529919,-.438371,-.994522],[.052336,.882948,.857167,.515038,-.469472,-.99863],[0,.866025,.866025,.5,-.5,-1],[-.052336,.848048,.87462,.48481,-.529919,-.99863],[-.104528,.829038,.882948,.469472,-.559193,-.994522],[-.156434,.809017,.891007,.45399,-.587785,-.987688],[-.207912,.788011,.898794,.438371,-.615661,-.978148],[-.258819,.766044,.906308,.422618,-.642788,-.965926],[-.309017,.743145,.913545,.406737,-.669131,-.951057],[-.358368,.71934,.920505,.390731,-.694658,-.93358],[-.406737,.694658,.927184,.374607,-.71934,-.913545],[-.45399,.669131,.93358,.358368,-.743145,-.891007],[-.5,.642788,.939693,.34202,-.766044,-.866025],[-.544639,.615661,.945519,.325568,-.788011,-.838671],[-.587785,.587785,.951057,.309017,-.809017,-.809017],[-.62932,.559193,.956305,.292372,-.829038,-.777146],[-.669131,.529919,.961262,.275637,-.848048,-.743145],[-.707107,.5,.965926,.258819,-.866025,-.707107],[-.743145,.469472,.970296,.241922,-.882948,-.669131],[-.777146,.438371,.97437,.224951,-.898794,-.62932],[-.809017,.406737,.978148,.207912,-.913545,-.587785],[-.838671,.374607,.981627,.190809,-.927184,-.544639],[-.866025,.34202,.984808,.173648,-.939693,-.5],[-.891007,.309017,.987688,.156434,-.951057,-.45399],[-.913545,.275637,.990268,.139173,-.961262,-.406737],[-.93358,.241922,.992546,.121869,-.970296,-.358368],[-.951057,.207912,.994522,.104528,-.978148,-.309017],[-.965926,.173648,.996195,.087156,-.984808,-.258819],[-.978148,.139173,.997564,.069756,-.990268,-.207912],[-.987688,.104528,.99863,.052336,-.994522,-.156434],[-.994522,.069756,.999391,.034899,-.997564,-.104528],[-.99863,.034899,.999848,.017452,-.999391,-.052336],[-1,0,1,0,-1,-0],[-.99863,-.034899,.999848,-.017452,-.999391,.052336],[-.994522,-.069756,.999391,-.034899,-.997564,.104528],[-.987688,-.104528,.99863,-.052336,-.994522,.156434],[-.978148,-.139173,.997564,-.069756,-.990268,.207912],[-.965926,-.173648,.996195,-.087156,-.984808,.258819],[-.951057,-.207912,.994522,-.104528,-.978148,.309017],[-.93358,-.241922,.992546,-.121869,-.970296,.358368],[-.913545,-.275637,.990268,-.139173,-.961262,.406737],[-.891007,-.309017,.987688,-.156434,-.951057,.45399],[-.866025,-.34202,.984808,-.173648,-.939693,.5],[-.838671,-.374607,.981627,-.190809,-.927184,.544639],[-.809017,-.406737,.978148,-.207912,-.913545,.587785],[-.777146,-.438371,.97437,-.224951,-.898794,.62932],[-.743145,-.469472,.970296,-.241922,-.882948,.669131],[-.707107,-.5,.965926,-.258819,-.866025,.707107],[-.669131,-.529919,.961262,-.275637,-.848048,.743145],[-.62932,-.559193,.956305,-.292372,-.829038,.777146],[-.587785,-.587785,.951057,-.309017,-.809017,.809017],[-.544639,-.615661,.945519,-.325568,-.788011,.838671],[-.5,-.642788,.939693,-.34202,-.766044,.866025],[-.45399,-.669131,.93358,-.358368,-.743145,.891007],[-.406737,-.694658,.927184,-.374607,-.71934,.913545],[-.358368,-.71934,.920505,-.390731,-.694658,.93358],[-.309017,-.743145,.913545,-.406737,-.669131,.951057],[-.258819,-.766044,.906308,-.422618,-.642788,.965926],[-.207912,-.788011,.898794,-.438371,-.615661,.978148],[-.156434,-.809017,.891007,-.45399,-.587785,.987688],[-.104528,-.829038,.882948,-.469472,-.559193,.994522],[-.052336,-.848048,.87462,-.48481,-.529919,.99863],[-0,-.866025,.866025,-.5,-.5,1],[.052336,-.882948,.857167,-.515038,-.469472,.99863],[.104528,-.898794,.848048,-.529919,-.438371,.994522],[.156434,-.913545,.838671,-.544639,-.406737,.987688],[.207912,-.927184,.829038,-.559193,-.374607,.978148],[.258819,-.939693,.819152,-.573576,-.34202,.965926],[.309017,-.951057,.809017,-.587785,-.309017,.951057],[.358368,-.961262,.798636,-.601815,-.275637,.93358],[.406737,-.970296,.788011,-.615661,-.241922,.913545],[.45399,-.978148,.777146,-.62932,-.207912,.891007],[.5,-.984808,.766044,-.642788,-.173648,.866025],[.544639,-.990268,.75471,-.656059,-.139173,.838671],[.587785,-.994522,.743145,-.669131,-.104528,.809017],[.62932,-.997564,.731354,-.681998,-.069756,.777146],[.669131,-.999391,.71934,-.694658,-.034899,.743145],[.707107,-1,.707107,-.707107,-0,.707107],[.743145,-.999391,.694658,-.71934,.034899,.669131],[.777146,-.997564,.681998,-.731354,.069756,.62932],[.809017,-.994522,.669131,-.743145,.104528,.587785],[.838671,-.990268,.656059,-.75471,.139173,.544639],[.866025,-.984808,.642788,-.766044,.173648,.5],[.891007,-.978148,.62932,-.777146,.207912,.45399],[.913545,-.970296,.615661,-.788011,.241922,.406737],[.93358,-.961262,.601815,-.798636,.275637,.358368],[.951057,-.951057,.587785,-.809017,.309017,.309017],[.965926,-.939693,.573576,-.819152,.34202,.258819],[.978148,-.927184,.559193,-.829038,.374607,.207912],[.987688,-.913545,.544639,-.838671,.406737,.156434],[.994522,-.898794,.529919,-.848048,.438371,.104528],[.99863,-.882948,.515038,-.857167,.469472,.052336],[1,-.866025,.5,-.866025,.5,0],[.99863,-.848048,.48481,-.87462,.529919,-.052336],[.994522,-.829038,.469472,-.882948,.559193,-.104528],[.987688,-.809017,.45399,-.891007,.587785,-.156434],[.978148,-.788011,.438371,-.898794,.615661,-.207912],[.965926,-.766044,.422618,-.906308,.642788,-.258819],[.951057,-.743145,.406737,-.913545,.669131,-.309017],[.93358,-.71934,.390731,-.920505,.694658,-.358368],[.913545,-.694658,.374607,-.927184,.71934,-.406737],[.891007,-.669131,.358368,-.93358,.743145,-.45399],[.866025,-.642788,.34202,-.939693,.766044,-.5],[.838671,-.615661,.325568,-.945519,.788011,-.544639],[.809017,-.587785,.309017,-.951057,.809017,-.587785],[.777146,-.559193,.292372,-.956305,.829038,-.62932],[.743145,-.529919,.275637,-.961262,.848048,-.669131],[.707107,-.5,.258819,-.965926,.866025,-.707107],[.669131,-.469472,.241922,-.970296,.882948,-.743145],[.62932,-.438371,.224951,-.97437,.898794,-.777146],[.587785,-.406737,.207912,-.978148,.913545,-.809017],[.544639,-.374607,.190809,-.981627,.927184,-.838671],[.5,-.34202,.173648,-.984808,.939693,-.866025],[.45399,-.309017,.156434,-.987688,.951057,-.891007],[.406737,-.275637,.139173,-.990268,.961262,-.913545],[.358368,-.241922,.121869,-.992546,.970296,-.93358],[.309017,-.207912,.104528,-.994522,.978148,-.951057],[.258819,-.173648,.087156,-.996195,.984808,-.965926],[.207912,-.139173,.069756,-.997564,.990268,-.978148],[.156434,-.104528,.052336,-.99863,.994522,-.987688],[.104528,-.069756,.034899,-.999391,.997564,-.994522],[.052336,-.034899,.017452,-.999848,.999391,-.99863],[0,-0,0,-1,1,-1],[-.052336,.034899,-.017452,-.999848,.999391,-.99863],[-.104528,.069756,-.034899,-.999391,.997564,-.994522],[-.156434,.104528,-.052336,-.99863,.994522,-.987688],[-.207912,.139173,-.069756,-.997564,.990268,-.978148],[-.258819,.173648,-.087156,-.996195,.984808,-.965926],[-.309017,.207912,-.104528,-.994522,.978148,-.951057],[-.358368,.241922,-.121869,-.992546,.970296,-.93358],[-.406737,.275637,-.139173,-.990268,.961262,-.913545],[-.45399,.309017,-.156434,-.987688,.951057,-.891007],[-.5,.34202,-.173648,-.984808,.939693,-.866025],[-.544639,.374607,-.190809,-.981627,.927184,-.838671],[-.587785,.406737,-.207912,-.978148,.913545,-.809017],[-.62932,.438371,-.224951,-.97437,.898794,-.777146],[-.669131,.469472,-.241922,-.970296,.882948,-.743145],[-.707107,.5,-.258819,-.965926,.866025,-.707107],[-.743145,.529919,-.275637,-.961262,.848048,-.669131],[-.777146,.559193,-.292372,-.956305,.829038,-.62932],[-.809017,.587785,-.309017,-.951057,.809017,-.587785],[-.838671,.615661,-.325568,-.945519,.788011,-.544639],[-.866025,.642788,-.34202,-.939693,.766044,-.5],[-.891007,.669131,-.358368,-.93358,.743145,-.45399],[-.913545,.694658,-.374607,-.927184,.71934,-.406737],[-.93358,.71934,-.390731,-.920505,.694658,-.358368],[-.951057,.743145,-.406737,-.913545,.669131,-.309017],[-.965926,.766044,-.422618,-.906308,.642788,-.258819],[-.978148,.788011,-.438371,-.898794,.615661,-.207912],[-.987688,.809017,-.45399,-.891007,.587785,-.156434],[-.994522,.829038,-.469472,-.882948,.559193,-.104528],[-.99863,.848048,-.48481,-.87462,.529919,-.052336],[-1,.866025,-.5,-.866025,.5,0],[-.99863,.882948,-.515038,-.857167,.469472,.052336],[-.994522,.898794,-.529919,-.848048,.438371,.104528],[-.987688,.913545,-.544639,-.838671,.406737,.156434],[-.978148,.927184,-.559193,-.829038,.374607,.207912],[-.965926,.939693,-.573576,-.819152,.34202,.258819],[-.951057,.951057,-.587785,-.809017,.309017,.309017],[-.93358,.961262,-.601815,-.798636,.275637,.358368],[-.913545,.970296,-.615661,-.788011,.241922,.406737],[-.891007,.978148,-.62932,-.777146,.207912,.45399],[-.866025,.984808,-.642788,-.766044,.173648,.5],[-.838671,.990268,-.656059,-.75471,.139173,.544639],[-.809017,.994522,-.669131,-.743145,.104528,.587785],[-.777146,.997564,-.681998,-.731354,.069756,.62932],[-.743145,.999391,-.694658,-.71934,.034899,.669131],[-.707107,1,-.707107,-.707107,0,.707107],[-.669131,.999391,-.71934,-.694658,-.034899,.743145],[-.62932,.997564,-.731354,-.681998,-.069756,.777146],[-.587785,.994522,-.743145,-.669131,-.104528,.809017],[-.544639,.990268,-.75471,-.656059,-.139173,.838671],[-.5,.984808,-.766044,-.642788,-.173648,.866025],[-.45399,.978148,-.777146,-.62932,-.207912,.891007],[-.406737,.970296,-.788011,-.615661,-.241922,.913545],[-.358368,.961262,-.798636,-.601815,-.275637,.93358],[-.309017,.951057,-.809017,-.587785,-.309017,.951057],[-.258819,.939693,-.819152,-.573576,-.34202,.965926],[-.207912,.927184,-.829038,-.559193,-.374607,.978148],[-.156434,.913545,-.838671,-.544639,-.406737,.987688],[-.104528,.898794,-.848048,-.529919,-.438371,.994522],[-.052336,.882948,-.857167,-.515038,-.469472,.99863],[-0,.866025,-.866025,-.5,-.5,1],[.052336,.848048,-.87462,-.48481,-.529919,.99863],[.104528,.829038,-.882948,-.469472,-.559193,.994522],[.156434,.809017,-.891007,-.45399,-.587785,.987688],[.207912,.788011,-.898794,-.438371,-.615661,.978148],[.258819,.766044,-.906308,-.422618,-.642788,.965926],[.309017,.743145,-.913545,-.406737,-.669131,.951057],[.358368,.71934,-.920505,-.390731,-.694658,.93358],[.406737,.694658,-.927184,-.374607,-.71934,.913545],[.45399,.669131,-.93358,-.358368,-.743145,.891007],[.5,.642788,-.939693,-.34202,-.766044,.866025],[.544639,.615661,-.945519,-.325568,-.788011,.838671],[.587785,.587785,-.951057,-.309017,-.809017,.809017],[.62932,.559193,-.956305,-.292372,-.829038,.777146],[.669131,.529919,-.961262,-.275637,-.848048,.743145],[.707107,.5,-.965926,-.258819,-.866025,.707107],[.743145,.469472,-.970296,-.241922,-.882948,.669131],[.777146,.438371,-.97437,-.224951,-.898794,.62932],[.809017,.406737,-.978148,-.207912,-.913545,.587785],[.838671,.374607,-.981627,-.190809,-.927184,.544639],[.866025,.34202,-.984808,-.173648,-.939693,.5],[.891007,.309017,-.987688,-.156434,-.951057,.45399],[.913545,.275637,-.990268,-.139173,-.961262,.406737],[.93358,.241922,-.992546,-.121869,-.970296,.358368],[.951057,.207912,-.994522,-.104528,-.978148,.309017],[.965926,.173648,-.996195,-.087156,-.984808,.258819],[.978148,.139173,-.997564,-.069756,-.990268,.207912],[.987688,.104528,-.99863,-.052336,-.994522,.156434],[.994522,.069756,-.999391,-.034899,-.997564,.104528],[.99863,.034899,-.999848,-.017452,-.999391,.052336],[1,0,-1,-0,-1,0],[.99863,-.034899,-.999848,.017452,-.999391,-.052336],[.994522,-.069756,-.999391,.034899,-.997564,-.104528],[.987688,-.104528,-.99863,.052336,-.994522,-.156434],[.978148,-.139173,-.997564,.069756,-.990268,-.207912],[.965926,-.173648,-.996195,.087156,-.984808,-.258819],[.951057,-.207912,-.994522,.104528,-.978148,-.309017],[.93358,-.241922,-.992546,.121869,-.970296,-.358368],[.913545,-.275637,-.990268,.139173,-.961262,-.406737],[.891007,-.309017,-.987688,.156434,-.951057,-.45399],[.866025,-.34202,-.984808,.173648,-.939693,-.5],[.838671,-.374607,-.981627,.190809,-.927184,-.544639],[.809017,-.406737,-.978148,.207912,-.913545,-.587785],[.777146,-.438371,-.97437,.224951,-.898794,-.62932],[.743145,-.469472,-.970296,.241922,-.882948,-.669131],[.707107,-.5,-.965926,.258819,-.866025,-.707107],[.669131,-.529919,-.961262,.275637,-.848048,-.743145],[.62932,-.559193,-.956305,.292372,-.829038,-.777146],[.587785,-.587785,-.951057,.309017,-.809017,-.809017],[.544639,-.615661,-.945519,.325568,-.788011,-.838671],[.5,-.642788,-.939693,.34202,-.766044,-.866025],[.45399,-.669131,-.93358,.358368,-.743145,-.891007],[.406737,-.694658,-.927184,.374607,-.71934,-.913545],[.358368,-.71934,-.920505,.390731,-.694658,-.93358],[.309017,-.743145,-.913545,.406737,-.669131,-.951057],[.258819,-.766044,-.906308,.422618,-.642788,-.965926],[.207912,-.788011,-.898794,.438371,-.615661,-.978148],[.156434,-.809017,-.891007,.45399,-.587785,-.987688],[.104528,-.829038,-.882948,.469472,-.559193,-.994522],[.052336,-.848048,-.87462,.48481,-.529919,-.99863],[0,-.866025,-.866025,.5,-.5,-1],[-.052336,-.882948,-.857167,.515038,-.469472,-.99863],[-.104528,-.898794,-.848048,.529919,-.438371,-.994522],[-.156434,-.913545,-.838671,.544639,-.406737,-.987688],[-.207912,-.927184,-.829038,.559193,-.374607,-.978148],[-.258819,-.939693,-.819152,.573576,-.34202,-.965926],[-.309017,-.951057,-.809017,.587785,-.309017,-.951057],[-.358368,-.961262,-.798636,.601815,-.275637,-.93358],[-.406737,-.970296,-.788011,.615661,-.241922,-.913545],[-.45399,-.978148,-.777146,.62932,-.207912,-.891007],[-.5,-.984808,-.766044,.642788,-.173648,-.866025],[-.544639,-.990268,-.75471,.656059,-.139173,-.838671],[-.587785,-.994522,-.743145,.669131,-.104528,-.809017],[-.62932,-.997564,-.731354,.681998,-.069756,-.777146],[-.669131,-.999391,-.71934,.694658,-.034899,-.743145],[-.707107,-1,-.707107,.707107,-0,-.707107],[-.743145,-.999391,-.694658,.71934,.034899,-.669131],[-.777146,-.997564,-.681998,.731354,.069756,-.62932],[-.809017,-.994522,-.669131,.743145,.104528,-.587785],[-.838671,-.990268,-.656059,.75471,.139173,-.544639],[-.866025,-.984808,-.642788,.766044,.173648,-.5],[-.891007,-.978148,-.62932,.777146,.207912,-.45399],[-.913545,-.970296,-.615661,.788011,.241922,-.406737],[-.93358,-.961262,-.601815,.798636,.275637,-.358368],[-.951057,-.951057,-.587785,.809017,.309017,-.309017],[-.965926,-.939693,-.573576,.819152,.34202,-.258819],[-.978148,-.927184,-.559193,.829038,.374607,-.207912],[-.987688,-.913545,-.544639,.838671,.406737,-.156434],[-.994522,-.898794,-.529919,.848048,.438371,-.104528],[-.99863,-.882948,-.515038,.857167,.469472,-.052336],[-1,-.866025,-.5,.866025,.5,-0],[-.99863,-.848048,-.48481,.87462,.529919,.052336],[-.994522,-.829038,-.469472,.882948,.559193,.104528],[-.987688,-.809017,-.45399,.891007,.587785,.156434],[-.978148,-.788011,-.438371,.898794,.615661,.207912],[-.965926,-.766044,-.422618,.906308,.642788,.258819],[-.951057,-.743145,-.406737,.913545,.669131,.309017],[-.93358,-.71934,-.390731,.920505,.694658,.358368],[-.913545,-.694658,-.374607,.927184,.71934,.406737],[-.891007,-.669131,-.358368,.93358,.743145,.45399],[-.866025,-.642788,-.34202,.939693,.766044,.5],[-.838671,-.615661,-.325568,.945519,.788011,.544639],[-.809017,-.587785,-.309017,.951057,.809017,.587785],[-.777146,-.559193,-.292372,.956305,.829038,.62932],[-.743145,-.529919,-.275637,.961262,.848048,.669131],[-.707107,-.5,-.258819,.965926,.866025,.707107],[-.669131,-.469472,-.241922,.970296,.882948,.743145],[-.62932,-.438371,-.224951,.97437,.898794,.777146],[-.587785,-.406737,-.207912,.978148,.913545,.809017],[-.544639,-.374607,-.190809,.981627,.927184,.838671],[-.5,-.34202,-.173648,.984808,.939693,.866025],[-.45399,-.309017,-.156434,.987688,.951057,.891007],[-.406737,-.275637,-.139173,.990268,.961262,.913545],[-.358368,-.241922,-.121869,.992546,.970296,.93358],[-.309017,-.207912,-.104528,.994522,.978148,.951057],[-.258819,-.173648,-.087156,.996195,.984808,.965926],[-.207912,-.139173,-.069756,.997564,.990268,.978148],[-.156434,-.104528,-.052336,.99863,.994522,.987688],[-.104528,-.069756,-.034899,.999391,.997564,.994522],[-.052336,-.034899,-.017452,.999848,.999391,.99863]],[[-1,-0,1,-0,0,-1,-0,0,-0],[-.999848,.017452,.999543,-.030224,264e-6,-.999086,.042733,-59e-5,4e-6],[-.999391,.034899,.998173,-.060411,.001055,-.996348,.085356,-.002357,34e-6],[-.99863,.052336,.995891,-.090524,.002372,-.991791,.127757,-.005297,113e-6],[-.997564,.069756,.992701,-.120527,.004214,-.985429,.169828,-.0094,268e-6],[-.996195,.087156,.988606,-.150384,.006578,-.977277,.21146,-.014654,523e-6],[-.994522,.104528,.983611,-.180057,.009462,-.967356,.252544,-.021043,903e-6],[-.992546,.121869,.977722,-.209511,.012862,-.955693,.292976,-.028547,.001431],[-.990268,.139173,.970946,-.238709,.016774,-.942316,.332649,-.037143,.002131],[-.987688,.156434,.963292,-.267617,.021193,-.927262,.371463,-.046806,.003026],[-.984808,.173648,.954769,-.296198,.026114,-.910569,.409317,-.057505,.00414],[-.981627,.190809,.945388,-.324419,.03153,-.892279,.446114,-.069209,.005492],[-.978148,.207912,.935159,-.352244,.037436,-.872441,.481759,-.08188,.007105],[-.97437,.224951,.924096,-.379641,.043823,-.851105,.516162,-.095481,.008999],[-.970296,.241922,.912211,-.406574,.050685,-.828326,.549233,-.109969,.011193],[-.965926,.258819,.899519,-.433013,.058013,-.804164,.580889,-.1253,.013707],[-.961262,.275637,.886036,-.458924,.065797,-.77868,.61105,-.141427,.016556],[-.956305,.292372,.871778,-.484275,.074029,-.75194,.639639,-.158301,.019758],[-.951057,.309017,.856763,-.509037,.082698,-.724012,.666583,-.175868,.023329],[-.945519,.325568,.841008,-.533178,.091794,-.694969,.691816,-.194075,.027281],[-.939693,.34202,.824533,-.55667,.101306,-.664885,.715274,-.212865,.03163],[-.93358,.358368,.807359,-.579484,.111222,-.633837,.736898,-.23218,.036385],[-.927184,.374607,.789505,-.601592,.121529,-.601904,.756637,-.25196,.041559],[-.920505,.390731,.770994,-.622967,.132217,-.569169,.774442,-.272143,.04716],[-.913545,.406737,.751848,-.643582,.143271,-.535715,.79027,-.292666,.053196],[-.906308,.422618,.732091,-.663414,.154678,-.501627,.804083,-.313464,.059674],[-.898794,.438371,.711746,-.682437,.166423,-.466993,.81585,-.334472,.066599],[-.891007,.45399,.690839,-.700629,.178494,-.431899,.825544,-.355623,.073974],[-.882948,.469472,.669395,-.717968,.190875,-.396436,.833145,-.376851,.081803],[-.87462,.48481,.647439,-.734431,.203551,-.360692,.838638,-.398086,.090085],[-.866025,.5,.625,-.75,.216506,-.32476,.842012,-.419263,.098821],[-.857167,.515038,.602104,-.764655,.229726,-.288728,.843265,-.440311,.108009],[-.848048,.529919,.578778,-.778378,.243192,-.252688,.842399,-.461164,.117644],[-.838671,.544639,.555052,-.791154,.256891,-.21673,.839422,-.481753,.127722],[-.829038,.559193,.530955,-.802965,.270803,-.180944,.834347,-.502011,.138237],[-.819152,.573576,.506515,-.813798,.284914,-.14542,.827194,-.521871,.149181],[-.809017,.587785,.481763,-.823639,.299204,-.110246,.817987,-.541266,.160545],[-.798636,.601815,.456728,-.832477,.313658,-.075508,.806757,-.560132,.172317],[-.788011,.615661,.431441,-.840301,.328257,-.041294,.793541,-.578405,.184487],[-.777146,.62932,.405934,-.847101,.342984,-.007686,.778379,-.596021,.19704],[-.766044,.642788,.380236,-.852869,.357821,.025233,.761319,-.612921,.209963],[-.75471,.656059,.35438,-.857597,.372749,.057383,.742412,-.629044,.223238],[-.743145,.669131,.328396,-.861281,.387751,.088686,.721714,-.644334,.23685],[-.731354,.681998,.302317,-.863916,.402807,.119068,.699288,-.658734,.250778],[-.71934,.694658,.276175,-.865498,.417901,.148454,.675199,-.67219,.265005],[-.707107,.707107,.25,-.866025,.433013,.176777,.649519,-.684653,.279508],[-.694658,.71934,.223825,-.865498,.448125,.203969,.622322,-.696073,.294267],[-.681998,.731354,.197683,-.863916,.463218,.229967,.593688,-.706405,.309259],[-.669131,.743145,.171604,-.861281,.478275,.254712,.5637,-.715605,.324459],[-.656059,.75471,.14562,-.857597,.493276,.278147,.532443,-.723633,.339844],[-.642788,.766044,.119764,-.852869,.508205,.300221,.500009,-.730451,.355387],[-.62932,.777146,.094066,-.847101,.523041,.320884,.46649,-.736025,.371063],[-.615661,.788011,.068559,-.840301,.537768,.340093,.431982,-.740324,.386845],[-.601815,.798636,.043272,-.832477,.552367,.357807,.396584,-.74332,.402704],[-.587785,.809017,.018237,-.823639,.566821,.373991,.360397,-.744989,.418613],[-.573576,.819152,-.006515,-.813798,.581112,.388612,.323524,-.745308,.434544],[-.559193,.829038,-.030955,-.802965,.595222,.401645,.286069,-.744262,.450467],[-.544639,.838671,-.055052,-.791154,.609135,.413066,.24814,-.741835,.466352],[-.529919,.848048,-.078778,-.778378,.622833,.422856,.209843,-.738017,.482171],[-.515038,.857167,-.102104,-.764655,.6363,.431004,.171288,-.732801,.497894],[-.5,.866025,-.125,-.75,.649519,.4375,.132583,-.726184,.51349],[-.48481,.87462,-.147439,-.734431,.662474,.44234,.093837,-.718167,.528929],[-.469472,.882948,-.169395,-.717968,.67515,.445524,.05516,-.708753,.544183],[-.45399,.891007,-.190839,-.700629,.687531,.447059,.016662,-.69795,.55922],[-.438371,.898794,-.211746,-.682437,.699602,.446953,-.02155,-.685769,.574011],[-.422618,.906308,-.232091,-.663414,.711348,.445222,-.059368,-.672226,.588528],[-.406737,.913545,-.251848,-.643582,.722755,.441884,-.096684,-.657339,.602741],[-.390731,.920505,-.270994,-.622967,.733809,.436964,-.133395,-.64113,.616621],[-.374607,.927184,-.289505,-.601592,.744496,.430488,-.169397,-.623624,.630141],[-.358368,.93358,-.307359,-.579484,.754804,.422491,-.204589,-.604851,.643273],[-.34202,.939693,-.324533,-.55667,.76472,.413008,-.238872,-.584843,.65599],[-.325568,.945519,-.341008,-.533178,.774231,.402081,-.27215,-.563635,.668267],[-.309017,.951057,-.356763,-.509037,.783327,.389754,-.304329,-.541266,.680078],[-.292372,.956305,-.371778,-.484275,.791997,.376077,-.335319,-.517778,.691399],[-.275637,.961262,-.386036,-.458924,.800228,.361102,-.365034,-.493216,.702207],[-.258819,.965926,-.399519,-.433013,.808013,.344885,-.393389,-.467627,.712478],[-.241922,.970296,-.412211,-.406574,.81534,.327486,-.420306,-.441061,.722191],[-.224951,.97437,-.424096,-.379641,.822202,.308969,-.445709,-.413572,.731327],[-.207912,.978148,-.435159,-.352244,.828589,.289399,-.469527,-.385215,.739866],[-.190809,.981627,-.445388,-.324419,.834495,.268846,-.491693,-.356047,.74779],[-.173648,.984808,-.454769,-.296198,.839912,.247382,-.512145,-.326129,.755082],[-.156434,.987688,-.463292,-.267617,.844832,.225081,-.530827,-.295521,.761728],[-.139173,.990268,-.470946,-.238709,.849251,.20202,-.547684,-.264287,.767712],[-.121869,.992546,-.477722,-.209511,.853163,.178279,-.562672,-.232494,.773023],[-.104528,.994522,-.483611,-.180057,.856563,.153937,-.575747,-.200207,.777648],[-.087156,.996195,-.488606,-.150384,.859447,.129078,-.586872,-.167494,.781579],[-.069756,.997564,-.492701,-.120527,.861811,.103786,-.596018,-.134426,.784806],[-.052336,.99863,-.495891,-.090524,.863653,.078146,-.603158,-.101071,.787324],[-.034899,.999391,-.498173,-.060411,.864971,.052243,-.608272,-.0675,.789126],[-.017452,.999848,-.499543,-.030224,.865762,.026165,-.611347,-.033786,.790208],[0,1,-.5,0,.866025,-0,-.612372,0,.790569],[.017452,.999848,-.499543,.030224,.865762,-.026165,-.611347,.033786,.790208],[.034899,.999391,-.498173,.060411,.864971,-.052243,-.608272,.0675,.789126],[.052336,.99863,-.495891,.090524,.863653,-.078146,-.603158,.101071,.787324],[.069756,.997564,-.492701,.120527,.861811,-.103786,-.596018,.134426,.784806],[.087156,.996195,-.488606,.150384,.859447,-.129078,-.586872,.167494,.781579],[.104528,.994522,-.483611,.180057,.856563,-.153937,-.575747,.200207,.777648],[.121869,.992546,-.477722,.209511,.853163,-.178279,-.562672,.232494,.773023],[.139173,.990268,-.470946,.238709,.849251,-.20202,-.547684,.264287,.767712],[.156434,.987688,-.463292,.267617,.844832,-.225081,-.530827,.295521,.761728],[.173648,.984808,-.454769,.296198,.839912,-.247382,-.512145,.326129,.755082],[.190809,.981627,-.445388,.324419,.834495,-.268846,-.491693,.356047,.74779],[.207912,.978148,-.435159,.352244,.828589,-.289399,-.469527,.385215,.739866],[.224951,.97437,-.424096,.379641,.822202,-.308969,-.445709,.413572,.731327],[.241922,.970296,-.412211,.406574,.81534,-.327486,-.420306,.441061,.722191],[.258819,.965926,-.399519,.433013,.808013,-.344885,-.393389,.467627,.712478],[.275637,.961262,-.386036,.458924,.800228,-.361102,-.365034,.493216,.702207],[.292372,.956305,-.371778,.484275,.791997,-.376077,-.335319,.517778,.691399],[.309017,.951057,-.356763,.509037,.783327,-.389754,-.304329,.541266,.680078],[.325568,.945519,-.341008,.533178,.774231,-.402081,-.27215,.563635,.668267],[.34202,.939693,-.324533,.55667,.76472,-.413008,-.238872,.584843,.65599],[.358368,.93358,-.307359,.579484,.754804,-.422491,-.204589,.604851,.643273],[.374607,.927184,-.289505,.601592,.744496,-.430488,-.169397,.623624,.630141],[.390731,.920505,-.270994,.622967,.733809,-.436964,-.133395,.64113,.616621],[.406737,.913545,-.251848,.643582,.722755,-.441884,-.096684,.657339,.602741],[.422618,.906308,-.232091,.663414,.711348,-.445222,-.059368,.672226,.588528],[.438371,.898794,-.211746,.682437,.699602,-.446953,-.02155,.685769,.574011],[.45399,.891007,-.190839,.700629,.687531,-.447059,.016662,.69795,.55922],[.469472,.882948,-.169395,.717968,.67515,-.445524,.05516,.708753,.544183],[.48481,.87462,-.147439,.734431,.662474,-.44234,.093837,.718167,.528929],[.5,.866025,-.125,.75,.649519,-.4375,.132583,.726184,.51349],[.515038,.857167,-.102104,.764655,.6363,-.431004,.171288,.732801,.497894],[.529919,.848048,-.078778,.778378,.622833,-.422856,.209843,.738017,.482171],[.544639,.838671,-.055052,.791154,.609135,-.413066,.24814,.741835,.466352],[.559193,.829038,-.030955,.802965,.595222,-.401645,.286069,.744262,.450467],[.573576,.819152,-.006515,.813798,.581112,-.388612,.323524,.745308,.434544],[.587785,.809017,.018237,.823639,.566821,-.373991,.360397,.744989,.418613],[.601815,.798636,.043272,.832477,.552367,-.357807,.396584,.74332,.402704],[.615661,.788011,.068559,.840301,.537768,-.340093,.431982,.740324,.386845],[.62932,.777146,.094066,.847101,.523041,-.320884,.46649,.736025,.371063],[.642788,.766044,.119764,.852869,.508205,-.300221,.500009,.730451,.355387],[.656059,.75471,.14562,.857597,.493276,-.278147,.532443,.723633,.339844],[.669131,.743145,.171604,.861281,.478275,-.254712,.5637,.715605,.324459],[.681998,.731354,.197683,.863916,.463218,-.229967,.593688,.706405,.309259],[.694658,.71934,.223825,.865498,.448125,-.203969,.622322,.696073,.294267],[.707107,.707107,.25,.866025,.433013,-.176777,.649519,.684653,.279508],[.71934,.694658,.276175,.865498,.417901,-.148454,.675199,.67219,.265005],[.731354,.681998,.302317,.863916,.402807,-.119068,.699288,.658734,.250778],[.743145,.669131,.328396,.861281,.387751,-.088686,.721714,.644334,.23685],[.75471,.656059,.35438,.857597,.372749,-.057383,.742412,.629044,.223238],[.766044,.642788,.380236,.852869,.357821,-.025233,.761319,.612921,.209963],[.777146,.62932,.405934,.847101,.342984,.007686,.778379,.596021,.19704],[.788011,.615661,.431441,.840301,.328257,.041294,.793541,.578405,.184487],[.798636,.601815,.456728,.832477,.313658,.075508,.806757,.560132,.172317],[.809017,.587785,.481763,.823639,.299204,.110246,.817987,.541266,.160545],[.819152,.573576,.506515,.813798,.284914,.14542,.827194,.521871,.149181],[.829038,.559193,.530955,.802965,.270803,.180944,.834347,.502011,.138237],[.838671,.544639,.555052,.791154,.256891,.21673,.839422,.481753,.127722],[.848048,.529919,.578778,.778378,.243192,.252688,.842399,.461164,.117644],[.857167,.515038,.602104,.764655,.229726,.288728,.843265,.440311,.108009],[.866025,.5,.625,.75,.216506,.32476,.842012,.419263,.098821],[.87462,.48481,.647439,.734431,.203551,.360692,.838638,.398086,.090085],[.882948,.469472,.669395,.717968,.190875,.396436,.833145,.376851,.081803],[.891007,.45399,.690839,.700629,.178494,.431899,.825544,.355623,.073974],[.898794,.438371,.711746,.682437,.166423,.466993,.81585,.334472,.066599],[.906308,.422618,.732091,.663414,.154678,.501627,.804083,.313464,.059674],[.913545,.406737,.751848,.643582,.143271,.535715,.79027,.292666,.053196],[.920505,.390731,.770994,.622967,.132217,.569169,.774442,.272143,.04716],[.927184,.374607,.789505,.601592,.121529,.601904,.756637,.25196,.041559],[.93358,.358368,.807359,.579484,.111222,.633837,.736898,.23218,.036385],[.939693,.34202,.824533,.55667,.101306,.664885,.715274,.212865,.03163],[.945519,.325568,.841008,.533178,.091794,.694969,.691816,.194075,.027281],[.951057,.309017,.856763,.509037,.082698,.724012,.666583,.175868,.023329],[.956305,.292372,.871778,.484275,.074029,.75194,.639639,.158301,.019758],[.961262,.275637,.886036,.458924,.065797,.77868,.61105,.141427,.016556],[.965926,.258819,.899519,.433013,.058013,.804164,.580889,.1253,.013707],[.970296,.241922,.912211,.406574,.050685,.828326,.549233,.109969,.011193],[.97437,.224951,.924096,.379641,.043823,.851105,.516162,.095481,.008999],[.978148,.207912,.935159,.352244,.037436,.872441,.481759,.08188,.007105],[.981627,.190809,.945388,.324419,.03153,.892279,.446114,.069209,.005492],[.984808,.173648,.954769,.296198,.026114,.910569,.409317,.057505,.00414],[.987688,.156434,.963292,.267617,.021193,.927262,.371463,.046806,.003026],[.990268,.139173,.970946,.238709,.016774,.942316,.332649,.037143,.002131],[.992546,.121869,.977722,.209511,.012862,.955693,.292976,.028547,.001431],[.994522,.104528,.983611,.180057,.009462,.967356,.252544,.021043,903e-6],[.996195,.087156,.988606,.150384,.006578,.977277,.21146,.014654,523e-6],[.997564,.069756,.992701,.120527,.004214,.985429,.169828,.0094,268e-6],[.99863,.052336,.995891,.090524,.002372,.991791,.127757,.005297,113e-6],[.999391,.034899,.998173,.060411,.001055,.996348,.085356,.002357,34e-6],[.999848,.017452,.999543,.030224,264e-6,.999086,.042733,59e-5,4e-6],[1,-0,1,-0,0,1,-0,0,-0]]],Vl=(Wl[0].length,Wl[1].length,Wl[0][0].length/2),jl=[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1.003236,1.002156,.999152,.990038],[1.03237,1.021194,.990433,.898572],[1.062694,1.040231,.979161,.799806],[1.093999,1.058954,.964976,.693603],[1.126003,1.077006,.947526,.57989],[1.158345,1.093982,.926474,.45869],[1.19059,1.109437,.901512,.330158],[1.222228,1.12289,.87237,.194621],[1.252684,1.133837,.838839,.052614],[1.281987,1.142358,.801199,0],[1.312073,1.150207,.760839,0],[1.343011,1.157424,.717799,0],[1.374649,1.163859,.671999,0],[1.406809,1.169354,.623371,0],[1.439286,1.173739,.571868,0],[1.471846,1.176837,.517465,0],[1.504226,1.178465,.460174,0],[1.536133,1.178438,.400043,0],[1.567253,1.176573,.337165,0],[1.597247,1.172695,.271688,0],[1.625766,1.166645,.203815,0],[1.652455,1.158285,.133806,0],[1.676966,1.147506,.061983,0],[1.699006,1.134261,0,0],[1.720224,1.119789,0,0],[1.741631,1.10481,0,0],[1.763183,1.08933,0,0],[1.784837,1.073356,0,0],[1.806548,1.056898,0,0],[1.828269,1.039968,0,0],[1.849952,1.02258,0,0],[1.871552,1.004752,0,0],[1.893018,.986504,0,0],[1.914305,.967857,0,0],[1.935366,.948837,0,0],[1.956154,.929471,0,0],[1.976625,.90979,0,0],[1.996736,.889823,0,0],[2.016448,.869607,0,0],[2.035721,.849175,0,0],[2.054522,.828565,0,0],[2.072818,.807816,0,0],[2.090581,.786964,0,0],[2.107785,.766051,0,0],[2.124411,.745115,0,0],[2.140439,.724196,0,0],[2.155856,.703332,0,0],[2.170653,.682561,0,0],[2.184823,.661921,0,0],[2.198364,.641445,0,0],[2.211275,.621169,0,0],[2.223562,.601125,0,0],[2.23523,.581341,0,0],[2.246289,.561847,0,0],[2.256751,.542667,0,0],[2.266631,.523826,0,0],[2.275943,.505344,0,0],[2.284707,.487239,0,0],[2.292939,.469528,0,0],[2.300661,.452225,0,0],[2.307892,.435342,0,0],[2.314654,.418888,0,0],[2.320969,.40287,0,0],[2.326858,.387294,0,0],[2.332343,.372164,0,0],[2.337445,.357481,0,0],[2.342186,.343246,0,0],[2.346585,.329458,0,0],[2.350664,.316113,0,0],[2.354442,.303208,0,0],[2.357937,.290738,0,0],[2.361168,.278698,0,0],[2.364152,.26708,0,0],[2.366906,.255878,0,0],[2.369446,.245082,0,0],[2.371786,.234685,0,0],[2.37394,.224677,0,0],[2.375923,.215048,0,0],[2.377745,.20579,0,0],[2.379421,.196891,0,0],[2.380959,.188342,0,0],[2.382372,.180132,0,0],[2.383667,.172251,0,0],[2.384856,.164689,0,0],[2.385945,.157435,0,0],[2.386943,.150479,0,0],[2.387857,.143811,0,0],[2.388694,.137421,0,0],[2.38946,.131299,0,0],[2.39016,.125435,0,0],[2.390801,.11982,0,0],[2.391386,.114445,0,0],[2.391921,.1093,0,0],[2.39241,.104376,0,0],[2.392857,.099666,0,0],[2.393265,.09516,0,0],[2.393637,.090851,0,0],[2.393977,.086731,0,0],[2.394288,.082791,0,0],[2.394571,.079025,0,0],[2.394829,.075426,0,0],[2.395064,.071986,0,0],[2.395279,.068699,0,0],[2.395475,.065558,0,0],[2.395653,.062558,0,0],[2.395816,.059693,0,0],[2.395964,.056955,0,0],[2.396099,.054341,0,0],[2.396222,.051845,0,0],[2.396334,.049462,0,0],[2.396436,.047186,0,0],[2.396529,.045013,0,0],[2.396613,.042939,0,0],[2.396691,.040959,0,0],[2.396761,.039069,0,0],[2.396825,.037266,0,0],[2.396883,.035544,0,0],[2.396936,.033901,0,0],[2.396984,.032334,0,0],[2.397028,.030838,0,0],[2.397068,.02941,0,0],[2.397104,.028048,0,0],[2.397137,.026749,0,0],[2.397167,.025509,0,0],[2.397194,.024326,0,0],[2.397219,.023198,0,0],[2.397242,.022122,0,0],[2.397262,.021095,0,0],[2.397281,.020116,0,0],[2.397298,.019181,0,0],[2.397314,.01829,0,0],[2.397328,.017441,0,0],[2.397341,.01663,0,0],[2.397352,.015857,0,0],[2.397363,.015119,0,0],[2.397372,.014416,0,0],[2.397381,.013745,0,0],[2.397389,.013106,0,0],[2.397396,.012496,0,0],[2.397403,.011914,0,0],[2.397409,.01136,0,0],[2.397414,.010831,0,0],[2.397419,.010326,0,0],[2.397424,.009845,0,0],[2.397428,.009387,0,0],[2.397432,.008949,0,0],[2.397435,.008532,0,0],[2.397438,.008135,0,0],[2.397441,.007755,0,0],[2.397443,.007394,0,0],[2.397446,.007049,0,0],[2.397448,.006721,0,0],[2.39745,.006407,0,0],[2.397451,.006108,0,0],[2.397453,.005824,0,0],[2.397454,.005552,0,0],[2.397456,.005293,0,0],[2.397457,.005046,0,0],[2.397458,.004811,0,0],[2.397459,.004586,0,0],[2.39746,.004372,0,0],[2.397461,.004168,0,0],[2.397461,.003974,0,0],[2.397462,.003788,0,0],[2.397463,.003611,0,0],[2.397463,.003443,0,0],[2.397464,.003282,0,0],[2.397464,.003129,0,0],[2.397465,.002983,0,0],[2.397465,.002844,0,0],[2.397465,.002711,0,0],[2.397466,.002584,0,0],[2.397466,.002464,0,0],[2.397466,.002349,0,0],[2.397466,.002239,0,0],[2.397467,.002135,0,0],[2.397467,.002035,0,0],[2.397467,.00194,0,0],[2.397467,.001849,0,0],[2.397467,.001763,0,0],[2.397467,.001681,0,0],[2.397468,.001602,0,0],[2.397468,.001527,0,0],[2.397468,.001456,0,0],[2.397468,.001388,0,0],[2.397468,.001323,0,0],[2.397468,.001261,0,0],[2.397468,.001202,0,0],[2.397468,.001146,0,0],[2.397468,.001093,0,0],[2.397468,.001042,0,0],[2.397468,993e-6,0,0],[2.397468,947e-6,0,0],[2.397468,902e-6,0,0],[2.397468,86e-5,0,0],[2.397468,82e-5,0,0],[2.397469,782e-6,0,0],[2.397469,745e-6,0,0],[2.397469,71e-5,0,0],[2.397469,677e-6,0,0],[2.397469,646e-6,0,0],[2.397469,616e-6,0,0],[2.397469,587e-6,0,0],[2.397469,559e-6,0,0],[2.397469,533e-6,0,0],[2.397469,508e-6,0,0],[2.397469,485e-6,0,0],[2.397469,462e-6,0,0],[2.397469,44e-5,0,0],[2.397469,42e-5,0,0],[2.397469,4e-4,0,0],[2.397469,381e-6,0,0],[2.397469,364e-6,0,0],[2.397469,347e-6,0,0],[2.397469,33e-5,0,0],[2.397469,315e-6,0,0],[2.397469,3e-4,0,0],[2.397469,286e-6,0,0],[2.397469,273e-6,0,0],[2.397469,26e-5,0,0],[2.397469,248e-6,0,0],[2.397469,236e-6,0,0],[2.397469,225e-6,0,0],[2.397469,215e-6,0,0],[2.397469,205e-6,0,0],[2.397469,195e-6,0,0],[2.397469,186e-6,0,0],[2.397469,177e-6,0,0],[2.397469,169e-6,0,0],[2.397469,161e-6,0,0],[2.397469,154e-6,0,0],[2.397469,147e-6,0,0],[2.397469,14e-5,0,0],[2.397469,133e-6,0,0],[2.397469,127e-6,0,0],[2.397469,121e-6,0,0],[2.397469,115e-6,0,0],[2.397469,11e-5,0,0],[2.397469,105e-6,0,0],[2.397469,1e-4,0,0],[2.397469,95e-6,0,0],[2.397469,91e-6,0,0],[2.397469,87e-6,0,0],[2.397469,83e-6,0,0],[2.397469,79e-6,0,0],[2.397469,75e-6,0,0],[2.397469,71e-6,0,0],[2.397469,68e-6,0,0],[2.397469,65e-6,0,0],[2.397469,62e-6,0,0],[2.397469,59e-6,0,0],[2.397469,56e-6,0,0],[2.397469,54e-6,0,0],[2.397469,51e-6,0,0],[2.397469,49e-6,0,0],[2.397469,46e-6,0,0],[2.397469,44e-6,0,0],[2.397469,42e-6,0,0],[2.397469,4e-5,0,0],[2.397469,38e-6,0,0],[2.397469,37e-6,0,0],[2.397469,35e-6,0,0],[2.397469,33e-6,0,0],[2.397469,32e-6,0,0],[2.397469,3e-5,0,0],[2.397469,29e-6,0,0],[2.397469,27e-6,0,0],[2.397469,26e-6,0,0],[2.397469,25e-6,0,0],[2.397469,24e-6,0,0],[2.397469,23e-6,0,0],[2.397469,22e-6,0,0],[2.397469,21e-6,0,0],[2.397469,2e-5,0,0],[2.397469,19e-6,0,0],[2.397469,18e-6,0,0],[2.397469,17e-6,0,0],[2.397469,16e-6,0,0],[2.397469,15e-6,0,0],[2.397469,15e-6,0,0],[2.397469,14e-6,0,0],[2.397469,13e-6,0,0],[2.397469,13e-6,0,0],[2.397469,12e-6,0,0],[2.397469,12e-6,0,0],[2.397469,11e-6,0,0],[2.397469,11e-6,0,0],[2.397469,1e-5,0,0],[2.397469,1e-5,0,0],[2.397469,9e-6,0,0],[2.397469,9e-6,0,0],[2.397469,8e-6,0,0],[2.397469,8e-6,0,0],[2.397469,8e-6,0,0],[2.397469,7e-6,0,0],[2.397469,7e-6,0,0],[2.397469,7e-6,0,0],[2.397469,6e-6,0,0],[2.397469,6e-6,0,0],[2.397469,6e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,1e-6,0,0],[2.397469,1e-6,0,0],[2.397469,1e-6,0,0]],Ql=1,Xl=1,Yl=1,ql=[0,0,0],Zl=[0,0,-1],Jl=[0,1,0],Kl=343,$l=["logarithmic","linear","none"],tc="logarithmic",ec="ambisonic",nc=1,ic=1e3,rc=0,ac=1,sc=0,oc=0,lc=1,cc=0,hc=2,uc=6400,dc={left:0,right:0,front:0,back:0,down:0,up:0},pc=1,fc={width:0,height:0,depth:0},mc=1,gc=1,Ac=1,vc=1.5,_c=3.8,xc=.01,wc=3,yc=[31.25,62.5,125,250,500,1e3,2e3,4e3,8e3],Mc=yc.length,bc=new Float32Array(Mc),Sc={transparent:[1,1,1,1,1,1,1,1,1],"acoustic-ceiling-tiles":[.672,.675,.7,.66,.72,.92,.88,.75,1],"brick-bare":[.03,.03,.03,.03,.03,.04,.05,.07,.14],"brick-painted":[.006,.007,.01,.01,.02,.02,.02,.03,.06],"concrete-block-coarse":[.36,.36,.36,.44,.31,.29,.39,.25,.5],"concrete-block-painted":[.092,.09,.1,.05,.06,.07,.09,.08,.16],"curtain-heavy":[.073,.106,.14,.35,.55,.72,.7,.65,1],"fiber-glass-insulation":[.193,.22,.22,.82,.99,.99,.99,.99,1],"glass-thin":[.18,.169,.18,.06,.04,.03,.02,.02,.04],"glass-thick":[.35,.35,.35,.25,.18,.12,.07,.04,.08],grass:[.05,.05,.15,.25,.4,.55,.6,.6,.6],"linoleum-on-concrete":[.02,.02,.02,.03,.03,.03,.03,.02,.04],marble:[.01,.01,.01,.01,.01,.01,.02,.02,.04],metal:[.03,.035,.04,.04,.05,.05,.05,.07,.09],"parquet-on-concrete":[.028,.03,.04,.04,.07,.06,.06,.07,.14],"plaster-rough":[.017,.018,.02,.03,.04,.05,.04,.03,.06],"plaster-smooth":[.011,.012,.013,.015,.02,.03,.04,.05,.1],"plywood-panel":[.4,.34,.28,.22,.17,.09,.1,.11,.22],"polished-concrete-or-tile":[.008,.008,.01,.01,.015,.02,.02,.02,.04],"sheet-rock":[.29,.279,.29,.1,.05,.04,.07,.09,.18],"water-or-ice-surface":[.006,.006,.008,.008,.013,.015,.02,.025,.05],"wood-ceiling":[.15,.147,.15,.11,.1,.07,.06,.07,.14],"wood-panel":[.28,.28,.28,.22,.17,.09,.1,.11,.22],uniform:[.5,.5,.5,.5,.5,.5,.5,.5,.5]},Ec={left:"transparent",right:"transparent",front:"transparent",back:"transparent",down:"transparent",up:"transparent"},Tc=3,Pc=4,Dc=1e-4,Cc=[6e-4,6e-4,7e-4,8e-4,.001,.0015,.0026,.006,.0207],Lc=1.38,Rc=6.28318530717959,Fc=55.2620422318571,Bc=6.90775527898214,Nc=.346573590279973,Ic=57.29577951308232,Oc=1e-8,Uc=function(){window.console.log.apply(window.console,["%c[ResonanceAudio]%c "+Array.prototype.slice.call(arguments).join(" ")+" %c(@"+performance.now().toFixed(2)+"ms)","background: #BBDEFB; color: #FF5722; font-weight: 700","font-weight: 400","color: #AAA"])},zc=function(t){let e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);return e>Oc&&(e=1/e,t[0]*=e,t[1]*=e,t[2]*=e),t},kc=function(t,e,n,i,r,a,s){s[0]=e*a-n*r,s[1]=n*i-t*a,s[2]=t*r-e*i};
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Gc{constructor(t,e){null==e&&(e={}),null==e.ambisonicOrder&&(e.ambisonicOrder=lc),null==e.azimuth&&(e.azimuth=sc),null==e.elevation&&(e.elevation=oc),null==e.sourceWidth&&(e.sourceWidth=cc),this._context=t,this.input=t.createGain(),this._channelGain=[],this._merger=void 0,this.output=t.createGain(),this.setAmbisonicOrder(e.ambisonicOrder),this._azimuth=e.azimuth,this._elevation=e.elevation,this.setSourceWidth(e.sourceWidth)}setAmbisonicOrder(t){this._ambisonicOrder=Gc.validateAmbisonicOrder(t),this.input.disconnect();for(let t=0;t<this._channelGain.length;t++)this._channelGain[t].disconnect();null!=this._merger&&this._merger.disconnect(),delete this._channelGain,delete this._merger;let e=(this._ambisonicOrder+1)*(this._ambisonicOrder+1);this._merger=this._context.createChannelMerger(e),this._channelGain=new Array(e);for(let t=0;t<e;t++)this._channelGain[t]=this._context.createGain(),this.input.connect(this._channelGain[t]),this._channelGain[t].connect(this._merger,0,t);this._merger.connect(this.output)}dispose(){this._merger.disconnect(this.output);let t=(this._ambisonicOrder+1)*(this._ambisonicOrder+1);for(let e=0;e<t;++e)this._channelGain[e].disconnect(this._merger,0,e),this.input.disconnect(this._channelGain[e])}setDirection(t,e){(null==t||isNaN(t))&&(t=sc),(null==e||isNaN(e))&&(e=oc),this._azimuth=t,this._elevation=e,(t=Math.round(t%360))<0&&(t+=360),e=Math.round(Math.min(90,Math.max(-90,e)))+90,this._channelGain[0].gain.value=jl[this._spreadIndex][0];for(let n=1;n<=this._ambisonicOrder;n++){let i=jl[this._spreadIndex][n];for(let r=-n;r<=n;r++){let a=n*n+n+r,s=n*(n+1)/2+Math.abs(r)-1,o=Wl[1][e][s];if(0!=r){let e=Vl+r-1;r<0&&(e=Vl+r),o*=Wl[0][t][e]}this._channelGain[a].gain.value=o*i}}}setSourceWidth(t){this._spreadIndex=Math.min(359,Math.max(0,Math.round(t))),this.setDirection(this._azimuth,this._elevation)}}Gc.validateAmbisonicOrder=function(t){return isNaN(t)||null==t?(Uc("Error: Invalid ambisonic order",options.ambisonicOrder,"\nUsing ambisonicOrder=1 instead."),t=1):t<1?(Uc("Error: Unable to render ambisonic order",options.ambisonicOrder,"(Min order is 1)","\nUsing min order instead."),t=1):t>Vl&&(Uc("Error: Unable to render ambisonic order",options.ambisonicOrder,"(Max order is",Vl,")\nUsing max order instead."),options.ambisonicOrder=Vl),t};
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Hc{constructor(t,e){null==e&&(e={}),null==e.ambisonicOrder&&(e.ambisonicOrder=lc),null==e.position&&(e.position=ql.slice()),null==e.forward&&(e.forward=Zl.slice()),null==e.up&&(e.up=Jl.slice()),null==e.renderingMode&&(e.renderingMode=ec),this.position=new Float32Array(3),this._tempMatrix3=new Float32Array(9),this._ambisonicOrder=Gc.validateAmbisonicOrder(e.ambisonicOrder),this._context=t,1==this._ambisonicOrder?this._renderer=function(t,e){return new Bl(t,e)}(t,{renderingMode:e.renderingMode}):this._ambisonicOrder>1&&(this._renderer=function(t,e){return new kl(t,e)}(t,{ambisonicOrder:this._ambisonicOrder,renderingMode:e.renderingMode})),this.input=t.createGain(),this.output=t.createGain(),this.ambisonicOutput=t.createGain(),this._renderer.initialize().then(()=>{this.input.connect(this._renderer.input),this._ambisonicOrder>1?this._renderer._hoaRotator.output.connect(this.ambisonicOutput):this._renderer._foaRotator.output.connect(this.ambisonicOutput),this._renderer.output.connect(this.output)}),this.setOrientation(e.forward[0],e.forward[1],e.forward[2],e.up[0],e.up[1],e.up[2])}getRenderingMode(){return this._renderer.getRenderingMode()}setRenderingMode(t){this._renderer.setRenderingMode(t)}dispose(){this.input.disconnect(this._renderer.input),this._ambisonicOrder>1?this._renderer._hoaRotator.output.disconnect(this.ambisonicOutput):this._renderer._foaRotator.output.disconnect(this.ambisonicOutput),this._renderer.output.disconnect(this.output),this._renderer.dispose()}setOrientation(t,e,n,i,r,a){kc(t,e,n,i,r,a,this._tempMatrix3),this._tempMatrix3[3]=i,this._tempMatrix3[4]=r,this._tempMatrix3[5]=a,this._tempMatrix3[6]=-t,this._tempMatrix3[7]=-e,this._tempMatrix3[8]=-n,this._renderer.setRotationMatrix3(this._tempMatrix3)}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Wc{constructor(t,e){null==e&&(e={}),null==e.alpha&&(e.alpha=rc),null==e.sharpness&&(e.sharpness=ac),this._context=t,this._lowpass=t.createBiquadFilter(),this._lowpass.type="lowpass",this._lowpass.Q.value=0,this._lowpass.frequency.value=.5*t.sampleRate,this._cosTheta=0,this.setPattern(e.alpha,e.sharpness),this.input=this._lowpass,this.output=this._lowpass}computeAngle(t,e){let n=zc(t),i=zc(e),r=1;if(this._alpha>Oc){let t=n[0]*i[0]+n[1]*i[1]+n[2]*i[2];r=1-this._alpha+this._alpha*t,r=Math.pow(Math.abs(r),this._sharpness)}this._lowpass.frequency.value=.5*this._context.sampleRate*r}setPattern(t,e){this._alpha=Math.min(1,Math.max(0,t)),this._sharpness=Math.max(1,e),this.computeAngle([this._cosTheta*this._cosTheta,0,0],[1,0,0])}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Vc{constructor(t,e){null==e&&(e={}),null==e.minDistance&&(e.minDistance=nc),null==e.maxDistance&&(e.maxDistance=ic),null==e.rolloff&&(e.rolloff=tc),this.minDistance=e.minDistance,this.maxDistance=e.maxDistance,this.setRolloff(e.rolloff),this._gainNode=t.createGain(),this.setDistance(e.maxDistance),this.input=this._gainNode,this.output=this._gainNode}setDistance(t){let e=1;if("logarithmic"==this._rolloff){if(t>this.maxDistance)e=0;else if(t>this.minDistance){let n=this.maxDistance-this.minDistance;if(n>Oc){let i=1/(n+1);e=(1/(t-this.minDistance+1)-i)/(1-i)}}}else if("linear"==this._rolloff)if(t>this.maxDistance)e=0;else if(t>this.minDistance){let n=this.maxDistance-this.minDistance;n>Oc&&(e=(this.maxDistance-t)/n)}this._gainNode.gain.value=e}setRolloff(t){let e=~$l.indexOf(t);null!=t&&e?t=t.toString().toLowerCase():(e||Uc('Invalid rolloff model ("'+t+'"). Using default: "'+tc+'".'),t=tc),this._rolloff=t}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class jc{constructor(t,e){null==e&&(e={}),null==e.position&&(e.position=ql.slice()),null==e.forward&&(e.forward=Zl.slice()),null==e.up&&(e.up=Jl.slice()),null==e.minDistance&&(e.minDistance=nc),null==e.maxDistance&&(e.maxDistance=ic),null==e.rolloff&&(e.rolloff=tc),null==e.gain&&(e.gain=Ql),null==e.alpha&&(e.alpha=rc),null==e.sharpness&&(e.sharpness=ac),null==e.sourceWidth&&(e.sourceWidth=cc),this._scene=t,this._position=e.position,this._forward=e.forward,this._up=e.up,this._dx=new Float32Array(3),this._right=[],kc(this._forward[0],this._forward[1],this._forward[2],this._up[0],this._up[1],this._up[2],this._right);let n=t._context;this.input=n.createGain(),this._directivity=new Wc(n,{alpha:e.alpha,sharpness:e.sharpness}),this._toEarly=n.createGain(),this._toLate=n.createGain(),this._attenuation=new Vc(n,{minDistance:e.minDistance,maxDistance:e.maxDistance,rolloff:e.rolloff}),this._encoder=new Gc(n,{ambisonicOrder:t._ambisonicOrder,sourceWidth:e.sourceWidth}),this.input.connect(this._toLate),this._toLate.connect(t._room.late.input),this.input.connect(this._attenuation.input),this._attenuation.output.connect(this._toEarly),this._toEarly.connect(t._room.early.input),this._attenuation.output.connect(this._directivity.input),this._directivity.output.connect(this._encoder.input),this._encoder.output.connect(t._listener.input),this.setPosition(e.position[0],e.position[1],e.position[2]),this.input.gain.value=e.gain}dispose(){this._encoder.output.disconnect(this._scene._listener.input),this._directivity.output.disconnect(this._encoder.input),this._attenuation.output.disconnect(this._directivity.input),this._toEarly.disconnect(this._scene._room.early.input),this._attenuation.output.disconnect(this._toEarly),this.input.disconnect(this._attenuation.input),this._toLate.disconnect(this._scene._room.late.input),this.input.disconnect(this._toLate),this._encoder.dispose()}setPosition(t,e,n){this._position[0]=t,this._position[1]=e,this._position[2]=n;let i=function(t){let e=1;return t>Oc&&(e=1-t/Yl,e=Math.max(0,Math.min(1,e))),e}(this._scene._room.getDistanceOutsideRoom(this._position[0],this._position[1],this._position[2]));this._toLate.gain.value=i,this._toEarly.gain.value=i,this._update()}_update(){for(let t=0;t<3;t++)this._dx[t]=this._position[t]-this._scene._listener.position[t];let t=Math.sqrt(this._dx[0]*this._dx[0]+this._dx[1]*this._dx[1]+this._dx[2]*this._dx[2]);t>0&&(this._dx[0]/=t,this._dx[1]/=t,this._dx[2]/=t);let e=Math.atan2(-this._dx[0],this._dx[2])*Ic,n=Math.atan2(this._dx[1],Math.sqrt(this._dx[0]*this._dx[0]+this._dx[2]*this._dx[2]))*Ic;this._attenuation.setDistance(t),this._directivity.computeAngle(this._forward,this._dx),this._encoder.setDirection(e,n)}setRolloff(t){this._attenuation.setRolloff(t)}setMinDistance(t){this._attenuation.minDistance=t}setMaxDistance(t){this._attenuation.maxDistance=t}setGain(t){this.input.gain.value=t}setOrientation(t,e,n,i,r,a){this._forward[0]=t,this._forward[1]=e,this._forward[2]=n,this._up[0]=i,this._up[1]=r,this._up[2]=a,kc(t,e,n,i,r,a,this._right)}setSourceWidth(t){this._encoder.setSourceWidth(t),this.setPosition(this._position[0],this._position[1],this._position[2])}setDirectivityPattern(t,e){this._directivity.setPattern(t,e),this.setPosition(this._position[0],this._position[1],this._position[2])}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Qc{constructor(t,e){null==e&&(e={}),null==e.durations&&(e.durations=bc.slice()),null==e.predelay&&(e.predelay=vc),null==e.gain&&(e.gain=xc),null==e.bandwidth&&(e.bandwidth=gc),null==e.tailonset&&(e.tailonset=_c);let n=e.predelay/1e3;this._bandwidthCoeff=e.bandwidth*Nc,this._tailonsetSamples=e.tailonset/1e3,this._context=t,this.input=t.createGain(),this._predelay=t.createDelay(n),this._convolver=t.createConvolver(),this.output=t.createGain(),this.output.gain.value=e.gain,this._convolver.normalize=!1,this.input.connect(this._predelay),this._predelay.connect(this._convolver),this._convolver.connect(this.output),this.setDurations(e.durations)}dispose(){this.input.disconnect(this._predelay),this._predelay.disconnect(this._convolver),this._convolver.disconnect(this.output)}setDurations(t){if(t.length!==Mc)return void Uc("Warning: invalid number of RT60 values provided to reverb.");let e=new Float32Array(Mc),n=this._context.sampleRate;for(let i=0;i<t.length;i++)t[i]=Math.max(0,Math.min(wc,t[i])),e[i]=Math.round(t[i]*n*Ac);let i=0;for(let t=0;t<e.length;t++)e[t]>i&&(i=e[t]);i<1&&(i=1);let r=this._context.createBuffer(1,i,n),a=r.getChannelData(0),s=new Float32Array(i);for(let t=0;t<i;t++)s[t]=2*Math.random()-1;for(let t=0;t<Mc;t++){let i=-Bc/e[t],r=Rc*yc[t]/n,o=Math.sin(r),l=o*Math.sinh(this._bandwidthCoeff*r/o),c=1/(1+l),h=l*c,u=-2*Math.cos(r)*c,d=(1-l)*c,p=0,f=0;for(let n=0;n<e[t];n++){let t=s[n]*Math.exp(i*n)-u*p-d*f;a[n]+=h*(t-f),f=p,p=t}}let o=Math.round(this._tailonsetSamples);for(let t=0;t<Math.min(a.length,o);t++){let e=.5*(1-Math.cos(Rc*t/(2*o-1)));a[t]*=e}this._convolver.buffer=r}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class Xc{constructor(t,e){null==e&&(e={}),null==e.speedOfSound&&(e.speedOfSound=Kl),null==e.listenerPosition&&(e.listenerPosition=ql.slice()),null==e.coefficients&&(e.coefficients={},Object.assign(e.coefficients,dc)),this.speedOfSound=e.speedOfSound,this.input=t.createGain(),this.output=t.createGain(),this._lowpass=t.createBiquadFilter(),this._delays={},this._gains={},this._inverters={},this._merger=t.createChannelMerger(4);for(let e in dc)dc.hasOwnProperty(e)&&(this._delays[e]=t.createDelay(hc),this._gains[e]=t.createGain());this._inverters.right=t.createGain(),this._inverters.down=t.createGain(),this._inverters.back=t.createGain(),this._lowpass.type="lowpass",this._lowpass.frequency.value=uc,this._lowpass.Q.value=0;for(let t in dc)dc.hasOwnProperty(t)&&(this._delays[t].delayTime.value=0,this._gains[t].gain.value=0);this._inverters.right.gain.value=-1,this._inverters.down.gain.value=-1,this._inverters.back.gain.value=-1,this.input.connect(this._lowpass);for(let t in dc)dc.hasOwnProperty(t)&&(this._lowpass.connect(this._delays[t]),this._delays[t].connect(this._gains[t]),this._gains[t].connect(this._merger,0,0));this._gains.left.connect(this._merger,0,1),this._gains.right.connect(this._inverters.right),this._inverters.right.connect(this._merger,0,1),this._gains.up.connect(this._merger,0,2),this._gains.down.connect(this._inverters.down),this._inverters.down.connect(this._merger,0,2),this._gains.front.connect(this._merger,0,3),this._gains.back.connect(this._inverters.back),this._inverters.back.connect(this._merger,0,3),this._merger.connect(this.output),this._listenerPosition=e.listenerPosition,this.setRoomProperties(e.dimensions,e.coefficients)}dipose(){this.input.disconnect(this._lowpass);for(let t in dc)dc.hasOwnProperty(t)&&(this._lowpass.disconnect(this._delays[t]),this._delays[t].disconnect(this._gains[t]),this._gains[t].disconnect(this._merger,0,0));this._gains.left.disconnect(this._merger,0,1),this._gains.right.disconnect(this._inverters.right),this._inverters.right.disconnect(this._merger,0,1),this._gains.up.disconnect(this._merger,0,2),this._gains.down.disconnect(this._inverters.down),this._inverters.down.disconnect(this._merger,0,2),this._gains.front.disconnect(this._merger,0,3),this._gains.back.disconnect(this._inverters.back),this._inverters.back.disconnect(this._merger,0,3),this._merger.disconnect(this.output)}setListenerPosition(t,e,n){this._listenerPosition=[t,e,n];let i={left:mc*Math.max(0,this._halfDimensions.width+t)+pc,right:mc*Math.max(0,this._halfDimensions.width-t)+pc,front:mc*Math.max(0,this._halfDimensions.depth+n)+pc,back:mc*Math.max(0,this._halfDimensions.depth-n)+pc,down:mc*Math.max(0,this._halfDimensions.height+e)+pc,up:mc*Math.max(0,this._halfDimensions.height-e)+pc};for(let t in dc)if(dc.hasOwnProperty(t)){let e=i[t]/this.speedOfSound;this._delays[t].delayTime.value=e;let n=this._coefficients[t]/i[t];this._gains[t].gain.value=n}}setRoomProperties(t,e){null==t&&(t={},Object.assign(t,fc)),null==e&&(e={},Object.assign(e,dc)),this._coefficients=e,this._halfDimensions={},this._halfDimensions.width=.5*t.width,this._halfDimensions.height=.5*t.height,this._halfDimensions.depth=.5*t.depth,this.setListenerPosition(this._listenerPosition[0],this._listenerPosition[1],this._listenerPosition[2])}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function mt(t){let e={};for(let t in Ec)Ec.hasOwnProperty(t)&&(e[t]=Sc[Ec[t]]);null==t&&(t={},Object.assign(t,Ec));for(let n in Ec)Ec.hasOwnProperty(n)&&t.hasOwnProperty(n)?t[n]in Sc?e[n]=Sc[t[n]]:Uc('Material "'+t[n]+'" on wall "'+n+'" not found. Using "'+Ec[n]+'".'):Uc('Wall "'+n+'" is not defined. Default used.');return e}function gt(t){null==t&&(t={});for(let e in fc)t.hasOwnProperty(e)||(t[e]=fc[e]);return t}function At(t,e,n){let i=new Float32Array(Mc);t=gt(t),e=function(t){null==t&&(t={});for(let e in Ec)t.hasOwnProperty(e)||(t[e]=Sc[Ec[e]]);return t}(e),null==n&&(n=Kl);let r=Fc/n,a=t.width*t.height*t.depth;if(a<Dc)return i;let s=t.width*t.height,o=t.width*t.depth,l=t.depth*t.height,c=2*(s+o+l);for(let t=0;t<Mc;t++){let n=((e.left[t]+e.right[t])*s+(e.down[t]+e.up[t])*o+(e.front[t]+e.back[t])*l)/c;i[t]=Lc*r*a/(-c*Math.log(1-n)+4*Cc[t]*a)}return i}function vt(t){let e=[];for(let n in dc)if(dc.hasOwnProperty(n)){e[n]=0;for(let i=0;i<Tc;i++){let r=i+Pc;e[n]+=t[n][r]}e[n]/=Tc,e[n]=Math.sqrt(1-e[n])}return e}class Yc{constructor(t,e){null==e&&(e={}),null==e.listenerPosition&&(e.listenerPosition=ql.slice()),null==e.dimensions&&(e.dimensions={},Object.assign(e.dimensions,fc)),null==e.materials&&(e.materials={},Object.assign(e.materials,Ec)),null==e.speedOfSound&&(e.speedOfSound=Kl),e.dimensions=gt(e.dimensions);let n=mt(e.materials),i=vt(n),r=At(e.dimensions,n,e.speedOfSound);this.early=new Xc(t,{dimensions:e.dimensions,coefficients:i,speedOfSound:e.speedOfSound,listenerPosition:e.listenerPosition}),this.late=new Qc(t,{durations:r}),this.speedOfSound=e.speedOfSound,this.output=t.createGain(),this.early.output.connect(this.output),this._merger=t.createChannelMerger(4),this.late.output.connect(this._merger,0,0),this._merger.connect(this.output)}dispose(){this.early.output.disconnect(this.output),this.late.output.disconnect(this._merger,0,0),this._merger.disconnect(this.output)}setProperties(t,e){let n=mt(e),i=At(t,n,this.speedOfSound);this.late.setDurations(i),this.early.speedOfSound=this.speedOfSound;let r=vt(n);this.early.setRoomProperties(t,r)}setListenerPosition(t,e,n){this.early.speedOfSound=this.speedOfSound,this.early.setListenerPosition(t,e,n);let i=this.getDistanceOutsideRoom(t,e,n),r=1;i>Oc&&(r=1-i/Xl,r=Math.max(0,Math.min(1,r))),this.output.gain.value=r}getDistanceOutsideRoom(t,e,n){let i=Math.max(0,-this.early._halfDimensions.width-t,t-this.early._halfDimensions.width),r=Math.max(0,-this.early._halfDimensions.height-e,e-this.early._halfDimensions.height),a=Math.max(0,-this.early._halfDimensions.depth-n,n-this.early._halfDimensions.depth);return Math.sqrt(i*i+r*r+a*a)}}
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class qc{constructor(t,e){null==e&&(e={}),null==e.ambisonicOrder&&(e.ambisonicOrder=lc),null==e.listenerPosition&&(e.listenerPosition=ql.slice()),null==e.listenerForward&&(e.listenerForward=Zl.slice()),null==e.listenerUp&&(e.listenerUp=Jl.slice()),null==e.dimensions&&(e.dimensions={},Object.assign(e.dimensions,fc)),null==e.materials&&(e.materials={},Object.assign(e.materials,Ec)),null==e.speedOfSound&&(e.speedOfSound=Kl),null==e.renderingMode&&(e.renderingMode=ec),this._ambisonicOrder=Gc.validateAmbisonicOrder(e.ambisonicOrder),this._sources=[],this._room=new Yc(t,{listenerPosition:e.listenerPosition,dimensions:e.dimensions,materials:e.materials,speedOfSound:e.speedOfSound}),this._listener=new Hc(t,{ambisonicOrder:e.ambisonicOrder,position:e.listenerPosition,forward:e.listenerForward,up:e.listenerUp,renderingMode:e.renderingMode}),this._context=t,this.output=t.createGain(),this.ambisonicOutput=t.createGain(),this.ambisonicInput=this._listener.input,this._room.output.connect(this._listener.input),this._listener.output.connect(this.output),this._listener.ambisonicOutput.connect(this.ambisonicOutput)}getRenderingMode(){return this._listener.getRenderingMode()}setRenderingMode(t){this._listener.setRenderingMode(t)}dispose(){this._room.output.disconnect(this._listener.input),this._listener.output.disconnect(this.output),this._listener.ambisonicOutput.disconnect(this.ambisonicOutput)}createSource(t){let e=new jc(this,t);return this._sources[this._sources.length]=e,e}removeSource(t){const e=this._sources.findIndex(e=>e===t);e>-1&&(this._sources.splice(e,1),t.dispose())}setAmbisonicOrder(t){this._ambisonicOrder=Gc.validateAmbisonicOrder(t)}setRoomProperties(t,e){this._room.setProperties(t,e)}setListenerPosition(t,e,n){this._listener.position[0]=t,this._listener.position[1]=e,this._listener.position[2]=n,this._room.setListenerPosition(t,e,n),this._sources.forEach((function(t){t._update()}))}setListenerOrientation(t,e,n,i,r,a){this._listener.setOrientation(t,e,n,i,r,a)}setListenerFromMatrix(t){this._listener.setFromMatrix(t),this.setListenerPosition(this._listener.position[0],this._listener.position[1],this._listener.position[2])}setSpeedOfSound(t){this._room.speedOfSound=t}}qc.Version="2.0.0";class Zc extends vl{constructor(t,e,n,i){const r=i.createSource();super(t,e,n,r.input),this.inNode.disconnect(n.destination),this.resScene=i,this.resNode=r,Object.seal(this)}update(t){super.update(t);const{p:e,f:n,u:i}=t;this.resNode.setMinDistance(this.minDistance),this.resNode.setMaxDistance(this.maxDistance),this.resNode.setPosition(e.x,e.y,e.z),this.resNode.setOrientation(n.x,n.y,n.z,i.x,i.y,i.z)}dispose(){this.resScene.removeSource(this.resNode),this.resNode=null,super.dispose()}}class Jc extends yl{constructor(t){super(),this.scene=new qc(t,{ambisonicOrder:1,renderingMode:"bypass"}),this.scene.output.connect(t.destination),this.scene.setRoomProperties({width:10,height:5,depth:10},{left:"transparent",right:"transparent",front:"transparent",back:"transparent",down:"grass",up:"transparent"}),Object.seal(this)}update(t){super.update(t);const{p:e,f:n,u:i}=t;this.scene.setListenerPosition(e.x,e.y,e.z),this.scene.setListenerOrientation(n.x,n.y,n.z,i.x,i.y,i.z)}createSource(t,e,n,i){return n?new Zc(t,e,i,this.scene):super.createSource(t,e,n,i)}}const Kc=1024,$c=new al,th=new Event("audioready");let eh=Object.prototype.hasOwnProperty.call(window,"AudioContext"),nh=eh&&Object.prototype.hasOwnProperty.call(window,"AudioListener"),ih=nh&&Object.prototype.hasOwnProperty.call(AudioListener.prototype,"setPosition"),rh=nh&&Object.prototype.hasOwnProperty.call(AudioListener.prototype,"positionX"),ah=nh;class sh extends zo{constructor(){super(),this.minDistance=1,this.minDistanceSq=1,this.maxDistance=10,this.maxDistanceSq=100,this.rolloff=1,this.transitionTime=.5,this.users=new Map,this.analysers=new Map,this.clips=new Map,this.onAudioActivity=t=>{$c.id=t.id,$c.isActive=t.isActive,this.dispatchEvent($c)},this.listener=null,this.audioContext=null,this.createContext(),Object.seal(this)}addEventListener(t,e,n){t===th.type&&this.ready?e(th):super.addEventListener(t,e,n)}get ready(){return this.audioContext&&"running"===this.audioContext.state}async start(){this.createContext(),await this.audioContext.resume()}update(){if(this.audioContext){const t=this.currentTime;for(let e of this.clips.values())e.update(t);for(let e of this.users.values())e.update(t);for(let e of this.analysers.values())e.update(t)}}createContext(){if(!this.audioContext){if(eh)try{this.audioContext=new AudioContext,this.ready?console.log("AudioContext is already running."):(console.log("AudioContext is not yet running."),function(t,e){e=e||(()=>!0);const n=async i=>{let r=e();if(r instanceof Promise&&(r=await r),i.isTrusted&&r){for(let t of Vo)window.removeEventListener(t,n);const e=t();e instanceof Promise&&await e}};for(let t of Vo)window.addEventListener(t,n)}(()=>{console.log("AudioContext is finally running."),this.dispatchEvent(th)},async()=>(await this.start(),this.ready)))}catch(t){eh=!1,console.warn("Could not create WebAudio AudioContext",t)}if(eh||(this.audioContext=new fl),eh&&ah)try{this.listener=new Jc(this.audioContext)}catch(t){ah=!1,console.warn("Resonance Audio API not available!",t)}if(eh&&!ah&&rh)try{this.listener=new bl(this.audioContext.listener)}catch(t){rh=!1,console.warn("No AudioListener.positionX property!",t)}if(eh&&!ah&&!rh&&ih)try{this.listener=new El(this.audioContext.listener)}catch(t){ih=!1,console.warn("No WebAudio API!",t)}ih&&eh||(this.listener=new yl)}}createSpatializer(t,e,n){if(!this.listener)throw new Error("Audio context isn't ready");if(!e)throw new Error("No stream or audio element given.");return this.listener.createSource(t,e,n,this.audioContext)}get currentTime(){return this.audioContext.currentTime}createUser(t){return this.users.has(t)||this.users.set(t,new pl),this.users.get(t)}createLocalUser(t){const e=this.createUser(t);return e.spatializer=this.listener,e}async createClip(t,e,n,i,r,...a){const s=new pl,o=[];for(let t of a){const e=document.createElement("source");r&&(t=await p(t,r)),e.src=t,o.push(e)}const l=document.createElement("audio");return l.loop=e,l.controls=!1,l.playsInline=!0,l.autoplay=n,l.append(...o),s.spatializer=this.createSpatializer(t,l,i),this.clips.set(t,s),s}async playClip(t,e=1){if(this.clips.has(t)){const n=this.clips.get(t);n.volume=e,await n.spatializer.play()}}stopClip(t){if(this.clips.has(t)){this.clips.get(t).spatializer.stop()}}getSource(t,e){return t.get(e)||null}getUser(t){return this.getSource(this.users,t)}getClip(t){return this.getSource(this.clips,t)}removeSource(t,e){if(t.has(e)){const n=t.get(e);t.delete(e),n.dispose()}}removeUser(t){this.removeSource(this.users,t)}removeClip(t){this.removeSource(this.clips,t)}setUserStream(t,e){if(this.users.has(t)){if(this.analysers.has(t)){const e=this.analysers.get(t);this.analysers.delete(t),e.removeEventListener("audioActivity",this.onAudioActivity),e.dispose()}const n=this.users.get(t);if(n.spatializer=null,e){n.spatializer=this.createSpatializer(t,e,!0),n.spatializer.setAudioProperties(this.minDistance,this.maxDistance,this.rolloff,this.transitionTime),n.spatializer.audio.autoPlay=!0,n.spatializer.audio.muted=!0,n.spatializer.audio.addEventListener("onloadedmetadata",()=>n.spatializer.audio.play()),n.spatializer.audio.play();const i=new hl(n,this.audioContext,Kc);i.addEventListener("audioActivity",this.onAudioActivity),this.analysers.set(t,i)}}}setAudioProperties(t,e,n,i){this.minDistance=t,this.maxDistance=e,this.transitionTime=i,this.rolloff=n;for(let t of this.users.values())t.spatializer&&t.spatializer.setAudioProperties(this.minDistance,this.maxDistance,this.rolloff,this.transitionTime);for(let t of this.clips.values())t.spatializer&&t.spatializer.setAudioProperties(this.minDistance,this.maxDistance,this.rolloff,this.transitionTime)}withPose(t,e,n,i){if(t.has(e)){const r=t.get(e).pose;null===n&&(n=this.transitionTime),i(r,n)}}withUser(t,e,n){this.withPose(this.users,t,e,n)}setUserPosition(t,e,n,i,r=null){this.withUser(t,r,(t,r)=>{t.setTargetPosition(e,n,i,this.currentTime,r)})}setUserOrientation(t,e,n,i,r,a,s,o=null){this.withUser(t,o,(t,o)=>{t.setTargetOrientation(e,n,i,r,a,s,this.currentTime,o)})}setUserPose(t,e,n,i,r,a,s,o,l,c,h=null){this.withUser(t,h,(t,h)=>{t.setTarget(e,n,i,r,a,s,o,l,c,this.currentTime,h)})}withClip(t,e,n){this.withPose(this.clips,t,e,n)}setClipPosition(t,e,n,i,r=null){this.withClip(t,r,(t,r)=>{t.setTargetPosition(e,n,i,this.currentTime,r)})}setClipOrientation(t,e,n,i,r,a,s,o=null){this.withClip(t,o,(t,o)=>{t.setTargetOrientation(e,n,i,r,a,s,this.currentTime,o)})}setClipPose(t,e,n,i,r,a,s,o,l,c,h=null){this.withClip(t,h,(t,h)=>{t.setTarget(e,n,i,r,a,s,o,l,c,this.currentTime,h)})}}const oh={type:"fadeComplete"};class lh extends N{constructor(t,e=.25,n=0){super(Ko,z({color:n,opacity:1,transparent:!0})),this.speed=1/e,this.direction=0,t.add(this),this.position.set(0,0,-.1)}get opacity(){return this.material.opacity}set opacity(t){this.material.opacity=t}get isIn(){return this.opacity<1}get isOut(){return this.opacity>0}async fadeOut(){this.isIn&&(this.direction=1,await l(this,"fadeComplete"))}async fadeIn(){this.isOut&&(this.direction=-1,await l(this,"fadeComplete"))}update(t){if(0!==this.direction){const e=this.direction*this.speed*t/1e3;0<=this.opacity&&this.opacity<=1&&(this.opacity+=e),(1===this.direction&&this.opacity>1||-1===this.direction&&this.opacity<0)&&(this.opacity=(1+this.direction)/2,this.direction=0,this.dispatchEvent(oh))}}}function _t(t,e,n,i,r,a){const s=new Oo(16777215,i,r,a);return s.position.set(t,e,n),s}const ch=.1;class hh extends _{constructor(){super(),this.valueBar=new Oo(12632256,0,1,1),this.valueBar.scale.set(0,1,1),this.value=0,this.targetValue=0;const t=new _;t.scale.set(1,.1,.1),t.add(this.valueBar),this.add(t),this.add(_t(-.5,0,-.05,.01,.1,.01)),this.add(_t(-.5,0,.05,.01,.1,.01)),this.add(_t(.5,0,-.05,.01,.1,.01)),this.add(_t(.5,0,.05,.01,.1,.01)),this.add(_t(-.5,-.05,0,.01,.01,.1)),this.add(_t(.5,-.05,0,.01,.01,.1)),this.add(_t(-.5,.05,0,.01,.01,.1)),this.add(_t(.5,.05,0,.01,.01,.1)),this.add(_t(0,-.05,-.05,1,.01,.01)),this.add(_t(0,.05,-.05,1,.01,.01)),this.add(_t(0,-.05,.05,1,.01,.01)),this.add(_t(0,.05,.05,1,.01,.01))}onProgress(t,e,n){this.targetValue=t/e}update(t){this.parent.visible&&(this.value=Math.min(this.targetValue,this.value+ch*t),this.valueBar.scale.set(this.value,1,1),this.valueBar.position.x=this.value/2-.5,this.visible=this.value>0)}}class uh extends nl{constructor(t){super(t,new B({side:rr}))}}class dh extends uh{constructor(t){super(Io),this.camera=t;const e=Math.sqrt(t.far*t.far/3);this.scale.set(e,e,e)}update(){super.update(),this.camera.getWorldPosition(this.position)}}const ph=Object.freeze({Mouse0:0,Mouse1:1,Mouse2:2,Mouse3:3,Mouse4:4}),fh=Object.freeze({None:0,Mouse0:1<<ph.Mouse0,Mouse1:1<<ph.Mouse1,Mouse2:1<<ph.Mouse2,Mouse3:1<<ph.Mouse3,Mouse4:1<<ph.Mouse4}),mh=(new Kn).setFromEuler(new Di(Math.PI/2,0,0)),gh=(new Kn).setFromEuler(new Di(0,0,Math.PI)),Ah=new Pi,vh=100,_h=.5,xh=Object.freeze({None:"none",Auto:"auto",MouseLocked:"mouselocked",MouseUnlocked:"mouseunlocked",MouseScreenEdge:"mouseedge",Touch:"touchswipe",Gamepad:"gamepad",MagicWindow:"magicwindow",NetworkView:"net",WebXR:"xr"}),wh=new Di,yh=new Kn;class Mh extends Event{constructor(t,e){super("modechanged"),this.newMode=t,this.oldMode=e,Object.freeze(this)}}class bh extends zo{constructor(t,e,n,i){super(),this.camera=t,this.stage=e,this.controls=n,this.cursors=i,this.controlMode=xh.Auto,this.lastMode=xh.None,this.requiredMouseButton=new Map([[xh.MouseLocked,fh.None],[xh.MouseUnlocked,fh.Mouse0],[xh.MouseScreenEdge,fh.None]]),this.requiredTouchCount=1,this.dragThreshold=2,this.disableHorizontal=!1,this.disableVertical=!1,this.invertHorizontal=!1,this.invertVertical=!0,this.minimumX=-85*Math.PI/180,this.maximumX=85*Math.PI/180,this.target=new Kn(0,0,0,1),this._networkPose=null,this.lastGyro=new Kn(0,0,0,1),this.edgeFactor=1/3,this.accelerationX=2,this.accelerationY=2,this.speedX=4,this.speedY=3,this.fovZoomEnabled=!0,this.minFOV=25,this.maxFOV=120;let r=performance.now(),a=null;const s=t=>{const e=performance.now(),n=(e-r)/1e3;r=e,a=t,"mouse"===t.pointerType?this.cursors.isPointerLocked?this.controlMode=xh.MouseScreenEdge:this.controlMode=xh.MouseUnlocked:"touch"===t.pointerType?this.controlMode=xh.Touch:"gamepad"===t.pointerType&&(this.controlMode=xh.Gamepad),this.controlMode!=this.lastMode&&(this.dispatchEvent(new Mh(this.controlMode,this.lastMode)),this.lastMode=this.controlMode),this.controlMode!=xh.None&&this.checkMode(this.controlMode,this.controlMode===xh.MagicWindow||this.disableVertical,t,n),this.fovZoomEnabled&&Math.abs(t.dz)>0&&(this.fov=Z(this.camera.fov-t.dz,this.minFOV,this.maxFOV))};this.update=()=>{!a||this.controlMode!==xh.MouseScreenEdge&&this.controlMode!==xh.Gamepad?r=performance.now():s(a)},this.controls.addEventListener("click",s),this.controls.addEventListener("move",s)}get fov(){return this.camera.fov}set fov(t){t!==this.fov&&(this.camera.fov=t,this.camera.updateProjectionMatrix())}get networkPose(){return this._networkPose}set networkPose(t){this._networkPose=t,this._networkPose&&(this.target=this._networkPose.Orientation)}pointerMovement(t,e){switch(t){case xh.MouseUnlocked:case xh.MouseLocked:case xh.Gamepad:case xh.Touch:return this.getAxialMovement(e);case xh.MouseScreenEdge:return this.getRadiusMovement(e);default:return Ah.set(0,0)}}getAxialMovement(t){return Ah.set(-vh*t.du,vh*t.dv),Ah}_scaleRadialComponent(t,e,n){const i=Math.abs(t);return Math.sign(t)*Math.pow(Math.max(0,i-this.edgeFactor)/(1-this.edgeFactor),n)*e}getRadiusMovement(t){return Ah.set(this._scaleRadialComponent(t.u,this.speedX,this.accelerationX),this._scaleRadialComponent(-t.v,this.speedY,this.accelerationY)),Ah}get meanTouchPointMovement(){Ah.set(0,0);let t=0;for(const e of this.controls.pointers.values())"touch"===e.type&&(Ah.x+=e.x,Ah.y+=e.y,++t);return Ah.set(_h*Ah.y/t,-_h*Ah.x/t),Ah}orientationDelta(t,e,n,i){if(t==xh.MagicWindow||t==xh.NetworkView){const t=this.absoluteOrientation,e=this.lastGyro.inverse().multiply(t);return this.lastGyro=t,e}var r=this.pointerMovement(t,n);return e?r.x=0:this.invertVertical&&(r.x*=-1),this.disableHorizontal?r.y=0:this.invertHorizontal&&(r.y*=-1),r.multiplyScalar(i),wh.set(r.y,r.x,0,"YXZ"),yh.setFromEuler(wh),yh}get absoluteOrientation(){return this.controlMode==xh.MagicWindow?mh.multiply(UnityInput.gyro.attitude).multiply(gh):this.controlMode==xh.NetworkView?(new Kn).fromArray(this.networkPose.Orientation):new Kn(0,0,0,1)}gestureSatisfied(t,e){return t==xh.Touch?this.controls.getPointerCount("touch")===this.requiredTouchCount:t==xh.NetworkView?null!==this.networkPose:this.requiredMouseButton.has(t)?e.buttons===this.requiredMouseButton.get(t):t==xh.Gamepad||t==xh.MagicWindow||t==xh.WebXR}dragRequired(t){return t==xh.Touch||!this.requiredMouseButton.has(t)||this.requiredMouseButton.get(t)!=fh.None}dragSatisfied(t,e){return!this.dragRequired(t)||e.dragDistance>this.dragThreshold}checkMode(t,e,n,i){if(this.gestureSatisfied(t,n)&&this.dragSatisfied(t,n)){const r=this.orientationDelta(t,e,n,i);this.stage.rotateView(r,this.minimumX,this.maximumX)}}}bh.Mode=xh;const Sh=new WeakMap;class Eh{constructor(t){Sh.set(this,t),this.pointerLockElement=t,this.allowPointerLock=!1,t.addEventListener("click",t=>{this.allowPointerLock&&!this.isPointerLocked&&this.lockPointer()})}lockPointer(){this.pointerLockElement.requestPointerLock()}get isPointerLocked(){return null!==document.pointerLockElement}setCursor(t,e){if("mouse"===e.pointerType){const n=Sh.get(this),i=e.buttons===fh.Mouse0,r=e.dragDistance>0;n.style.cursor=t?t.object.disabled?"not-allowed":r?"move":"pointer":i?"grabbing":"grab"}}}function xt(t,e,n,i){this.ray=new $s(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new Ri,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function wt(t,e){return t.distance-e.distance}function yt(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)yt(i[t],e,n,!0)}}Object.assign(xt.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const i=n||[];return yt(t,this,i,e),i.sort(wt),i},intersectObjects:function(t,e,n){const i=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let n=0,r=t.length;n<r;n++)yt(t[n],this,i,e);return i.sort(wt),i}});class Th extends Event{constructor(t,e){super(t),this.hit=e}}class Ph extends zo{constructor(t,e,n,i,r,...a){super();const s=new xt,o=new Map,l=[],c=new Oo(16776960,.01,.01,.01);i.add(c);const h=t=>{n.setCursor(o.get(t.pointerID),t)},u=n=>{const i={x:n.u,y:-n.v},a=t.xr.isPresenting?t.xr.getCamera(e):e;s.setFromCamera(i,a),function(t){if(!(t instanceof Array))throw new Error("Must provide an array as the first parameter.");t.splice(0)}(l),s.intersectObject(r,!0,l);let o=null;for(let t of l)t.object&&t.object.visible&&(o=t);return c.position.copy(s.ray.direction),c.position.multiplyScalar(o&&o.distance||2),o&&c.position.add(o.face.normal.multiplyScalar(.01)),c.position.add(s.ray.origin),o},d=t=>{const e=o.get(t.pointerID),n=u(t);(n&&n.object)!=(e&&e.object)&&(e&&e.object&&(o.delete(t.pointerID),e.object.dispatchEvent({type:"exit"}),this.dispatchEvent(new Th("exit",e))),n&&n.object&&(o.set(t.pointerID,n),n.object.dispatchEvent({type:"enter"}),this.dispatchEvent(new Th("enter",n))))},p=t=>{const e=u(t);e&&e.object&&(t.buttons===fh.Mouse0?e.object.dispatchEvent({type:"click"}):console.log(e))};for(let t of a)t.addEventListener("move",d),t.addEventListener("click",p),t.addEventListener("pointerdown",h),t.addEventListener("move",h),t.addEventListener("pointerup",h)}}const Dh="undefined"!=typeof InstallTrigger;function Mt(t,e,n){return t*(n-e)+e}class Ch extends Event{constructor(t){super(t),this.pointerType=null,this.pointerID=null,this.x=0,this.y=0,this.dx=0,this.dy=0,this.dz=0,this.u=0,this.v=0,this.du=0,this.dv=0,this.buttons=0,this.dragDistance=0,Object.seal(this)}}class Lh extends Event{constructor(t){super("inputtypechanging"),this.newInputType=t,Object.freeze(this)}}class Rh{constructor(t){this.type=t.pointerType,this.id=t.pointerId,this.buttons=t.buttons,this.moveDistance=0,this.dragDistance=0,this.x=t.offsetX,this.y=t.offsetY,this.dx=t.movementX,this.dy=t.movementY,Object.seal(this)}}const Fh=5,Bh=new Ch("pointerdown"),Nh=new Ch("pointerup"),Ih=new Ch("click"),Oh=new Ch("move"),Uh=new Ch("drag");class zh extends zo{constructor(t){super(),this.pointers=new Map,this.currentInputType=null;let e=!0;const n=(e,n,i)=>{e.pointerType=n.type,e.pointerID=n.id,e.buttons=n.buttons,e.x=n.x,e.y=n.y,e.u=Mt(K(e.x,0,t.clientWidth),-1,1),e.v=Mt(K(e.y,0,t.clientHeight),-1,1),e.dx=n.dx,e.dy=n.dy,e.dz=i,e.du=2*e.dx/t.clientWidth,e.dv=2*e.dy/t.clientHeight,e.dragDistance=n.dragDistance,this.dispatchEvent(e)},i=t=>{const e=this.pointers.get(t.id);return e&&(t.dragDistance=e.dragDistance,document.pointerLockElement&&(t.x=e.x+t.dx,t.y=e.y+t.dy)),t.moveDistance=Math.sqrt(t.dx*t.dx+t.dy*t.dy),this.pointers.set(t.id,t),e};t.addEventListener("wheel",t=>{if(!(t.shiftKey||t.altKey||t.ctrlKey||t.metaKey)){t.preventDefault();const e=new Rh(t),r=(i(e),-t.deltaY*(Dh?1:.02));n(Oh,e,r)}},{passive:!1}),t.addEventListener("pointerdown",t=>{const r=this.pressCount,a=new Rh(t),s=(i(a),this.pressCount);a.type!==this.currentInputType&&(this.dispatchEvent(new Lh(a.type)),this.currentInputType=a.type),n(Bh,a,0),e=0===r&&1===s});t.addEventListener("pointermove",t=>{const r=this.pinchDistance,a=new Rh(t),s=i(a),o=this.pressCount,l=((t,n)=>{if(null!==t&&null!==n)return e=!1,(n-t)/10;return 0})(r,this.pinchDistance);n(Oh,a,l),1===o&&1===a.buttons&&s&&s.buttons===a.buttons&&(a.dragDistance+=a.moveDistance,a.dragDistance>Fh&&(e=!1,n(Uh,a,0)))}),t.addEventListener("pointerup",t=>{const r=new Rh(t),a=i(r);r.buttons=a.buttons,n(Nh,r,0),e&&n(Ih,r,0),r.dragDistance=0,"touch"===r.type&&this.pointers.delete(r.id)}),t.addEventListener("contextmenu",t=>{t.preventDefault()}),t.addEventListener("pointercancel",t=>{this.pointers.has(t.pointerId)&&this.pointers.delete(t.pointerId)})}get primaryPointer(){for(let t of this.pointers.values())return t}getPointerCount(t){let e=0;for(const n of this.pointers.values())n.type===t&&++e;return e}get pressCount(){let t=0;for(let e of this.pointers.values())e.buttons>0&&++t;return t}get pinchDistance(){if(2!==this.pressCount)return null;let t,e;for(let n of this.pointers.values())if(1===n.buttons)if(t){if(e)break;e=n}else t=n;const n=e.x-t.x,i=e.y-t.y;return Math.sqrt(n*n+i*i)}}function bt(t){F.call(this),this.type="LineBasicMaterial",this.color=new Jn(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}bt.prototype=Object.create(F.prototype),bt.prototype.constructor=bt,bt.prototype.isLineBasicMaterial=!0,bt.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const kh=new $n,Gh=new $n,Hh=new xi,Wh=new $s,Vh=new _i;function St(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),_.call(this),this.type="Line",this.geometry=void 0!==t?t:new R,this.material=void 0!==e?e:new bt,this.updateMorphTargets()}St.prototype=Object.assign(Object.create(_.prototype),{constructor:St,isLine:!0,copy:function(t){return _.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)kh.fromBufferAttribute(e,t-1),Gh.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=kh.distanceTo(Gh);t.setAttribute("lineDistance",new D(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let t=1,i=e.length;t<i;t++)n[t]=n[t-1],n[t]+=e[t-1].distanceTo(e[t])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),Vh.copy(n.boundingSphere),Vh.applyMatrix4(i),Vh.radius+=r,!1===t.ray.intersectsSphere(Vh))return;Hh.getInverse(i),Wh.copy(t.ray).applyMatrix4(Hh);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=a*a,o=new $n,l=new $n,c=new $n,h=new $n,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const i=n.index,r=n.attributes.position.array;if(null!==i){const n=i.array;for(let i=0,a=n.length-1;i<a;i+=u){const a=n[i],u=n[i+1];o.fromArray(r,3*a),l.fromArray(r,3*u);if(Wh.distanceSqToSegment(o,l,h,c)>s)continue;h.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(h);d<t.near||d>t.far||e.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else for(let n=0,i=r.length/3-1;n<i;n+=u){o.fromArray(r,3*n),l.fromArray(r,3*n+3);if(Wh.distanceSqToSegment(o,l,h,c)>s)continue;h.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(h);i<t.near||i>t.far||e.push({distance:i,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const i=n.vertices,r=i.length;for(let n=0;n<r-1;n+=u){if(Wh.distanceSqToSegment(i[n],i[n+1],h,c)>s)continue;h.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(h);r<t.near||r>t.far||e.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const jh=new $n,Qh=new $n;function Et(t,e){St.call(this,t,e),this.type="LineSegments"}Et.prototype=Object.assign(Object.create(St.prototype),{constructor:Et,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)jh.fromBufferAttribute(e,t),Qh.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+jh.distanceTo(Qh);t.setAttribute("lineDistance",new D(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let t=0,i=e.length;t<i;t+=2)jh.copy(e[t]),Qh.copy(e[t+1]),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+jh.distanceTo(Qh)}return this}});class Xh extends Et{constructor(t,e,n,i){t=t||10,e=e||10,n=new Jn(void 0!==n?n:4473924),i=new Jn(void 0!==i?i:8947848);const r=e/2,a=t/e,s=t/2,o=[],l=[];for(let t=0,c=0,h=-s;t<=e;t++,h+=a){o.push(-s,0,h,s,0,h),o.push(h,0,-s,h,0,s);const e=t===r?n:i;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new R;c.setAttribute("position",new D(o,3)),c.setAttribute("color",new D(l,3));super(c,new bt({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}const Yh=1.75,qh=new Di,Zh=new Kn;class Jh extends _{constructor(t,e){super(),this.renderer=t,this.rotation.copy(e.rotation),this.position.copy(e.position),this.position.y=0,this.camera=e,this.head=new _,this.head.position.set(0,Yh,0),this.head.add(this.camera),this.hands=new _,this.body=new _,this.shoulders=new _,this.shoulders.add(this.hands),this.shoulders.add(this.body),this.presentationPoint=new _,this.pitch=0,this.heading=0,this.avatar=new _,this.avatar.add(this.head),this.avatar.add(this.shoulders),this.avatar.add(this.presentationPoint),this.grid=new Xh(10,10),this.add(this.avatar),this.add(this.grid)}rotateView(t,e=-Math.PI,n=Math.PI){qh.setFromQuaternion(t,"YXZ"),qh.x+=this.pitch,qh.y+=this.heading,Zh.setFromEuler(qh),this.setViewRotation(Zh,e,n)}setViewRotation(t,e=-Math.PI,n=Math.PI){qh.setFromQuaternion(t,"YXZ");let{x:i,y:r}=qh;i>Math.PI&&(i-=2*Math.PI),i=Z(i,e,n),this.pitch=i,this.heading=r}update(){if(this.renderer.xr.isPresenting){const t=this.renderer.xr.getCamera(this.head),e=Math.round(4*this.heading/Math.PI)*Math.PI/4,n=t.position.y,i=Yh-n;this.avatar.rotation.y=e,this.head.rotation.x=0,this.head.position.set(0,i,0)}else this.avatar.rotation.y=this.heading,this.head.rotation.x=this.pitch,this.head.position.set(0,Yh,0);this.avatar.updateMatrixWorld(),this.head.updateMatrixWorld(),this.camera.updateMatrixWorld()}get avatarHeight(){return this.head.position.y}}class Kh{constructor(t){const e=new WeakMap;t.addEventListener("enter",t=>{t.hit.object.disabled||(e.has(t.hit.object)||e.set(t.hit.object,t.hit.object.scale.clone()),t.hit.object.scale.multiplyScalar(1.1))}),t.addEventListener("exit",t=>{t.hit.object.disabled||t.hit.object.scale.copy(e.get(t.hit.object))})}}function Tt(){_.call(this),this.type="Camera",this.matrixWorldInverse=new xi,this.projectionMatrix=new xi,this.projectionMatrixInverse=new xi}function Pt(t,e,n,i){Tt.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Dt(t,e){_.call(this),this.type="Light",this.color=new Jn(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Ct(t,e){Dt.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}Tt.prototype=Object.assign(Object.create(_.prototype),{constructor:Tt,isCamera:!0,copy:function(t,e){return _.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new $n),this.updateMatrixWorld(!0);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){_.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){_.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Pt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Pt,isPerspectiveCamera:!0,copy:function(t,e){return Tt.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Xn.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*Xn.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Xn.RAD2DEG*Math.atan(Math.tan(.5*Xn.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*Xn.DEG2RAD*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=_.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Dt.prototype=Object.assign(Object.create(_.prototype),{constructor:Dt,isLight:!0,copy:function(t){return _.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=_.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Ct.prototype=Object.assign(Object.create(Dt.prototype),{constructor:Ct,isAmbientLight:!0});const $h=new _i,tu=new $n;class eu{constructor(t,e,n,i,r,a){this.planes=[void 0!==t?t:new io,void 0!==e?e:new io,void 0!==n?n:new io,void 0!==i?i:new io,void 0!==r?r:new io,void 0!==a?a:new io]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}clone(){return(new this.constructor).copy(this)}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],f=n[11],m=n[12],g=n[13],A=n[14],v=n[15];return e[0].setComponents(s-i,h-o,f-u,v-m).normalize(),e[1].setComponents(s+i,h+o,f+u,v+m).normalize(),e[2].setComponents(s+r,h+l,f+d,v+g).normalize(),e[3].setComponents(s-r,h-l,f-d,v-g).normalize(),e[4].setComponents(s-a,h-c,f-p,v-A).normalize(),e[5].setComponents(s+a,h+c,f+p,v+A).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),$h.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere($h)}intersectsSprite(t){return $h.center.set(0,0,0),$h.radius=.7071067811865476,$h.applyMatrix4(t.matrixWorld),this.intersectsSphere($h)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(tu.x=i.normal.x>0?t.max.x:t.min.x,tu.y=i.normal.y>0?t.max.y:t.min.y,tu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(tu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}}function Lt(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Pi(512,512),this.map=null,this.mapPass=null,this.matrix=new xi,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new eu,this._frameExtents=new Pi(1,1),this._viewportCount=1,this._viewports=[new Zi(0,0,1,1)]}function Rt(t,e,n,i,r,a){Tt.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==i?i:-1,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function Ft(){Lt.call(this,new Rt(-5,5,5,-5,.5,500))}function Bt(t,e){Dt.call(this,t,e),this.type="DirectionalLight",this.position.copy(_.DefaultUp),this.updateMatrix(),this.target=new _,this.shadow=new Ft}function Nt(t,e,n,i,r,a,s,o,l,c,h,u){q.call(this,null,a,s,o,l,c,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==l?l:na,this.minFilter=void 0!==c?c:na,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}function It(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Ot(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){var a=i.get(e);return void((!a||a.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=i.get(e);void 0===s?i.set(e,function(e,n){const i=e.array,r=e.usage,a=t.createBuffer();t.bindBuffer(n,a),t.bufferData(n,i,r),e.onUploadCallback();let s=t.FLOAT;return i instanceof Float32Array?s=t.FLOAT:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?s=t.UNSIGNED_SHORT:i instanceof Int16Array?s=t.SHORT:i instanceof Uint32Array?s=t.UNSIGNED_INT:i instanceof Int32Array?s=t.INT:i instanceof Int8Array?s=t.BYTE:i instanceof Uint8Array&&(s=t.UNSIGNED_BYTE),{buffer:a,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,i,r){const a=i.array,s=i.updateRange;t.bindBuffer(r,e),-1===s.count?t.bufferSubData(r,0,a):(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,e,r),s.version=e.version)}}}function Ut(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function zt(t){const e={};for(let n=0;n<t.length;n++){const i=Ut(t[n]);for(const t in i)e[t]=i[t]}return e}Object.assign(Lt.prototype,{_projScreenMatrix:new xi,_lightPositionWorld:new $n,_lookTarget:new $n,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(t.matrixWorld),e.position.copy(a),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Rt.prototype=Object.assign(Object.create(Tt.prototype),{constructor:Rt,isOrthographicCamera:!0,copy:function(t,e){return Tt.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){const e=_.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Ft.prototype=Object.assign(Object.create(Lt.prototype),{constructor:Ft,isDirectionalLightShadow:!0,updateMatrices:function(t){Lt.prototype.updateMatrices.call(this,t)}}),Bt.prototype=Object.assign(Object.create(Dt.prototype),{constructor:Bt,isDirectionalLight:!0,copy:function(t){return Dt.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Nt.prototype=Object.create(q.prototype),Nt.prototype.constructor=Nt,Nt.prototype.isDataTexture=!0;const nu={clone:Ut,merge:zt};function kt(t){F.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",this.fragmentShader="\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}kt.prototype=Object.create(F.prototype),kt.prototype.constructor=kt,kt.prototype.isShaderMaterial=!0,kt.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ut(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},kt.prototype.toJSON=function(t){const e=F.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e};const iu={alphamap_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",alphamap_pars_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",alphatest_fragment:"\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",aomap_fragment:"\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n",aomap_pars_fragment:"\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n",bsdfs:'\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via \'environmentBRDF\' from "Physically Based Shading on Mobile"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera\'s "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n',bumpmap_pars_fragment:"\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",clipping_planes_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n",clipping_planes_pars_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",clipping_planes_pars_vertex:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n",clipping_planes_vertex:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n",color_fragment:"\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n",color_pars_fragment:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_pars_vertex:"\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n",color_vertex:"\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor.xyz *= color.xyz;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n",common:"\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n",cube_uv_reflection_fragment:"\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\n\t\tvec2 f = fract( uv );\n\n\t\tuv += 0.5 - f;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\n\t\t}\n\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\n\t\tuv *= texelSize;\n\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x += texelSize;\n\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.y += texelSize;\n\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x -= texelSize;\n\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tvec3 tm = mix( tl, tr, f.x );\n\n\t\tvec3 bm = mix( bl, br, f.x );\n\n\t\treturn mix( tm, bm, f.y );\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n",defaultnormal_vertex:"\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n",displacementmap_pars_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",displacementmap_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n",emissivemap_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",emissivemap_pars_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",encodings_fragment:"\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\t// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n",envmap_fragment:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",envmap_common_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n",envmap_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n",envmap_pars_vertex:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n",envmap_physical_pars_fragment:"\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",envmap_vertex:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\n\n\tfogDepth = - mvPosition.z;\n\n#endif\n",fog_pars_vertex:"\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n",fog_fragment:"\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",fog_pars_fragment:"\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n",gradientmap_pars_fragment:"\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n",lightmap_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",lightmap_pars_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n",lights_lambert_vertex:"\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n",lights_pars_begin:"\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n",lights_toon_fragment:"\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n",lights_toon_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_phong_fragment:"\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n",lights_physical_pars_fragment:"\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",lights_fragment_begin:"\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_fragment_maps:"\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n",lights_fragment_end:"\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",logdepthbuf_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n",logdepthbuf_pars_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n",logdepthbuf_pars_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n",logdepthbuf_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n",map_fragment:"\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n",map_pars_fragment:"\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n",map_particle_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n",map_particle_pars_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",metalnessmap_fragment:"\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n",metalnessmap_pars_fragment:"\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n",morphnormal_vertex:"\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n",morphtarget_pars_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n",morphtarget_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",normal_fragment_begin:"\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n",normal_fragment_maps:"\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",normalmap_pars_fragment:"\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",clearcoat_normal_fragment_begin:"\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n",clearcoat_normal_fragment_maps:"\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n",clearcoat_pars_fragment:"\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n",packing:"\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",project_vertex:"\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",dithering_pars_fragment:"\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n",roughnessmap_fragment:"\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n",roughnessmap_pars_fragment:"\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n",shadowmap_pars_fragment:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",shadowmap_pars_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n",shadowmap_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n",shadowmask_pars_fragment:"\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n",skinbase_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n",skinning_pars_vertex:"\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",skinning_vertex:"\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n",skinnormal_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n",specularmap_fragment:"\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n",specularmap_pars_fragment:"\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n",tonemapping_fragment:"\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",tonemapping_pars_fragment:"\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n",transmissionmap_fragment:"\n#ifdef USE_TRANSMISSIONMAP\n\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\n#endif\n",transmissionmap_pars_fragment:"\n#ifdef USE_TRANSMISSIONMAP\n\n\tuniform sampler2D transmissionMap;\n\n#endif\n",uv_pars_fragment:"\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n",uv_pars_vertex:"\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n",uv_vertex:"\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n",uv2_pars_fragment:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n",uv2_pars_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n",uv2_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n",worldpos_vertex:"\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n",background_frag:"\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",background_vert:"\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n",cube_frag:"\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",cube_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n",depth_frag:"\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n",depth_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n",distanceRGBA_frag:"\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",distanceRGBA_vert:"\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",equirect_frag:"\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",equirect_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n",linedashed_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",linedashed_vert:"\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n",meshbasic_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshbasic_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshlambert_frag:"\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshmatcap_frag:"\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshmatcap_vert:"\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n",meshtoon_frag:"\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshtoon_vert:"\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphong_frag:"\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphong_vert:"\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphysical_frag:"\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transmission model\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphysical_vert:"\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",normal_frag:"\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n",normal_vert:"\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n",points_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n",points_vert:"\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n",shadow_frag:"\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",shadow_vert:"\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",sprite_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",sprite_vert:"\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n"},ru={common:{diffuse:{value:new Jn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ii},uv2Transform:{value:new ii},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Pi(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Jn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Jn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ii}},sprite:{diffuse:{value:new Jn(15658734)},opacity:{value:1},center:{value:new Pi(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ii}}},au={basic:{uniforms:zt([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.fog]),vertexShader:iu.meshbasic_vert,fragmentShader:iu.meshbasic_frag},lambert:{uniforms:zt([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.fog,ru.lights,{emissive:{value:new Jn(0)}}]),vertexShader:iu.meshlambert_vert,fragmentShader:iu.meshlambert_frag},phong:{uniforms:zt([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.fog,ru.lights,{emissive:{value:new Jn(0)},specular:{value:new Jn(1118481)},shininess:{value:30}}]),vertexShader:iu.meshphong_vert,fragmentShader:iu.meshphong_frag},standard:{uniforms:zt([ru.common,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.roughnessmap,ru.metalnessmap,ru.fog,ru.lights,{emissive:{value:new Jn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:iu.meshphysical_vert,fragmentShader:iu.meshphysical_frag},toon:{uniforms:zt([ru.common,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.gradientmap,ru.fog,ru.lights,{emissive:{value:new Jn(0)}}]),vertexShader:iu.meshtoon_vert,fragmentShader:iu.meshtoon_frag},matcap:{uniforms:zt([ru.common,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.fog,{matcap:{value:null}}]),vertexShader:iu.meshmatcap_vert,fragmentShader:iu.meshmatcap_frag},points:{uniforms:zt([ru.points,ru.fog]),vertexShader:iu.points_vert,fragmentShader:iu.points_frag},dashed:{uniforms:zt([ru.common,ru.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:iu.linedashed_vert,fragmentShader:iu.linedashed_frag},depth:{uniforms:zt([ru.common,ru.displacementmap]),vertexShader:iu.depth_vert,fragmentShader:iu.depth_frag},normal:{uniforms:zt([ru.common,ru.bumpmap,ru.normalmap,ru.displacementmap,{opacity:{value:1}}]),vertexShader:iu.normal_vert,fragmentShader:iu.normal_frag},sprite:{uniforms:zt([ru.sprite,ru.fog]),vertexShader:iu.sprite_vert,fragmentShader:iu.sprite_frag},background:{uniforms:{uvTransform:{value:new ii},t2D:{value:null}},vertexShader:iu.background_vert,fragmentShader:iu.background_frag},cube:{uniforms:zt([ru.envmap,{opacity:{value:1}}]),vertexShader:iu.cube_vert,fragmentShader:iu.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:iu.equirect_vert,fragmentShader:iu.equirect_frag},distanceRGBA:{uniforms:zt([ru.common,ru.displacementmap,{referencePosition:{value:new $n},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:iu.distanceRGBA_vert,fragmentShader:iu.distanceRGBA_frag},shadow:{uniforms:zt([ru.lights,ru.fog,{color:{value:new Jn(0)},opacity:{value:1}}]),vertexShader:iu.shadow_vert,fragmentShader:iu.shadow_frag}};function Gt(t,e,n,i,r){const a=new Jn(0);let s,o,l=0,c=null,h=0,u=null;function d(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return a},setClearColor:function(t,e){a.set(t),l=void 0!==e?e:1,d(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,d(a,l)},render:function(n,r,p,f){let m=!0===r.isScene?r.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,A=g.getSession&&g.getSession();A&&"additive"===A.environmentBlendMode&&(m=null),null===m?d(a,l):m&&m.isColor&&(d(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.isWebGLCubeRenderTargetTexture||m.mapping===Jr)?(void 0===o&&(o=new N(new js(1,1,1),new kt({name:"BackgroundCubeMaterial",uniforms:Ut(au.cube.uniforms),vertexShader:au.cube.vertexShader,fragmentShader:au.cube.fragmentShader,side:rr,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(o)),m.isWebGLCubeRenderTarget&&(m=m.texture),o.material.uniforms.envMap.value=m,o.material.uniforms.flipEnvMap.value=m.isCubeTexture?-1:1,c===m&&h===m.version&&u===t.toneMapping||(o.material.needsUpdate=!0,c=m,h=m.version,u=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new N(new Jo(2,2),new kt({name:"BackgroundMaterial",uniforms:Ut(au.background.uniforms),vertexShader:au.background.vertexShader,fragmentShader:au.background.fragmentShader,side:ir,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),c===m&&h===m.version&&u===t.toneMapping||(s.material.needsUpdate=!0,c=m,h=m.version,u=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Ht(t,e,n,i){const r=t.getParameter(t.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},l=d(null);let c=l;function h(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function u(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function d(t){const e=[],n=[],i=[];for(let t=0;t<r;t++)e[t]=0,n[t]=0,i[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function p(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,r){const a=c.newAttributes,s=c.enabledAttributes,o=c.attributeDivisors;if(a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r}}function g(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function A(e,n,r,a,s,o){!0!==i.isWebGL2||r!==t.INT&&r!==t.UNSIGNED_INT?t.vertexAttribPointer(e,n,r,a,s,o):t.vertexAttribIPointer(e,n,r,s,o)}function v(){_(),c!==l&&(c=l,h(c.object))}function _(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,v,_){let x=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[s];void 0===h&&(h=d(i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),c[s]=h);return h}(v,u,l);c!==e&&(c=e,h(c.object)),x=function(t,e){const n=c.attributes,i=t.attributes;if(Object.keys(n).length!==Object.keys(i).length)return!0;for(const t in i){const e=n[t],r=i[t];if(void 0===e)return!0;if(e.attribute!==r)return!0;if(e.data!==r.data)return!0}return c.index!==e}(v,_),x&&function(t,e){const n={},i=t.attributes;for(const t in i){const e=i[t],r={};r.attribute=e,e.data&&(r.data=e.data),n[t]=r}c.attributes=n,c.index=e}(v,_)}else{const t=!0===l.wireframe;c.geometry===v.id&&c.program===u.id&&c.wireframe===t||(c.geometry=v.id,c.program=u.id,c.wireframe=t,x=!0)}!0===r.isInstancedMesh&&(x=!0),null!==_&&n.update(_,t.ELEMENT_ARRAY_BUFFER),x&&(!function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const l=o.attributes,c=s.getAttributes(),h=a.defaultAttributeValues;for(const e in c){const i=c[e];if(i>=0){const a=l[e];if(void 0!==a){const e=a.normalized,r=a.itemSize,s=n.get(a);if(void 0===s)continue;const l=s.buffer,c=s.type,h=s.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,s=n.stride,u=a.offset;n&&n.isInstancedInterleavedBuffer?(m(i,n.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)):f(i),t.bindBuffer(t.ARRAY_BUFFER,l),A(i,r,c,e,s*h,u*h)}else a.isInstancedBufferAttribute?(m(i,a.meshPerAttribute),void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)):f(i),t.bindBuffer(t.ARRAY_BUFFER,l),A(i,r,c,e,0,0)}else if("instanceMatrix"===e){const e=n.get(r.instanceMatrix);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i+0,1),m(i+1,1),m(i+2,1),m(i+3,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(i+0,4,s,!1,64,0),t.vertexAttribPointer(i+1,4,s,!1,64,16),t.vertexAttribPointer(i+2,4,s,!1,64,32),t.vertexAttribPointer(i+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(r.instanceColor);if(void 0===e)continue;const a=e.buffer,s=e.type;m(i,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(i,3,s,!1,12,0)}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(i,n);break;case 3:t.vertexAttrib3fv(i,n);break;case 4:t.vertexAttrib4fv(i,n);break;default:t.vertexAttrib1fv(i,n)}}}}g()}(r,l,u,v),null!==_&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(_).buffer))},reset:v,resetDefaultState:_,dispose:function(){v();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const n=e[t];for(const t in n)u(n[t].object),delete n[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)u(i[t].object),delete i[t];delete n[t.id]}},initAttributes:p,enableAttribute:f,disableUnusedAttributes:g}}function Wt(t,e,n,i){const r=i.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,i){t.drawArrays(a,e,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](a,i,s,o),n.update(s,a,o)}}function Vt(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=!0===n.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),A=h>0,v=a||!!e.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==i)return i;const n=e.get("EXT_texture_filter_anisotropic");return i=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:A,floatFragmentTextures:v,floatVertexTextures:A&&v,maxSamples:a?t.getParameter(t.MAX_SAMPLES):0}}function jt(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new io,o=new ii,l={value:null,needsUpdate:!1};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(t,n,i,r){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=i;e!==a;++e,n+=4)s.copy(t[e]).applyMatrix4(r,o),s.normal.toArray(c,n),c[n+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const s=0!==t.length||e||0!==i||r;return r=e,n=h(t,a,0),i=t.length,s},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,c()},this.setState=function(e,s,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,f=t.get(e);if(!r||null===u||0===u.length||a&&!p)a?h(null):c();else{const t=a?0:i,e=4*t;let r=f.clippingState||null;l.value=r,r=h(u,s,e,o);for(let t=0;t!==e;++t)r[t]=n[t];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Qt(t,e,n){this.width=t,this.height=e,this.scissor=new Zi(0,0,t,e),this.scissorTest=!1,this.viewport=new Zi(0,0,t,e),n=n||{},this.texture=new q(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:aa,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}au.physical={uniforms:zt([au.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Pi(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Jn(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:iu.meshphysical_vert,fragmentShader:iu.meshphysical_frag},Qt.prototype=Object.assign(Object.create(f.prototype),{constructor:Qt,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const su=90,ou=1;function Xt(t,e,n){if(_.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Pt(su,ou,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new $n(1,0,0)),this.add(i);const r=new Pt(su,ou,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new $n(-1,0,0)),this.add(r);const a=new Pt(su,ou,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new $n(0,1,0)),this.add(a);const s=new Pt(su,ou,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new $n(0,-1,0)),this.add(s);const o=new Pt(su,ou,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new $n(0,0,1)),this.add(o);const l=new Pt(su,ou,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new $n(0,0,-1)),this.add(l),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const c=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=u,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(h),t.xr.enabled=c},this.clear=function(t,e,i,r){const a=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(n,a),t.clear(e,i,r);t.setRenderTarget(a)}}function Yt(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),Qt.call(this,t,t,e),this.texture.isWebGLCubeRenderTargetTexture=!0}function qt(t){let e=new WeakMap;function n(t,e){return e===qr?t.mapping=Xr:e===Zr&&(t.mapping=Yr),t}return{get:function(i){if(i&&i.isTexture){const r=i.mapping;if(r===qr||r===Zr){if(e.has(i)){return n(e.get(i).texture,i.mapping)}{const r=i.image;if(r&&r.height>0){const a=t.getRenderList(),s=t.getRenderTarget(),o=t.getRenderState(),l=new Yt(r.height/2);return l.fromEquirectangularTexture(t,i),e.set(i,l),t.setRenderTarget(s),t.setRenderList(a),t.setRenderState(o),n(l.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}function Zt(t){const e={};return{has:function(n){if(void 0!==e[n])return null!==e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,null!==i},get:function(t){return this.has(t)||console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e[t]}}}function Jt(t,e,n,i){const r=new WeakMap,a=new WeakMap;function s(t){const o=t.target,l=r.get(o);null!==l.index&&e.remove(l.index);for(const t in l.attributes)e.remove(l.attributes[t]);o.removeEventListener("dispose",s),r.delete(o);const c=a.get(l);c&&(e.remove(c),a.delete(l)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(L(n)>65535?P:E)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}return{get:function(t,e){let i=r.get(e);return i||(e.addEventListener("dispose",s),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new R).setFromObject(t)),i=e._bufferGeometry),r.set(e,i),n.memory.geometries++,i)},update:function(n){const i=n.attributes;for(const n in i)e.update(i[n],t.ARRAY_BUFFER);const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++)e.update(i[n],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function Kt(t,e,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](a,l,s,i*o,c),n.update(l,a,c)}}function $t(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function te(t,e){return t[0]-e[0]}function ee(t,e){return Math.abs(e[1])-Math.abs(t[1])}function ne(t){const e={},n=new Float32Array(8),i=[];for(let t=0;t<8;t++)i[t]=[t,0];return{update:function(r,a,s,o){const l=r.morphTargetInfluences,c=void 0===l?0:l.length;let h=e[a.id];if(void 0===h){h=[];for(let t=0;t<c;t++)h[t]=[t,0];e[a.id]=h}for(let t=0;t<c;t++){const e=h[t];e[0]=t,e[1]=l[t]}h.sort(ee);for(let t=0;t<8;t++)t<c&&h[t][1]?(i[t][0]=h[t][0],i[t][1]=h[t][1]):(i[t][0]=Number.MAX_SAFE_INTEGER,i[t][1]=0);i.sort(te);const u=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=i[t],r=e[0],s=e[1];r!==Number.MAX_SAFE_INTEGER&&s?(u&&a.getAttribute("morphTarget"+t)!==u[r]&&a.setAttribute("morphTarget"+t,u[r]),d&&a.getAttribute("morphNormal"+t)!==d[r]&&a.setAttribute("morphNormal"+t,d[r]),n[t]=s,p+=s):(u&&void 0!==a.getAttribute("morphTarget"+t)&&a.deleteAttribute("morphTarget"+t),d&&void 0!==a.getAttribute("morphNormal"+t)&&a.deleteAttribute("morphNormal"+t),n[t]=0)}const f=a.morphTargetsRelative?1:1-p;o.getUniforms().setValue(t,"morphTargetBaseInfluence",f),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function ie(t,e,n,i){let r=new WeakMap;return{update:function(a){const s=i.render.frame,o=a.geometry,l=e.get(a,o);return r.get(l)!==s&&(o.isGeometry&&l.updateFromObject(a),e.update(l),r.set(l,s)),a.isInstancedMesh&&(n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER)),l},dispose:function(){r=new WeakMap}}}function re(t,e,n,i,r,a,s,o,l,c){t=void 0!==t?t:[],e=void 0!==e?e:Xr,s=void 0!==s?s:wa,q.call(this,t,e,n,i,r,a,s,o,l,c),this.flipY=!1}function ae(t,e,n,i){q.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=na,this.minFilter=na,this.wrapR=ta,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function se(t,e,n,i){q.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=na,this.minFilter=na,this.wrapR=ta,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Xt.prototype=Object.create(_.prototype),Xt.prototype.constructor=Xt,Yt.prototype=Object.create(Qt.prototype),Yt.prototype.constructor=Yt,Yt.prototype.isWebGLCubeRenderTarget=!0,Yt.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=ya,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},i=new js(5,5,5),r=new kt({name:"CubemapFromEquirect",uniforms:Ut(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:rr,blending:or});r.uniforms.tEquirect.value=e;const a=new N(i,r),s=e.minFilter;e.minFilter===oa&&(e.minFilter=aa);return new Xt(1,10,this).update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this},re.prototype=Object.create(q.prototype),re.prototype.constructor=re,re.prototype.isCubeTexture=!0,Object.defineProperty(re.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),ae.prototype=Object.create(q.prototype),ae.prototype.constructor=ae,ae.prototype.isDataTexture2DArray=!0,se.prototype=Object.create(q.prototype),se.prototype.constructor=se,se.prototype.isDataTexture3D=!0;const lu=new q,cu=new ae,hu=new se,uu=new re,du=[],pu=[],fu=new Float32Array(16),mu=new Float32Array(9),gu=new Float32Array(4);function oe(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=du[r];if(void 0===a&&(a=new Float32Array(r),du[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function le(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function ce(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function he(t,e){let n=pu[e];void 0===n&&(n=new Int32Array(e),pu[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function ue(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function de(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(le(n,e))return;t.uniform2fv(this.addr,e),ce(n,e)}}function pe(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(le(n,e))return;t.uniform3fv(this.addr,e),ce(n,e)}}function fe(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(le(n,e))return;t.uniform4fv(this.addr,e),ce(n,e)}}function me(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(le(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),ce(n,e)}else{if(le(n,i))return;gu.set(i),t.uniformMatrix2fv(this.addr,!1,gu),ce(n,i)}}function ge(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(le(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),ce(n,e)}else{if(le(n,i))return;mu.set(i),t.uniformMatrix3fv(this.addr,!1,mu),ce(n,i)}}function Ae(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(le(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),ce(n,e)}else{if(le(n,i))return;fu.set(i),t.uniformMatrix4fv(this.addr,!1,fu),ce(n,i)}}function ve(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||lu,r)}function _e(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||cu,r)}function xe(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||hu,r)}function we(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||uu,r)}function ye(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Me(t,e){const n=this.cache;le(n,e)||(t.uniform2iv(this.addr,e),ce(n,e))}function be(t,e){const n=this.cache;le(n,e)||(t.uniform3iv(this.addr,e),ce(n,e))}function Se(t,e){const n=this.cache;le(n,e)||(t.uniform4iv(this.addr,e),ce(n,e))}function Ee(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Te(t,e){t.uniform1fv(this.addr,e)}function Pe(t,e){t.uniform1iv(this.addr,e)}function De(t,e){t.uniform2iv(this.addr,e)}function Ce(t,e){t.uniform3iv(this.addr,e)}function Le(t,e){t.uniform4iv(this.addr,e)}function Re(t,e){const n=oe(e,this.size,2);t.uniform2fv(this.addr,n)}function Fe(t,e){const n=oe(e,this.size,3);t.uniform3fv(this.addr,n)}function Be(t,e){const n=oe(e,this.size,4);t.uniform4fv(this.addr,n)}function Ne(t,e){const n=oe(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Ie(t,e){const n=oe(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Oe(t,e){const n=oe(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ue(t,e,n){const i=e.length,r=he(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTexture2D(e[t]||lu,r[t])}function ze(t,e,n){const i=e.length,r=he(n,i);t.uniform1iv(this.addr,r);for(let t=0;t!==i;++t)n.safeSetTextureCube(e[t]||uu,r[t])}function ke(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return ue;case 35664:return de;case 35665:return pe;case 35666:return fe;case 35674:return me;case 35675:return ge;case 35676:return Ae;case 5124:case 35670:return ye;case 35667:case 35671:return Me;case 35668:case 35672:return be;case 35669:case 35673:return Se;case 5125:return Ee;case 35678:case 36198:case 36298:case 36306:case 35682:return ve;case 35679:case 36299:case 36307:return xe;case 35680:case 36300:case 36308:case 36293:return we;case 36289:case 36303:case 36311:case 36292:return _e}}(e.type)}function Ge(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Te;case 35664:return Re;case 35665:return Fe;case 35666:return Be;case 35674:return Ne;case 35675:return Ie;case 35676:return Oe;case 5124:case 35670:return Pe;case 35667:case 35671:return De;case 35668:case 35672:return Ce;case 35669:case 35673:return Le;case 35678:case 36198:case 36298:case 36306:case 35682:return Ue;case 35680:case 36300:case 36308:case 36293:return ze}}(e.type)}function He(t){this.id=t,this.seq=[],this.map={}}Ge.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),ce(e,t)},He.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}};const Au=/([\w\d_]+)(\])?(\[|\.)?/g;function We(t,e){t.seq.push(e),t.map[e.id]=e}function Ve(t,e,n){const i=t.name,r=i.length;for(Au.lastIndex=0;;){const a=Au.exec(i),s=Au.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===r){We(n,void 0===c?new ke(o,t,e):new Ge(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new He(o),We(n,t)),n=t}}}function je(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);Ve(n,t.getUniformLocation(e,n.name),this)}}function Qe(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}je.prototype.setValue=function(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)},je.prototype.setOptional=function(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)},je.upload=function(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},je.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n};let vu=0;function Xe(t){switch(t){case _s:return["Linear","( value )"];case xs:return["sRGB","( value )"];case ys:return["RGBE","( value )"];case bs:return["RGBM","( value, 7.0 )"];case Ss:return["RGBM","( value, 16.0 )"];case Es:return["RGBD","( value, 256.0 )"];case ws:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Ms:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Ye(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function qe(t,e){const n=Xe(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Ze(t,e){const n=Xe(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Je(t,e){let n;switch(e){case Gr:n="Linear";break;case Hr:n="Reinhard";break;case Wr:n="OptimizedCineon";break;case Vr:n="ACESFilmic";break;case jr:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ke(t){return""!==t}function $e(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tn(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const _u=/^[ \t]*#include +<([\w\d./]+)>/gm;function en(t){return t.replace(_u,nn)}function nn(t,e){const n=iu[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return en(n)}const xu=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,wu=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function rn(t){return t.replace(wu,sn).replace(xu,an)}function an(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),sn(t,e,n,i)}function sn(t,e,n,i){let r="";for(let t=parseInt(e);t<parseInt(n);t++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function on(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function ln(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===tr?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===er?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===nr&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Xr:case Yr:e="ENVMAP_TYPE_CUBE";break;case Jr:case Kr:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Yr:case Kr:e="ENVMAP_MODE_REFRACTION"}return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Or:e="ENVMAP_BLENDING_MULTIPLY";break;case Ur:e="ENVMAP_BLENDING_MIX";break;case zr:e="ENVMAP_BLENDING_ADD"}return e}(n),d=t.gammaFactor>0?t.gammaFactor:1,p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ke).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),m=r.createProgram();let g,A,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(Ke).join("\n"),g.length>0&&(g+="\n"),A=[p,f].filter(Ke).join("\n"),A.length>0&&(A+="\n")):(g=[on(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ke).join("\n"),A=[p,on(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==kr?"#define TONE_MAPPING":"",n.toneMapping!==kr?iu.tonemapping_pars_fragment:"",n.toneMapping!==kr?Je("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",iu.encodings_pars_fragment,n.map?qe("mapTexelToLinear",n.mapEncoding):"",n.matcap?qe("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?qe("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?qe("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?qe("lightMapTexelToLinear",n.lightMapEncoding):"",Ze("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ke).join("\n")),s=en(s),s=$e(s,n),s=tn(s,n),o=en(o),o=$e(o,n),o=tn(o,n),s=rn(s),o=rn(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,A=["#define varying in",n.glslVersion===Bs?"":"out highp vec4 pc_fragColor;",n.glslVersion===Bs?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+A);const _=v+g+s,x=v+A+o,w=Qe(r,r.VERTEX_SHADER,_),y=Qe(r,r.FRAGMENT_SHADER,x);if(r.attachShader(m,w),r.attachShader(m,y),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(m).trim(),e=r.getShaderInfoLog(w).trim(),n=r.getShaderInfoLog(y).trim();let i=!0,a=!0;if(!1===r.getProgramParameter(m,r.LINK_STATUS)){i=!1;const e=Ye(r,w,"vertex"),n=Ye(r,y,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(m,r.VALIDATE_STATUS),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:i,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:A}})}let M,b;return r.deleteShader(w),r.deleteShader(y),this.getUniforms=function(){return void 0===M&&(M=new je(r,m)),M},this.getAttributes=function(){return void 0===b&&(b=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r).name;n[i]=t.getAttribLocation(e,i)}return n}(r,m)),b},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=vu++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=w,this.fragmentShader=y,this}function cn(t,e,n,i,r,a){const s=[],o=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t?t.isTexture?e=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=_s,e}return{getParameters:function(r,s,f,g,A){const v=g.fog,_=r.isMeshStandardMaterial?g.environment:null,x=e.get(r.envMap||_),w=p[r.type],y=A.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(c)return 1024;{const t=h,n=Math.floor((t-20)/4),i=Math.min(n,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}}(A):0;let M,b;if(null!==r.precision&&(d=i.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),w){const t=au[w];M=t.vertexShader,b=t.fragmentShader}else M=r.vertexShader,b=r.fragmentShader;const S=t.getRenderTarget();return{isWebGL2:o,shaderID:w,shaderName:r.type,vertexShader:M,fragmentShader:b,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===A.isInstancedMesh,instancingColor:!0===A.isInstancedMesh&&null!==A.instanceColor,supportsVertexTextures:u,outputEncoding:null!==S?m(S.texture):t.outputEncoding,map:!!r.map,mapEncoding:m(r.map),matcap:!!r.matcap,matcapEncoding:m(r.matcap),envMap:!!x,envMapMode:x&&x.mapping,envMapEncoding:m(x),envMapCubeUV:!!x&&(x.mapping===Jr||x.mapping===Kr),lightMap:!!r.lightMap,lightMapEncoding:m(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:m(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===Cs,tangentSpaceNormalMap:r.normalMapType===Ds,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!v,useFog:r.fog,fogExp2:v&&v.isFogExp2,flatShading:r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:r.skinning&&y>0,maxBones:y,useVertexTexture:c,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:kr,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===ar,flipSided:r.side===rr,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=p[t.type];let n;if(e){const t=au[e];n=nu.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new ln(t,n,e,r),s.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function hn(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function un(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function dn(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function pn(t){const e=[];let n=0;const i=[],r=[],a={id:-1};function s(i,r,s,o,l,c){let h=e[n];const u=t.get(s);return void 0===h?(h={id:i.id,object:i,geometry:r,material:s,program:u.program||a,groupOrder:o,renderOrder:i.renderOrder,z:l,group:c},e[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=s,h.program=u.program||a,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=l,h.group=c),n++,h}return{opaque:i,transparent:r,init:function(){n=0,i.length=0,r.length=0},push:function(t,e,n,a,o,l){const c=s(t,e,n,a,o,l);(!0===n.transparent?r:i).push(c)},unshift:function(t,e,n,a,o,l){const c=s(t,e,n,a,o,l);(!0===n.transparent?r:i).unshift(c)},finish:function(){for(let t=n,i=e.length;t<i;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){i.length>1&&i.sort(t||un),r.length>1&&r.sort(e||dn)}}}function fn(t){let e=new WeakMap;return{get:function(n,i){const r=e.get(n);let a;return void 0===r?(a=new pn(t),e.set(n,new WeakMap),e.get(n).set(i,a)):(a=r.get(i),void 0===a&&(a=new pn(t),r.set(i,a))),a},dispose:function(){e=new WeakMap}}}function mn(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new $n,color:new Jn};break;case"SpotLight":n={position:new $n,direction:new $n,color:new Jn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new $n,color:new Jn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new $n,skyColor:new Jn,groundColor:new Jn};break;case"RectAreaLight":n={color:new Jn,position:new $n,halfWidth:new $n,halfHeight:new $n}}return t[e.id]=n,n}}}let yu=0;function gn(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function An(){const t=new mn,e=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pi};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pi,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)n.probe.push(new $n);const i=new $n,r=new xi,a=new xi;return{setup:function(s,o,l){let c=0,h=0,u=0;for(let t=0;t<9;t++)n.probe[t].set(0,0,0);let d=0,p=0,f=0,m=0,g=0,A=0,v=0,_=0;const x=l.matrixWorldInverse;s.sort(gn);for(let o=0,l=s.length;o<l;o++){const l=s[o],w=l.color,y=l.intensity,M=l.distance,b=l.shadow&&l.shadow.map?l.shadow.map.texture:null;if(l.isAmbientLight)c+=w.r*y,h+=w.g*y,u+=w.b*y;else if(l.isLightProbe)for(let t=0;t<9;t++)n.probe[t].addScaledVector(l.sh.coefficients[t],y);else if(l.isDirectionalLight){const r=t.get(l);if(r.color.copy(l.color).multiplyScalar(l.intensity),r.direction.setFromMatrixPosition(l.matrixWorld),i.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(i),r.direction.transformDirection(x),l.castShadow){const t=l.shadow,i=e.get(l);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.directionalShadow[d]=i,n.directionalShadowMap[d]=b,n.directionalShadowMatrix[d]=l.shadow.matrix,A++}n.directional[d]=r,d++}else if(l.isSpotLight){const r=t.get(l);if(r.position.setFromMatrixPosition(l.matrixWorld),r.position.applyMatrix4(x),r.color.copy(w).multiplyScalar(y),r.distance=M,r.direction.setFromMatrixPosition(l.matrixWorld),i.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(i),r.direction.transformDirection(x),r.coneCos=Math.cos(l.angle),r.penumbraCos=Math.cos(l.angle*(1-l.penumbra)),r.decay=l.decay,l.castShadow){const t=l.shadow,i=e.get(l);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,n.spotShadow[f]=i,n.spotShadowMap[f]=b,n.spotShadowMatrix[f]=l.shadow.matrix,_++}n.spot[f]=r,f++}else if(l.isRectAreaLight){const e=t.get(l);e.color.copy(w).multiplyScalar(y),e.position.setFromMatrixPosition(l.matrixWorld),e.position.applyMatrix4(x),a.identity(),r.copy(l.matrixWorld),r.premultiply(x),a.extractRotation(r),e.halfWidth.set(.5*l.width,0,0),e.halfHeight.set(0,.5*l.height,0),e.halfWidth.applyMatrix4(a),e.halfHeight.applyMatrix4(a),n.rectArea[m]=e,m++}else if(l.isPointLight){const i=t.get(l);if(i.position.setFromMatrixPosition(l.matrixWorld),i.position.applyMatrix4(x),i.color.copy(l.color).multiplyScalar(l.intensity),i.distance=l.distance,i.decay=l.decay,l.castShadow){const t=l.shadow,i=e.get(l);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,n.pointShadow[p]=i,n.pointShadowMap[p]=b,n.pointShadowMatrix[p]=l.shadow.matrix,v++}n.point[p]=i,p++}else if(l.isHemisphereLight){const e=t.get(l);e.direction.setFromMatrixPosition(l.matrixWorld),e.direction.transformDirection(x),e.direction.normalize(),e.skyColor.copy(l.color).multiplyScalar(y),e.groundColor.copy(l.groundColor).multiplyScalar(y),n.hemi[g]=e,g++}}m>0&&(n.rectAreaLTC1=ru.LTC_1,n.rectAreaLTC2=ru.LTC_2),n.ambient[0]=c,n.ambient[1]=h,n.ambient[2]=u;const w=n.hash;w.directionalLength===d&&w.pointLength===p&&w.spotLength===f&&w.rectAreaLength===m&&w.hemiLength===g&&w.numDirectionalShadows===A&&w.numPointShadows===v&&w.numSpotShadows===_||(n.directional.length=d,n.spot.length=f,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=A,n.directionalShadowMap.length=A,n.pointShadow.length=v,n.pointShadowMap.length=v,n.spotShadow.length=_,n.spotShadowMap.length=_,n.directionalShadowMatrix.length=A,n.pointShadowMatrix.length=v,n.spotShadowMatrix.length=_,w.directionalLength=d,w.pointLength=p,w.spotLength=f,w.rectAreaLength=m,w.hemiLength=g,w.numDirectionalShadows=A,w.numPointShadows=v,w.numSpotShadows=_,n.version=yu++)},state:n}}function vn(){const t=new An,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(i){t.setup(e,n,i)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function _n(){let t=new WeakMap;return{get:function(e,n){let i;return!1===t.has(e)?(i=new vn,t.set(e,new WeakMap),t.get(e).set(n,i)):!1===t.get(e).has(n)?(i=new vn,t.get(e).set(n,i)):i=t.get(e).get(n),i},dispose:function(){t=new WeakMap}}}function xn(t){F.call(this),this.type="MeshDepthMaterial",this.depthPacking=Ts,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function wn(t){F.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new $n,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}xn.prototype=Object.create(F.prototype),xn.prototype.constructor=xn,xn.prototype.isMeshDepthMaterial=!0,xn.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},wn.prototype=Object.create(F.prototype),wn.prototype.constructor=wn,wn.prototype.isMeshDistanceMaterial=!0,wn.prototype.copy=function(t){return F.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};function yn(t,e,n){let i=new eu;const r=new Pi,a=new Pi,s=new Zi,o=[],l=[],c={},h={0:rr,1:ir,2:ar},u=new kt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Pi},radius:{value:4}},vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:"\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n\t\t#ifdef HORIZONAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n"}),d=u.clone();d.defines.HORIZONAL_PASS=1;const p=new R;p.setAttribute("position",new w(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new N(p,u),m=this;function g(n,i){const r=e.update(f);u.uniforms.shadow_pass.value=n.map.texture,u.uniforms.resolution.value=n.mapSize,u.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,r,u,f,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,r,d,f,null)}function A(t,e,n){const i=t<<0|e<<1|n<<2;let r=o[i];return void 0===r&&(r=new xn({depthPacking:Ps,morphTargets:t,skinning:e}),o[i]=r),r}function v(t,e,n){const i=t<<0|e<<1|n<<2;let r=l[i];return void 0===r&&(r=new wn({morphTargets:t,skinning:e}),l[i]=r),r}function _(e,n,i,r,a,s,o){let l=null,u=A,d=e.customDepthMaterial;if(!0===r.isPointLight&&(u=v,d=e.customDistanceMaterial),void 0===d){let t=!1;!0===i.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===i.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e));l=u(t,r,!0===e.isInstancedMesh)}else l=d;if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){const t=l.uuid,e=i.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let r=n[e];void 0===r&&(r=l.clone(),n[e]=r),l=r}return l.visible=i.visible,l.wireframe=i.wireframe,l.side=o===nr?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:h[i.side],l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=a,l.farDistance=s),l}function x(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===nr)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=r[c.materialIndex];if(h&&h.visible){const e=_(n,i,h,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,c)}}}else if(r.visible){const e=_(n,i,r,s,a.near,a.far,o);t.renderBufferDirect(a,null,i,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)x(l[t],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=tr,this.render=function(e,o,l){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===e.length)return;const c=t.getRenderTarget(),h=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(or),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let c=0,h=e.length;c<h;c++){const h=e[c],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),a.copy(u.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(a.x=Math.floor(n/p.x),r.x=a.x*p.x,u.mapSize.x=a.x),r.y>n&&(a.y=Math.floor(n/p.y),r.y=a.y*p.y,u.mapSize.y=a.y)),null===u.map&&!u.isPointLightShadow&&this.type===nr){const t={minFilter:aa,magFilter:aa,format:ya};u.map=new Qt(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.mapPass=new Qt(r.x,r.y,t),u.camera.updateProjectionMatrix()}if(null===u.map){const t={minFilter:na,magFilter:na,format:ya};u.map=new Qt(r.x,r.y,t),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),u.updateMatrices(h,t),i=u.getFrustum(),x(o,l,u.camera,h,this.type)}u.isPointLightShadow||this.type!==nr||g(u,l),u.needsUpdate=!1}m.needsUpdate=!1,t.setRenderTarget(c,h,u)}}function Mn(t,e,n){const i=n.isWebGL2;const r=new function(){let e=!1;const n=new Zi;let i=null;const r=new Zi(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,s,o){!0===o&&(e*=s,i*=s,a*=s),n.set(e,i,a,s),!1===r.equals(n)&&(t.clearColor(e,i,a,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(e){e?F(t.DEPTH_TEST):B(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case Dr:t.depthFunc(t.NEVER);break;case Cr:t.depthFunc(t.ALWAYS);break;case Lr:t.depthFunc(t.LESS);break;case Rr:t.depthFunc(t.LEQUAL);break;case Fr:t.depthFunc(t.EQUAL);break;case Br:t.depthFunc(t.GEQUAL);break;case Nr:t.depthFunc(t.GREATER);break;case Ir:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},s=new function(){let e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?F(t.STENCIL_TEST):B(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&a===s||(t.stencilFunc(e,n,s),i=e,r=n,a=s)},setOp:function(e,n,i){s===e&&o===n&&l===i||(t.stencilOp(e,n,i),s=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}};let o={},l=null,c=null,h=null,u=null,d=null,p=null,f=null,m=null,g=null,A=!1,v=null,_=null,x=null,w=null,y=null;const M=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let b=!1,S=0;const E=t.getParameter(t.VERSION);-1!==E.indexOf("WebGL")?(S=parseFloat(/^WebGL\ ([0-9])/.exec(E)[1]),b=S>=1):-1!==E.indexOf("OpenGL ES")&&(S=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(E)[1]),b=S>=2);let T=null,P={};const D=new Zi,C=new Zi;function L(e,n,i){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let e=0;e<i;e++)t.texImage2D(n+e,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}const R={};function F(e){!0!==o[e]&&(t.enable(e),o[e]=!0)}function B(e){!1!==o[e]&&(t.disable(e),o[e]=!1)}R[t.TEXTURE_2D]=L(t.TEXTURE_2D,t.TEXTURE_2D,1),R[t.TEXTURE_CUBE_MAP]=L(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),F(t.DEPTH_TEST),a.setFunc(Rr),U(!1),z(Ki),F(t.CULL_FACE),O(or);const N={[pr]:t.FUNC_ADD,[fr]:t.FUNC_SUBTRACT,[mr]:t.FUNC_REVERSE_SUBTRACT};if(i)N[gr]=t.MIN,N[Ar]=t.MAX;else{const t=e.get("EXT_blend_minmax");null!==t&&(N[gr]=t.MIN_EXT,N[Ar]=t.MAX_EXT)}const I={[vr]:t.ZERO,[_r]:t.ONE,[xr]:t.SRC_COLOR,[yr]:t.SRC_ALPHA,[Pr]:t.SRC_ALPHA_SATURATE,[Er]:t.DST_COLOR,[br]:t.DST_ALPHA,[wr]:t.ONE_MINUS_SRC_COLOR,[Mr]:t.ONE_MINUS_SRC_ALPHA,[Tr]:t.ONE_MINUS_DST_COLOR,[Sr]:t.ONE_MINUS_DST_ALPHA};function O(e,n,i,r,a,s,o,l){if(e!==or){if(c||(F(t.BLEND),c=!0),e===dr)a=a||n,s=s||i,o=o||r,n===u&&a===f||(t.blendEquationSeparate(N[n],N[a]),u=n,f=a),i===d&&r===p&&s===m&&o===g||(t.blendFuncSeparate(I[i],I[r],I[s],I[o]),d=i,p=r,m=s,g=o),h=e,A=null;else if(e!==h||l!==A){if(u===pr&&f===pr||(t.blendEquation(t.FUNC_ADD),u=pr,f=pr),l)switch(e){case lr:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case cr:t.blendFunc(t.ONE,t.ONE);break;case hr:t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA);break;case ur:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case lr:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case cr:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case hr:t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR);break;case ur:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}d=null,p=null,m=null,g=null,h=e,A=l}}else c&&(B(t.BLEND),c=!1)}function U(e){v!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),v=e)}function z(e){e!==Ji?(F(t.CULL_FACE),e!==_&&(e===Ki?t.cullFace(t.BACK):e===$i?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):B(t.CULL_FACE),_=e}function k(e,n,i){e?(F(t.POLYGON_OFFSET_FILL),w===n&&y===i||(t.polygonOffset(n,i),w=n,y=i)):B(t.POLYGON_OFFSET_FILL)}function G(e){void 0===e&&(e=t.TEXTURE0+M-1),T!==e&&(t.activeTexture(e),T=e)}return{buffers:{color:r,depth:a,stencil:s},enable:F,disable:B,useProgram:function(e){return l!==e&&(t.useProgram(e),l=e,!0)},setBlending:O,setMaterial:function(e,n){e.side===ar?B(t.CULL_FACE):F(t.CULL_FACE);let i=e.side===rr;n&&(i=!i),U(i),e.blending===lr&&!1===e.transparent?O(or):O(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);const o=e.stencilWrite;s.setTest(o),o&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),k(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:U,setCullFace:z,setLineWidth:function(e){e!==x&&(b&&t.lineWidth(e),x=e)},setPolygonOffset:k,setScissorTest:function(e){e?F(t.SCISSOR_TEST):B(t.SCISSOR_TEST)},activeTexture:G,bindTexture:function(e,n){null===T&&G();let i=P[T];void 0===i&&(i={type:void 0,texture:void 0},P[T]=i),i.type===e&&i.texture===n||(t.bindTexture(e,n||R[e]),i.type=e,i.texture=n)},unbindTexture:function(){const e=P[T];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===D.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),D.copy(e))},viewport:function(e){!1===C.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),C.copy(e))},reset:function(){o={},T=null,P={},l=null,h=null,v=null,_=null,r.reset(),a.reset(),s.reset()}}}function bn(t,e,n,i,r,a,s){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return f?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?Xn.floorPowerOfTwo:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===p&&(p=m(a,s));const o=n?m(a,s):p;o.width=a,o.height=s;return o.getContext("2d").drawImage(t,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+s+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function A(t){return Xn.isPowerOfTwo(t.width)&&Xn.isPowerOfTwo(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==na&&t.minFilter!==aa}function _(e,n,r,a){t.generateMipmap(e);i.get(n).__maxMipLevel=Math.log(Math.max(r,a))*Math.LOG2E}function x(n,i,r){if(!1===o)return i;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=i;return i===t.RED&&(r===t.FLOAT&&(a=t.R32F),r===t.HALF_FLOAT&&(a=t.R16F),r===t.UNSIGNED_BYTE&&(a=t.R8)),i===t.RGB&&(r===t.FLOAT&&(a=t.RGB32F),r===t.HALF_FLOAT&&(a=t.RGB16F),r===t.UNSIGNED_BYTE&&(a=t.RGB8)),i===t.RGBA&&(r===t.FLOAT&&(a=t.RGBA32F),r===t.HALF_FLOAT&&(a=t.RGBA16F),r===t.UNSIGNED_BYTE&&(a=t.RGBA8)),a!==t.R16F&&a!==t.R32F&&a!==t.RGBA16F&&a!==t.RGBA32F||e.get("EXT_color_buffer_float"),a}function w(e){return e===na||e===ia||e===ra?t.NEAREST:t.LINEAR}function y(e){const n=e.target;n.removeEventListener("dispose",y),function(e){const n=i.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),i.remove(e)}(n),n.isVideoTexture&&d.delete(n),s.memory.textures--}function M(e){const n=e.target;n.removeEventListener("dispose",M),function(e){const n=i.get(e),r=i.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);i.remove(e.texture),i.remove(e)}(n),s.memory.textures--}let b=0;function S(e,r){const a=i.get(e);if(e.isVideoTexture&&function(t){const e=s.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}(e),e.version>0&&a.__version!==e.version){const t=e.image;if(void 0===t)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==t.complete)return void R(a,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D,a.__webglTexture)}function E(e,r){if(6!==e.image.length)return;const s=i.get(e);if(e.version>0&&s.__version!==e.version){L(s,e),n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);const i=e&&(e.isCompressedTexture||e.image[0].isCompressedTexture),l=e.image[0]&&e.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=i||l?l?e.image[t].image:e.image[t]:g(e.image[t],!1,!0,c);const u=h[0],d=A(u)||o,p=a.convert(e.format),f=a.convert(e.type),m=x(e.internalFormat,p,f);let w;if(C(t.TEXTURE_CUBE_MAP,e,d),i){for(let i=0;i<6;i++){w=h[i].mipmaps;for(let r=0;r<w.length;r++){const a=w[r];e.format!==ya&&e.format!==wa?null!==p?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,m,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,m,a.width,a.height,0,p,f,a.data)}}s.__maxMipLevel=w.length-1}else{w=e.mipmaps;for(let e=0;e<6;e++)if(l){n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,m,h[e].width,h[e].height,0,p,f,h[e].data);for(let i=0;i<w.length;i++){const r=w[i].image[e].image;n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,m,r.width,r.height,0,p,f,r.data)}}else{n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,m,p,f,h[e]);for(let i=0;i<w.length;i++){const r=w[i];n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,m,p,f,r.image[e])}}s.__maxMipLevel=w.length}v(e,d)&&_(t.TEXTURE_CUBE_MAP,e,u.width,u.height),s.__version=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,s.__webglTexture)}function T(e,r){n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,i.get(e).__webglTexture)}const P={[$r]:t.REPEAT,[ta]:t.CLAMP_TO_EDGE,[ea]:t.MIRRORED_REPEAT},D={[na]:t.NEAREST,[ia]:t.NEAREST_MIPMAP_NEAREST,[ra]:t.NEAREST_MIPMAP_LINEAR,[aa]:t.LINEAR,[sa]:t.LINEAR_MIPMAP_NEAREST,[oa]:t.LINEAR_MIPMAP_LINEAR};function C(n,a,s){s?(t.texParameteri(n,t.TEXTURE_WRAP_S,P[a.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,P[a.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,P[a.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,D[a.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,D[a.minFilter])):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),a.wrapS===ta&&a.wrapT===ta||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,t.TEXTURE_MAG_FILTER,w(a.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,w(a.minFilter)),a.minFilter!==na&&a.minFilter!==aa&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=e.get("EXT_texture_filter_anisotropic");if(l){if(a.type===fa&&null===e.get("OES_texture_float_linear"))return;if(a.type===ma&&null===(o||e.get("OES_texture_half_float_linear")))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(t.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function L(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",y),e.__webglTexture=t.createTexture(),s.memory.textures++)}function R(e,i,r){let s=t.TEXTURE_2D;i.isDataTexture2DArray&&(s=t.TEXTURE_2D_ARRAY),i.isDataTexture3D&&(s=t.TEXTURE_3D),L(e,i),n.activeTexture(t.TEXTURE0+r),n.bindTexture(s,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment);const l=function(t){return!o&&(t.wrapS!==ta||t.wrapT!==ta||t.minFilter!==na&&t.minFilter!==aa)}(i)&&!1===A(i.image),c=g(i.image,l,!1,h),u=A(c)||o,d=a.convert(i.format);let p,f=a.convert(i.type),m=x(i.internalFormat,d,f);C(s,i,u);const w=i.mipmaps;if(i.isDepthTexture)m=t.DEPTH_COMPONENT,o?m=i.type===fa?t.DEPTH_COMPONENT32F:i.type===pa?t.DEPTH_COMPONENT24:i.type===_a?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT16:i.type===fa&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===Sa&&m===t.DEPTH_COMPONENT&&i.type!==ua&&i.type!==pa&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=ua,f=a.convert(i.type)),i.format===Ea&&m===t.DEPTH_COMPONENT&&(m=t.DEPTH_STENCIL,i.type!==_a&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=_a,f=a.convert(i.type))),n.texImage2D(t.TEXTURE_2D,0,m,c.width,c.height,0,d,f,null);else if(i.isDataTexture)if(w.length>0&&u){for(let e=0,i=w.length;e<i;e++)p=w[e],n.texImage2D(t.TEXTURE_2D,e,m,p.width,p.height,0,d,f,p.data);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(t.TEXTURE_2D,0,m,c.width,c.height,0,d,f,c.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(let e=0,r=w.length;e<r;e++)p=w[e],i.format!==ya&&i.format!==wa?null!==d?n.compressedTexImage2D(t.TEXTURE_2D,e,m,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(t.TEXTURE_2D,e,m,p.width,p.height,0,d,f,p.data);e.__maxMipLevel=w.length-1}else if(i.isDataTexture2DArray)n.texImage3D(t.TEXTURE_2D_ARRAY,0,m,c.width,c.height,c.depth,0,d,f,c.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(t.TEXTURE_3D,0,m,c.width,c.height,c.depth,0,d,f,c.data),e.__maxMipLevel=0;else if(w.length>0&&u){for(let e=0,i=w.length;e<i;e++)p=w[e],n.texImage2D(t.TEXTURE_2D,e,m,d,f,p);i.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(t.TEXTURE_2D,0,m,d,f,c),e.__maxMipLevel=0;v(i,u)&&_(s,i,c.width,c.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function F(e,r,s,o){const l=a.convert(r.texture.format),c=a.convert(r.texture.type),h=x(r.texture.internalFormat,l,c);n.texImage2D(o,0,h,r.width,r.height,0,l,c,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,s,o,i.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function B(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){let r=t.DEPTH_COMPONENT16;if(i){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===fa?r=t.DEPTH_COMPONENT32F:e.type===pa&&(r=t.DEPTH_COMPONENT24));const i=I(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,i,r,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,r,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){if(i){const e=I(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,e,t.DEPTH24_STENCIL8,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{const e=a.convert(n.texture.format),r=a.convert(n.texture.type),s=x(n.texture.internalFormat,e,r);if(i){const e=I(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,e,s,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,s,n.width,n.height)}t.bindRenderbuffer(t.RENDERBUFFER,null)}function N(e){const n=i.get(e),r=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),S(n.depthTexture,0);const r=i.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Sa)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(n.depthTexture.format!==Ea)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(n.__webglFramebuffer,e)}else if(r){n.__webglDepthbuffer=[];for(let i=0;i<6;i++)t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer[i]),n.__webglDepthbuffer[i]=t.createRenderbuffer(),B(n.__webglDepthbuffer[i],e,!1)}else t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),B(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(t.FRAMEBUFFER,null)}function I(t){return o&&t.isWebGLMultisampleRenderTarget?Math.min(u,t.samples):0}let O=!1,U=!1;this.allocateTextureUnit=function(){const t=b;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),b+=1,t},this.resetTextureUnits=function(){b=0},this.setTexture2D=S,this.setTexture2DArray=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?R(a,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D_ARRAY,a.__webglTexture))},this.setTexture3D=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?R(a,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_3D,a.__webglTexture))},this.setTextureCube=E,this.setTextureCubeDynamic=T,this.setupRenderTarget=function(e){const r=i.get(e),l=i.get(e.texture);e.addEventListener("dispose",M),l.__webglTexture=t.createTexture(),s.memory.textures++;const c=!0===e.isWebGLCubeRenderTarget,h=!0===e.isWebGLMultisampleRenderTarget,u=A(e)||o;if(!o||e.texture.format!==wa||e.texture.type!==fa&&e.texture.type!==ma||(e.texture.format=ya,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=t.createFramebuffer()}else if(r.__webglFramebuffer=t.createFramebuffer(),h)if(o){r.__webglMultisampledFramebuffer=t.createFramebuffer(),r.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,r.__webglColorRenderbuffer);const n=a.convert(e.texture.format),i=a.convert(e.texture.type),s=x(e.texture.internalFormat,n,i),o=I(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,s,e.width,e.height),t.bindFramebuffer(t.FRAMEBUFFER,r.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,r.__webglColorRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(r.__webglDepthRenderbuffer=t.createRenderbuffer(),B(r.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(t.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture),C(t.TEXTURE_CUBE_MAP,e.texture,u);for(let n=0;n<6;n++)F(r.__webglFramebuffer[n],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n);v(e.texture,u)&&_(t.TEXTURE_CUBE_MAP,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else n.bindTexture(t.TEXTURE_2D,l.__webglTexture),C(t.TEXTURE_2D,e.texture,u),F(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),v(e.texture,u)&&_(t.TEXTURE_2D,e.texture,e.width,e.height),n.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&N(e)},this.updateRenderTargetMipmap=function(e){const r=e.texture;if(v(r,A(e)||o)){const a=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,s=i.get(r).__webglTexture;n.bindTexture(a,s),_(a,r,e.width,e.height),n.bindTexture(a,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(o){const n=i.get(e);t.bindFramebuffer(t.READ_FRAMEBUFFER,n.__webglMultisampledFramebuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,n.__webglFramebuffer);const r=e.width,a=e.height;let s=t.COLOR_BUFFER_BIT;e.depthBuffer&&(s|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(s|=t.STENCIL_BUFFER_BIT),t.blitFramebuffer(0,0,r,a,0,0,r,a,s,t.NEAREST),t.bindFramebuffer(t.FRAMEBUFFER,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),U=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?E(t,e):T(t,e)}}function Sn(t,e,n){const i=n.isWebGL2;return{convert:function(n){let r;if(n===la)return t.UNSIGNED_BYTE;if(n===ga)return t.UNSIGNED_SHORT_4_4_4_4;if(n===Aa)return t.UNSIGNED_SHORT_5_5_5_1;if(n===va)return t.UNSIGNED_SHORT_5_6_5;if(n===ca)return t.BYTE;if(n===ha)return t.SHORT;if(n===ua)return t.UNSIGNED_SHORT;if(n===da)return t.INT;if(n===pa)return t.UNSIGNED_INT;if(n===fa)return t.FLOAT;if(n===ma)return i?t.HALF_FLOAT:(r=e.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(n===xa)return t.ALPHA;if(n===wa)return t.RGB;if(n===ya)return t.RGBA;if(n===Ma)return t.LUMINANCE;if(n===ba)return t.LUMINANCE_ALPHA;if(n===Sa)return t.DEPTH_COMPONENT;if(n===Ea)return t.DEPTH_STENCIL;if(n===Ta)return t.RED;if(n===Pa)return t.RED_INTEGER;if(n===Da)return t.RG;if(n===Ca)return t.RG_INTEGER;if(n===La)return t.RGB_INTEGER;if(n===Ra)return t.RGBA_INTEGER;if(n===Fa||n===Ba||n===Na||n===Ia){if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(n===Fa)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ba)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Na)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ia)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===Oa||n===Ua||n===za||n===ka){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(n===Oa)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Ua)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===za)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ka)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===Ga)return r=e.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((n===Ha||n===Wa)&&(r=e.get("WEBGL_compressed_texture_etc"),null!==r)){if(n===Ha)return r.COMPRESSED_RGB8_ETC2;if(n===Wa)return r.COMPRESSED_RGBA8_ETC2_EAC}return n===Va||n===ja||n===Qa||n===Xa||n===Ya||n===qa||n===Za||n===Ja||n===Ka||n===$a||n===ts||n===es||n===ns||n===is||n===as||n===ss||n===os||n===ls||n===cs||n===hs||n===us||n===ds||n===ps||n===fs||n===ms||n===gs||n===As||n===vs?(r=e.get("WEBGL_compressed_texture_astc"),null!==r?n:null):n===rs?(r=e.get("EXT_texture_compression_bptc"),null!==r?n:null):n===_a?i?t.UNSIGNED_INT_24_8:(r=e.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function En(t){Pt.call(this),this.cameras=t||[]}function Tn(){_.call(this),this.type="Group"}function Pn(){this._targetRay=null,this._grip=null,this._hand=null}function Dn(t,e){const n=this;let i=null,r=1,a=null,s="local-floor",o=null;const l=[],c=new Map,h=new Pt;h.layers.enable(1),h.viewport=new Zi;const u=new Pt;u.layers.enable(2),u.viewport=new Zi;const d=[h,u],p=new En;p.layers.enable(1),p.layers.enable(2);let f=null,m=null;function g(t){const e=c.get(t.inputSource);e&&e.dispatchEvent({type:t.type})}function A(){c.forEach((function(t,e){t.disconnect(e)})),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),b.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function v(t){a=t,b.setContext(i),b.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function _(t){const e=i.inputSources;for(let t=0;t<l.length;t++)c.set(e[t],l[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=c.get(n);i&&(i.dispatchEvent({type:"disconnected",data:n}),c.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],i=c.get(n);i&&i.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=l[t];return void 0===e&&(e=new Pn,l[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=l[t];return void 0===e&&(e=new Pn,l[t]=e),e.getGripSpace()},this.getHand=function(t){let e=l[t];return void 0===e&&(e=new Pn,l[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getSession=function(){return i},this.setSession=function(t){if(i=t,null!==i){i.addEventListener("select",g),i.addEventListener("selectstart",g),i.addEventListener("selectend",g),i.addEventListener("squeeze",g),i.addEventListener("squeezestart",g),i.addEventListener("squeezeend",g),i.addEventListener("end",A);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:r},a=new XRWebGLLayer(i,e,n);i.updateRenderState({baseLayer:a}),i.requestReferenceSpace(s).then(v),i.addEventListener("inputsourceschange",_)}};const x=new $n,w=new $n;function y(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}this.getCamera=function(t){p.near=u.near=h.near=t.near,p.far=u.far=h.far=t.far,f===p.near&&m===p.far||(i.updateRenderState({depthNear:p.near,depthFar:p.far}),f=p.near,m=p.far);const e=t.parent,n=p.cameras;y(p,e);for(let t=0;t<n.length;t++)y(n[t],e);t.matrixWorld.copy(p.matrixWorld);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){x.setFromMatrixPosition(e.matrixWorld),w.setFromMatrixPosition(n.matrixWorld);const i=x.distanceTo(w),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);const g=s+f,A=o+f,v=d-m,_=p+(i-m),y=l*o/A*g,M=c*o/A*g;t.projectionMatrix.makePerspective(v,_,y,M,g,A)}(p,h,u):p.projectionMatrix.copy(h.projectionMatrix),p};let M=null;const b=new It;b.setAnimationLoop((function(e,n){if(o=n.getViewerPose(a),null!==o){const e=o.views,n=i.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let r=!1;e.length!==p.cameras.length&&(p.cameras.length=0,r=!0);for(let t=0;t<e.length;t++){const i=e[t],a=n.getViewport(i),s=d[t];s.matrix.fromArray(i.transform.matrix),s.projectionMatrix.fromArray(i.projectionMatrix),s.viewport.set(a.x,a.y,a.width,a.height),0===t&&p.matrix.copy(s.matrix),!0===r&&p.cameras.push(s)}}const r=i.inputSources;for(let t=0;t<l.length;t++){const e=l[t],i=r[t];e.update(i,n,a)}M&&M(e,n)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}function Cn(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const i=t.get(n).envMap;if(i){e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const r=t.get(i).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,a;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?r=n.map:n.specularMap?r=n.specularMap:n.displacementMap?r=n.displacementMap:n.normalMap?r=n.normalMap:n.bumpMap?r=n.bumpMap:n.roughnessMap?r=n.roughnessMap:n.metalnessMap?r=n.metalnessMap:n.alphaMap?r=n.alphaMap:n.emissiveMap?r=n.emissiveMap:n.clearcoatMap?r=n.clearcoatMap:n.clearcoatNormalMap?r=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(r=n.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,n.side===rr&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),n.side===rr&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias);t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,i,r,a){i.isMeshBasicMaterial?e(t,i):i.isMeshLambertMaterial?(e(t,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,i)):i.isMeshToonMaterial?(e(t,i),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===rr&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===rr&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshPhongMaterial?(e(t,i),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===rr&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===rr&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshStandardMaterial?(e(t,i),i.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap);e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===rr&&t.clearcoatNormalScale.value.negate());t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,i):n(t,i)):i.isMeshMatcapMaterial?(e(t,i),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===rr&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===rr&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDepthMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isMeshDistanceMaterial?(e(t,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,i)):i.isMeshNormalMaterial?(e(t,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===rr&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===rr&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,i)):i.isPointsMaterial?function(t,e,n,i){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*i,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,i,r,a):i.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);let n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,i):i.isShadowMaterial?(t.color.value.copy(i.color),t.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Ln(t){const e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==t.context?t.context:null,i=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,o=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let u=null,d=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=_s,this.physicallyCorrectLights=!1,this.toneMapping=kr,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let f=!1,m=null,g=0,A=0,v=null,_=null,x=-1,w=null,y=null;const M=new Zi,b=new Zi;let S=null,E=e.width,T=e.height,P=1,D=null,C=null;const L=new Zi(0,0,E,T),R=new Zi(0,0,E,T);let F=!1;const B=new eu;let N=!1,I=!1;const O=new xi,U=new $n,z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function k(){return null===v?P:1}let G,H,W,V,j,Q,X,Y,q,Z,J,K,$,tt,et,nt,it,rt,at,st,ot,lt=n;function ct(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",pt,!1),e.addEventListener("webglcontextrestored",ft,!1),null===lt){const e=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&e.shift(),lt=ct(e,t),null===lt)throw ct(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===lt.getShaderPrecisionFormat&&(lt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ht(){G=new Zt(lt),H=new Vt(lt,G,t),!1===H.isWebGL2&&(G.get("WEBGL_depth_texture"),G.get("OES_texture_float"),G.get("OES_texture_half_float"),G.get("OES_texture_half_float_linear"),G.get("OES_standard_derivatives"),G.get("OES_element_index_uint"),G.get("OES_vertex_array_object"),G.get("ANGLE_instanced_arrays")),G.get("OES_texture_float_linear"),st=new Sn(lt,G,H),W=new Mn(lt,G,H),W.scissor(b.copy(R).multiplyScalar(P).floor()),W.viewport(M.copy(L).multiplyScalar(P).floor()),V=new $t(lt),j=new hn,Q=new bn(lt,G,W,j,H,st,V),X=new qt(p),Y=new Ot(lt,H),ot=new Ht(lt,G,Y,H),q=new Jt(lt,Y,V,ot),Z=new ie(lt,q,Y,V),it=new ne(lt),et=new jt(j),J=new cn(p,X,G,H,ot,et),K=new Cn(j),$=new fn(j),tt=new _n,nt=new Gt(p,X,W,Z,o),rt=new Wt(lt,G,V,H),at=new Kt(lt,G,V,H),V.programs=J.programs,p.capabilities=H,p.extensions=G,p.properties=j,p.renderLists=$,p.state=W,p.info=V}ht();const ut=new Dn(p,lt);this.xr=ut;const dt=new yn(p,Z,H.maxTextureSize);function pt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function ft(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1,ht()}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),function(t){gt(t),j.remove(t)}(e)}function gt(t){const e=j.get(t).program;void 0!==e&&J.releaseProgram(e)}this.shadowMap=dt,this.getContext=function(){return lt},this.getContextAttributes=function(){return lt.getContextAttributes()},this.forceContextLoss=function(){const t=G.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=G.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(t){void 0!==t&&(P=t,this.setSize(E,T,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Pi),t.set(E,T)},this.setSize=function(t,n,i){ut.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=t,T=n,e.width=Math.floor(t*P),e.height=Math.floor(n*P),!1!==i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Pi),t.set(E*P,T*P).floor()},this.setDrawingBufferSize=function(t,n,i){E=t,T=n,P=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new Zi),t.copy(M)},this.getViewport=function(t){return t.copy(L)},this.setViewport=function(t,e,n,i){t.isVector4?L.set(t.x,t.y,t.z,t.w):L.set(t,e,n,i),W.viewport(M.copy(L).multiplyScalar(P).floor())},this.getScissor=function(t){return t.copy(R)},this.setScissor=function(t,e,n,i){t.isVector4?R.set(t.x,t.y,t.z,t.w):R.set(t,e,n,i),W.scissor(b.copy(R).multiplyScalar(P).floor())},this.getScissorTest=function(){return F},this.setScissorTest=function(t){W.setScissorTest(F=t)},this.setOpaqueSort=function(t){D=t},this.setTransparentSort=function(t){C=t},this.getClearColor=function(){return nt.getClearColor()},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let i=0;(void 0===t||t)&&(i|=lt.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=lt.DEPTH_BUFFER_BIT),(void 0===n||n)&&(i|=lt.STENCIL_BUFFER_BIT),lt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",pt,!1),e.removeEventListener("webglcontextrestored",ft,!1),$.dispose(),tt.dispose(),j.dispose(),X.dispose(),Z.dispose(),ot.dispose(),ut.dispose(),vt.stop()},this.renderBufferImmediate=function(t,e){ot.initAttributes();const n=j.get(t);t.hasPositions&&!n.position&&(n.position=lt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=lt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=lt.createBuffer()),t.hasColors&&!n.color&&(n.color=lt.createBuffer());const i=e.getAttributes();t.hasPositions&&(lt.bindBuffer(lt.ARRAY_BUFFER,n.position),lt.bufferData(lt.ARRAY_BUFFER,t.positionArray,lt.DYNAMIC_DRAW),ot.enableAttribute(i.position),lt.vertexAttribPointer(i.position,3,lt.FLOAT,!1,0,0)),t.hasNormals&&(lt.bindBuffer(lt.ARRAY_BUFFER,n.normal),lt.bufferData(lt.ARRAY_BUFFER,t.normalArray,lt.DYNAMIC_DRAW),ot.enableAttribute(i.normal),lt.vertexAttribPointer(i.normal,3,lt.FLOAT,!1,0,0)),t.hasUvs&&(lt.bindBuffer(lt.ARRAY_BUFFER,n.uv),lt.bufferData(lt.ARRAY_BUFFER,t.uvArray,lt.DYNAMIC_DRAW),ot.enableAttribute(i.uv),lt.vertexAttribPointer(i.uv,2,lt.FLOAT,!1,0,0)),t.hasColors&&(lt.bindBuffer(lt.ARRAY_BUFFER,n.color),lt.bufferData(lt.ARRAY_BUFFER,t.colorArray,lt.DYNAMIC_DRAW),ot.enableAttribute(i.color),lt.vertexAttribPointer(i.color,3,lt.FLOAT,!1,0,0)),ot.disableUnusedAttributes(),lt.drawArrays(lt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=z);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=Mt(t,e,i,r);W.setMaterial(i,s);let l=n.index;const c=n.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===i.wireframe&&(l=q.getWireframeAttribute(n),u=2),(i.morphTargets||i.morphNormals)&&it.update(r,n,i,o),ot.setup(r,i,o,n,l);let d=rt;null!==l&&(h=Y.get(l),d=at,d.setIndex(h));const p=null!==l?l.count:c.count,f=n.drawRange.start*u,m=n.drawRange.count*u,g=null!==a?a.start*u:0,A=null!==a?a.count*u:1/0,v=Math.max(f,g),_=Math.min(p,f+m,g+A)-1,x=Math.max(0,_-v+1);if(0!==x){if(r.isMesh)!0===i.wireframe?(W.setLineWidth(i.wireframeLinewidth*k()),d.setMode(lt.LINES)):d.setMode(lt.TRIANGLES);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),W.setLineWidth(t*k()),r.isLineSegments?d.setMode(lt.LINES):r.isLineLoop?d.setMode(lt.LINE_LOOP):d.setMode(lt.LINE_STRIP)}else r.isPoints?d.setMode(lt.POINTS):r.isSprite&&d.setMode(lt.TRIANGLES);if(r.isInstancedMesh)d.renderInstances(v,x,r.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);d.renderInstances(v,x,t)}else d.render(v,x)}},this.compile=function(t,e){d=tt.get(t,e),d.init(),t.traverse((function(t){t.isLight&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(e);const n=new WeakMap;t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){const a=i[r];!1===n.has(a)&&(yt(a,t,e),n.set(a))}else!1===n.has(i)&&(yt(i,t,e),n.set(i))}))};let At=null;const vt=new It;function _t(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||B.intersectsSprite(t)){i&&U.setFromMatrixPosition(t.matrixWorld).applyMatrix4(O);const e=Z.update(t),r=t.material;r.visible&&u.push(t,e,r,n,U.z,null)}}else if(t.isImmediateRenderObject)i&&U.setFromMatrixPosition(t.matrixWorld).applyMatrix4(O),u.push(t,null,t.material,n,U.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==V.render.frame&&(t.skeleton.update(),t.skeleton.frame=V.render.frame),!t.frustumCulled||B.intersectsObject(t))){i&&U.setFromMatrixPosition(t.matrixWorld).applyMatrix4(O);const e=Z.update(t),r=t.material;if(Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&u.push(t,e,o,n,U.z,s)}}else r.visible&&u.push(t,e,r,n,U.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)_t(r[t],e,n,i)}function xt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,l=null===i?a.material:i,c=a.group;if(n.isArrayCamera){y=n;const t=n.cameras;for(let n=0,i=t.length;n<i;n++){const i=t[n];s.layers.test(i.layers)&&(W.viewport(M.copy(i.viewport)),d.setupLights(i),wt(s,e,i,o,l,c))}}else y=null,wt(s,e,n,o,l,c)}}function wt(t,e,n,i,r,a){if(t.onBeforeRender(p,e,n,i,r,a),d=tt.get(e,y||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const i=Mt(n,e,r,t);W.setMaterial(r),ot.reset(),function(t,e){t.render((function(t){p.renderBufferImmediate(t,e)}))}(t,i)}else p.renderBufferDirect(n,e,i,r,t,a);t.onAfterRender(p,e,n,i,r,a),d=tt.get(e,y||n)}function yt(t,e,n){!0!==e.isScene&&(e=z);const i=j.get(t),r=d.state.lights,a=d.state.shadowsArray,s=r.state.version,o=J.getParameters(t,r.state,a,e,n),l=J.getProgramCacheKey(o);let c=i.program,h=!0;if(void 0===c)t.addEventListener("dispose",mt);else if(c.cacheKey!==l)gt(t);else if(i.lightsStateVersion!==s)h=!1;else{if(void 0!==o.shaderID){const n=t.isMeshStandardMaterial?e.environment:null;return void(i.envMap=X.get(t.envMap||n))}h=!1}h&&(o.uniforms=J.getUniforms(t),t.onBeforeCompile(o,p),c=J.acquireProgram(o,l),i.program=c,i.uniforms=o.uniforms,i.outputEncoding=o.outputEncoding);const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=et.numPlanes,i.numIntersection=et.numIntersection,u.clippingPlanes=et.uniform),i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=X.get(t.envMap||i.environment),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const f=i.program.getUniforms(),m=je.seqWithValue(f.seq,u);i.uniformsList=m}function Mt(t,e,n,i){!0!==e.isScene&&(e=z),Q.resetTextureUnits();const r=e.fog,a=n.isMeshStandardMaterial?e.environment:null,s=null===v?p.outputEncoding:v.texture.encoding,o=X.get(n.envMap||a),l=j.get(n),c=d.state.lights;if(!0===N&&(!0===I||t!==w)){const e=t===w&&n.id===x;et.setState(n,t,e)}n.version===l.__version?n.fog&&l.fog!==r||l.environment!==a||l.needsLights&&l.lightsStateVersion!==c.state.version?yt(n,e,i):void 0===l.numClippingPlanes||l.numClippingPlanes===et.numPlanes&&l.numIntersection===et.numIntersection?(l.outputEncoding!==s||l.envMap!==o)&&yt(n,e,i):yt(n,e,i):(yt(n,e,i),l.__version=n.version);let h=!1,u=!1,f=!1;const m=l.program,g=m.getUniforms(),A=l.uniforms;if(W.useProgram(m.program)&&(h=!0,u=!0,f=!0),n.id!==x&&(x=n.id,u=!0),h||w!==t){if(g.setValue(lt,"projectionMatrix",t.projectionMatrix),H.logarithmicDepthBuffer&&g.setValue(lt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),w!==t&&(w=t,u=!0,f=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=g.map.cameraPosition;void 0!==e&&e.setValue(lt,U.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(lt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(lt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){g.setOptional(lt,i,"bindMatrix"),g.setOptional(lt,i,"bindMatrixInverse");const t=i.skeleton;if(t){const e=t.bones;if(H.floatVertexTextures){if(void 0===t.boneTexture){let n=Math.sqrt(4*e.length);n=Xn.ceilPowerOfTwo(n),n=Math.max(n,4);const i=new Float32Array(n*n*4);i.set(t.boneMatrices);const r=new Nt(i,n,n,ya,fa);t.boneMatrices=i,t.boneTexture=r,t.boneTextureSize=n}g.setValue(lt,"boneTexture",t.boneTexture,Q),g.setValue(lt,"boneTextureSize",t.boneTextureSize)}else g.setOptional(lt,t,"boneMatrices")}}return(u||l.receiveShadow!==i.receiveShadow)&&(l.receiveShadow=i.receiveShadow,g.setValue(lt,"receiveShadow",i.receiveShadow)),u&&(g.setValue(lt,"toneMappingExposure",p.toneMappingExposure),l.needsLights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.lightProbe.needsUpdate=e,t.directionalLights.needsUpdate=e,t.directionalLightShadows.needsUpdate=e,t.pointLights.needsUpdate=e,t.pointLightShadows.needsUpdate=e,t.spotLights.needsUpdate=e,t.spotLightShadows.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(A,f),r&&n.fog&&K.refreshFogUniforms(A,r),K.refreshMaterialUniforms(A,n,P,T),je.upload(lt,l.uniformsList,A,Q)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(je.upload(lt,l.uniformsList,A,Q),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(lt,"center",i.center),g.setValue(lt,"modelViewMatrix",i.modelViewMatrix),g.setValue(lt,"normalMatrix",i.normalMatrix),g.setValue(lt,"modelMatrix",i.matrixWorld),m}vt.setAnimationLoop((function(t){ut.isPresenting||At&&At(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){At=t,ut.setAnimationLoop(t),null===t?vt.stop():vt.start()},this.render=function(t,e){let n,i;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===f)return;ot.resetDefaultState(),x=-1,w=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ut.enabled&&!0===ut.isPresenting&&(e=ut.getCamera(e)),!0===t.isScene&&t.onBeforeRender(p,t,e,n||v),d=tt.get(t,e),d.init(),O.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),B.setFromProjectionMatrix(O),I=this.localClippingEnabled,N=et.init(this.clippingPlanes,I,e),u=$.get(t,e),u.init(),_t(t,e,0,p.sortObjects),u.finish(),!0===p.sortObjects&&u.sort(D,C),!0===N&&et.beginShadows();const r=d.state.shadowsArray;dt.render(r,t,e),d.setupLights(e),!0===N&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(u,t,e,i);const a=u.opaque,s=u.transparent;a.length>0&&xt(a,t,e),s.length>0&&xt(s,t,e),!0===t.isScene&&t.onAfterRender(p,t,e),null!==v&&(Q.updateRenderTargetMipmap(v),Q.updateMultisampleRenderTarget(v)),W.buffers.depth.setTest(!0),W.buffers.depth.setMask(!0),W.buffers.color.setMask(!0),W.setPolygonOffset(!1),u=null,d=null},this.setFramebuffer=function(t){m!==t&&null===v&&lt.bindFramebuffer(lt.FRAMEBUFFER,t),m=t},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return A},this.getRenderList=function(){return u},this.setRenderList=function(t){u=t},this.getRenderState=function(){return d},this.setRenderState=function(t){d=t},this.getRenderTarget=function(){return v},this.setRenderTarget=function(t,e=0,n=0){v=t,g=e,A=n,t&&void 0===j.get(t).__webglFramebuffer&&Q.setupRenderTarget(t);let i=m,r=!1;if(t){const n=j.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(i=n[e],r=!0):i=t.isWebGLMultisampleRenderTarget?j.get(t).__webglMultisampledFramebuffer:n,M.copy(t.viewport),b.copy(t.scissor),S=t.scissorTest}else M.copy(L).multiplyScalar(P).floor(),b.copy(R).multiplyScalar(P).floor(),S=F;if(_!==i&&(lt.bindFramebuffer(lt.FRAMEBUFFER,i),_=i),W.viewport(M),W.scissor(b),W.setScissorTest(S),r){const i=j.get(t.texture);lt.framebufferTexture2D(lt.FRAMEBUFFER,lt.COLOR_ATTACHMENT0,lt.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=j.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){let s=!1;o!==_&&(lt.bindFramebuffer(lt.FRAMEBUFFER,o),s=!0);try{const o=t.texture,l=o.format,c=o.type;if(l!==ya&&st.convert(l)!==lt.getParameter(lt.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(c===la||st.convert(c)===lt.getParameter(lt.IMPLEMENTATION_COLOR_READ_TYPE)||c===fa&&(H.isWebGL2||G.get("OES_texture_float")||G.get("WEBGL_color_buffer_float"))||c===ma&&(H.isWebGL2?G.get("EXT_color_buffer_float"):G.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");lt.checkFramebufferStatus(lt.FRAMEBUFFER)===lt.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&lt.readPixels(e,n,i,r,st.convert(l),st.convert(c),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&lt.bindFramebuffer(lt.FRAMEBUFFER,_)}}},this.copyFramebufferToTexture=function(t,e,n){void 0===n&&(n=0);const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i),s=st.convert(e.format);Q.setTexture2D(e,0),lt.copyTexImage2D(lt.TEXTURE_2D,n,s,t.x,t.y,r,a,0),W.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i){void 0===i&&(i=0);const r=e.image.width,a=e.image.height,s=st.convert(n.format),o=st.convert(n.type);Q.setTexture2D(n,0),lt.pixelStorei(lt.UNPACK_FLIP_Y_WEBGL,n.flipY),lt.pixelStorei(lt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),lt.pixelStorei(lt.UNPACK_ALIGNMENT,n.unpackAlignment),e.isDataTexture?lt.texSubImage2D(lt.TEXTURE_2D,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?lt.compressedTexSubImage2D(lt.TEXTURE_2D,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):lt.texSubImage2D(lt.TEXTURE_2D,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&lt.generateMipmap(lt.TEXTURE_2D),W.unbindTexture()},this.initTexture=function(t){Q.setTexture2D(t,0),W.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}En.prototype=Object.assign(Object.create(Pt.prototype),{constructor:En,isArrayCamera:!0}),Tn.prototype=Object.assign(Object.create(_.prototype),{constructor:Tn,isGroup:!0}),Object.assign(Pn.prototype,{constructor:Pn,getHandSpace:function(){if(null===this._hand&&(this._hand=new Tn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const t=new Tn;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Tn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Tn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t)if(l&&t.hand){a=!0;for(let i=0;i<=window.XRHand.LITTLE_PHALANX_TIP;i++)if(t.hand[i]){const r=e.getJointPose(t.hand[i],n),a=l.joints[i];null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.jointRadius=r.radius),a.visible=null!==r;const s=l.joints[window.XRHand.INDEX_PHALANX_TIP],o=l.joints[window.XRHand.THUMB_PHALANX_TIP],c=s.position.distanceTo(o.position),h=.02,u=.005;l.inputState.pinching&&c>h+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&c<=h-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else null!==s&&(i=e.getPose(t.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}),Object.assign(Dn.prototype,f.prototype);class Mu extends _{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}class bu extends Event{constructor(){super("tick"),this.t=0,this.dt=0,this.sdt=0,Object.seal(this)}copy(t){this.t=t.t,this.dt=t.dt,this.sdt=t.sdt}}class Su extends zo{constructor(t){super(),this._timer=null,this.targetFrameRate=t,this._onTick=t=>{const e=new bu;let n=t;this._onTick=t=>{t>n&&(e.t=t,e.dt=t-n,e.sdt=e.dt,n=t,this._onTick=t=>{const i=t-n;var r,a,s;i>0&&i>=this._frameTime&&(e.t=t,e.dt=i,e.sdt=(r=e.sdt,a=e.dt,(1-(s=.01))*r+s*a),n=t,this.dispatchEvent(e))})}}}restart(){this.stop(),this.start()}get isRunning(){return null!==this._timer}start(){throw new Error("Not implemented in base class")}stop(){this._timer=null}get targetFrameRate(){return this._targetFPS}set targetFrameRate(t){this._targetFPS=t,this._frameTime=1e3/t}}const Eu=new WeakMap;class Tu extends Su{constructor(t){super(120),Eu.set(this,t)}start(){const t=Eu.get(this);this._timer=t.setAnimationLoop(t=>{this._onTick(t)})}stop(){if(this.isRunning){Eu.get(this).setAnimationLoop(null),super.stop()}}}function Rn(t,e,n,i,r){const a=t.elements;e.set(a[0],a[1],a[2]),n.set(a[4],a[5],a[6]),i.set(-a[8],-a[9],-a[10]),r.set(a[12],a[13],a[14]),e.normalize(),n.normalize(),i.normalize()}const Pu=new $n,Du=new $n,Cu=new $n,Lu=new $n;class Ru extends _{constructor(t,e=null){super(),this.audio=t,this.name=e||"local-user",this.audio.addEventListener("audioready",()=>{this.audio.createLocalUser(this.name)})}updateMatrixWorld(t=!1){const e=this.matrixWorldNeedsUpdate||t;super.updateMatrixWorld(t),e&&(Rn(this.matrixWorld,Pu,Du,Cu,Lu),this.audio.setUserPose(this.name,Lu.x,Lu.y,Lu.z,Cu.x,Cu.y,Cu.z,Du.x,Du.y,Du.z,0))}}class Fu extends Event{constructor(t,e){super("sessionstarted"),this.session=t,this.sessionType=e,Object.freeze(this)}}const Bu=Object.seal(new Event("sessionended"));class Nu extends zo{constructor(t,e,n){if(super(),"xr"in navigator){this.element=Q(function(t){return new ko("id",t)}("VRButton"),function(t){return new Go("display",t)}("none"));const r=(n,r,a,s)=>{let o=null;const l=i=>{i.addEventListener("end",c),t.xr.setReferenceSpaceType(a),t.xr.setSession(i),this.element.textContent=("EXIT "+n).trim(),o=i,"inline"===r&&(e.fov=180*evt.session.renderState.inlineVerticalFieldOfView/Math.PI),this.dispatchEvent(new Fu(i,r))},c=()=>{o.removeEventListener("end",c),o=null,t.xr.setSession(null),this.element.textContent=("ENTER "+n).trim(),this.dispatchEvent(Bu),"inline"===r&&(e.fov=50),i()};this.element.style.display="",this.element.style.cursor="pointer",this.element.style.left="calc(50% - 50px)",this.element.style.width="100px",this.element.textContent=("ENTER "+n).trim(),this.toggle=async()=>{if(null===o)if("FULLSCREEN"===n)await t.domElement.requestFullscreen({navigationUI:"show"});else{const t=await navigator.xr.requestSession(r,s);l(t)}else"FULLSCREEN"===n?await document.exitFullscreen():o.end()},this.element.addEventListener("click",this.toggle)},a=()=>{this.element.style.opacity="1.0"},s=()=>{this.element.style.opacity="0.5"};this.element.addEventListener("pointerenter",a),this.element.addEventListener("pointerleave",s),(async()=>{n&&await navigator.xr.isSessionSupported("immersive-ar")?r("AR","immserive-ar","local-floor"):await navigator.xr.isSessionSupported("immersive-vr")?r("VR","immersive-vr","local",{optionalFeatures:["local","local-floor","bounded-floor","hand-tracking"]}):r("FULLSCREEN")})()}else{const t=!1===window.isSecureContext;this.element=function(...t){return j("a",...t)}(function(t){return new ko("href",t,"a","area","base","link")}(t?document.location.href.replace(/^http:/,"https:"):"https://immersiveweb.dev/"),t?"WEBXR NEEDS HTTPS":"WEBXR NOT AVAILABLE",new Go("left","calc(50% - 90px)"),function(t){return new Go("width",t)}("180px"),function(t){return new Go("textDecoration",t)}("none"))}this.element.style.position="absolute",this.element.style.bottom="20px",this.element.style.padding="12px 6px",this.element.style.border="1px solid #fff",this.element.style.borderRadius="4px",this.element.style.background="rgba(0,0,0,0.1)",this.element.style.color="#fff",this.element.style.font="normal 13px sans-serif",this.element.style.textAlign="center",this.element.style.opacity="0.5",this.element.style.outline="none",this.element.style.zIndex="999";const i=async()=>{t.xr.isPresenting||(t.setSize(window.innerWidth,window.innerHeight),e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix())};window.addEventListener("resize",i),i()}get isFullscreen(){return document.fullscreen}}const Iu=new Jn(6316128),Ou=new Jn(0),Uu=new bu;class zu extends zo{constructor(){super(),this.renderer=new Ln({canvas:document.getElementById("frontBuffer"),powerPreference:"high-performance",precision:"highp",antialias:!0,depth:!0,stencil:!0,premultipliedAlpha:!0,logarithmicDepthBuffer:!0,alpha:!1,preserveDrawingBuffer:!1}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.xr.enabled=!0,this.audio=new sh,this.listener=new Ru(this.audio),this.camera=new Pt(50,1,.01,1e3),this.camera.add(this.listener),this.fader=new lh(this.camera),this.fadeDepth=0,this.skybox=new dh(this.camera),this.skybox.visible=!1,this.showSkybox=!1,this.stage=new Jh(this.renderer,this.camera),this.stage.position.set(0,0,0),this.sun=new Bt(16777215,.5),this.sun.position.set(0,1,1),this.sun.lookAt(0,0,0),this.ambient=new Ct(16777215,.5),this.background=new _,this.background.name="Background",this.background.add(this.sun),this.background.add(this.ambient),this.background.add(this.skybox),this.background.add(this.stage),this.menu=new _,this.menu.name="Menu",this.foreground=new _,this.foreground.name="Foreground",this.foreground.add(this.menu),this.loadingBar=new hh,this.loadingBar.position.set(0,1.5,-2),this.transition=new _,this.transition.name="Transition",this.transition.visible=!1,this.transition.add(this.loadingBar),this.scene=new Mu,this.scene.background=Iu,this.scene.add(this.background),this.scene.add(this.foreground),this.scene.add(this.transition),this.cursors=new Eh(this.renderer.domElement),this.controls=new zh(this.renderer.domElement),this.cameraControl=new bh(this.camera,this.stage,this.controls,this.cursors),this.screenControl=new Nu(this.renderer,this.camera,!1),this.screenControl.addEventListener("sessionstarted",()=>{this.cursors.lockPointer()}),document.body.append(this.screenControl.element),this.eventSystem=new Ph(this.renderer,this.camera,this.cursors,this.background,this.foreground,this.controls),this.uiSystem=new Kh(this.eventSystem);this.timer=new Tu(this.renderer),this.timer.addEventListener("tick",t=>{Uu.copy(t),this.dispatchEvent(Uu),this.showSkybox||(this.skybox.visible=!1),this.audio.update(),this.stage.update(),this.cameraControl.update(),this.skybox.update(),this.loadingBar.update(t.sdt),this.fader.update(t.sdt),this.stage.presentationPoint.getWorldPosition(this.transition.position),this.stage.presentationPoint.getWorldQuaternion(this.transition.quaternion),this.menu.position.copy(this.transition.position),this.menu.quaternion.copy(this.transition.quaternion),this.renderer.render(this.scene,this.camera)}),window.app=this}start(){this.timer.start(),this.dispatchEvent(new Event("started"))}clearScene(){this.dispatchEvent(new Event("sceneclearing")),this.menu.remove(...this.menu.children),this.foreground.remove(...this.foreground.children),this.foreground.add(this.menu)}async fadeOut(){++this.fadeDepth,1===this.fadeDepth&&(await this.fader.fadeOut(),this.skybox.visible=!1,this.stage.grid.visible=!1,this.scene.background=Ou,this.foreground.visible=!1,this.transition.visible=!0,this.loadingBar.onProgress(0,1),await this.fader.fadeIn())}async fadeIn(){--this.fadeDepth,0===this.fadeDepth&&(await this.fader.fadeOut(),this.skybox.visible=this.showSkybox,this.stage.grid.visible=!0,this.scene.background=Iu,this.foreground.visible=!0,this.transition.visible=!1,await this.fader.fadeIn())}onProgress(t,e,n){this.loadingBar.onProgress(t,e,n)}}const ku=new $n,Gu=new $n,Hu=new $n,Wu=new $n;class Vu extends _{constructor(t,e){super(),this.audio=t,this.name=e,this.clip=null}async load(t,e,n,i,...r){await l(this.audio,"audioready"),this.clip=await this.audio.createClip(this.name,t,e,n,i,...r)}get audioElement(){return this.clip.spatializer.audio}get minDistance(){return this.clip.spatializer.minDistance}set minDistance(t){this.clip.spatializer.minDistance=t}get maxDistance(){return this.clip.spatializer.maxDistance}set maxDistance(t){this.clip.spatializer.maxDistance=t}updateMatrixWorld(t=!1){const e=this.matrixWorldNeedsUpdate||t;super.updateMatrixWorld(t),e&&(Rn(this.matrixWorld,ku,Gu,Hu,Wu),this.audio.setClipPose(this.name,Wu.x,Wu.y,Wu.z,Hu.x,Hu.y,Hu.z,Gu.x,Gu.y,Gu.z,0))}}class ju{constructor(t,e){this.value=t,this.desc=e}contains(t){return this.value.indexOf(t.value)>=0}}function Fn(t,e,n=null){return Object.assign(new ju(t,e),n)}class Qu extends ju{constructor(t,e,...n){super(t,e),this.alts=n,this.width=null}random(){const t=Math.floor(Math.random()*this.alts.length);if(t<0)return null;const e=this.alts[t];return e instanceof Qu?e.random():e}contains(t){return super.contains(t)||this.alts.reduce((e,n)=>e||n.contains(t),!1)}}function Bn(t,e,...n){return new Qu(t,e,...n)}function Nn(t,e,n,...i){return Object.assign(Bn(t,e,...Object.values(n).filter(t=>t instanceof ju),...i),n)}Fn("︎","Variation Selector-15: text style"),Fn("️","Variation Selector-16: emoji style");const Xu=Fn("‍","Zero Width Joiner"),Yu=(Fn("⃣","Combining Enclosing Circle Backslash"),Fn("⃣","Combining Enclosing Keycap"),Fn("♀️","Female")),qu=Fn("♂️","Male"),Zu=Fn("🏻","Light Skin Tone"),Ju=Fn("🏼","Medium-Light Skin Tone"),Ku=Fn("🏽","Medium Skin Tone"),$u=Fn("🏾","Medium-Dark Skin Tone"),td=Fn("🏿","Dark Skin Tone"),ed=Fn("🦰","Red Hair"),nd=Fn("🦱","Curly Hair"),id=Fn("🦳","White Hair"),rd=Fn("🦲","Bald");function In(t,e){if(t instanceof Array)return t.map(t=>In(t,e));if(t instanceof Qu){const{value:n,desc:i}=In(Fn(t.value,t.desc),e);return Bn(n,i,...In(t.alts,e))}return e instanceof Array?e.map(e=>In(t,e)):Fn(t.value+e.value,t.desc+": "+e.desc)}function On(t,e){if(t instanceof Array)return t.map(t=>On(t,e));if(t instanceof Qu){const{value:n,desc:i}=On(Fn(t.value,t.desc),e);return Bn(n,i,...On(t.alts,e))}return e instanceof Array?e.map(e=>On(t,e)):Fn(t.value+Xu.value+e.value,t.desc+": "+e.desc)}function Un(t,e,...n){const i=Fn(t,e),r=In(i,Zu),a=In(i,Ju),s=In(i,Ku),o=In(i,$u),l=In(i,td);return Nn(i.value,i.desc,{default:i,light:r,mediumLight:a,medium:s,mediumDark:o,dark:l},...n)}function zn(t){const e=On(t,qu),n=On(t,Yu);return Nn(t.value,t.desc,{default:t,man:e,woman:n})}function kn(t,e){return zn(Un(t,e))}function Gn(t,e,...n){const i=Un(t,e),r=On(i,ed),a=On(i,nd),s=On(i,id),o=On(i,rd);return Nn(i.value,i.desc,{default:i,red:r,curly:a,white:s,bald:o},...n)}function Hn(t,e){const n=Fn(t.value,e),i=On(Vd.default,n),r=On(qd.default,n);return Nn(t.value,t.desc,{symbol:t,men:i,women:r})}const ad=kn("🙍","Frowning"),sd=kn("🙎","Pouting"),od=kn("🙅","Gesturing NO"),ld=kn("🙆","Gesturing OK"),cd=kn("💁","Tipping Hand"),hd=kn("🙋","Raising Hand"),ud=kn("🙇","Bowing"),dd=kn("🤦","Facepalming"),pd=kn("🤷","Shrugging"),fd=kn("🧏","Can't Hear"),md=kn("💆","Getting Massage"),gd=kn("💇","Getting Haircut"),Ad=kn("👷","Construction Worker"),vd=kn("💂","Guard"),_d=kn("🕵","Spy"),xd=(kn("👮","Police"),kn("👳","Wearing Turban")),wd=kn("🦸","Superhero"),yd=kn("🦹","Supervillain"),Md=kn("🧙","Mage"),bd=kn("🧚","Fairy"),Sd=kn("🧛","Vampire"),Ed=kn("🧜","Merperson"),Td=kn("🧝","Elf"),Pd=kn("🚶","Walking"),Dd=kn("🧍","Standing"),Cd=kn("🧎","Kneeling"),Ld=kn("🏃","Running"),Rd=Bn("Gestures","Gestures",ad,sd,od,ld,cd,hd,ud,dd,pd,fd,md,gd),Fd=Un("👶","Baby"),Bd=Un("🧒","Child"),Nd=Un("👦","Boy"),Id=Un("👧","Girl"),Od=Nn(Bd.value,Bd.desc,{default:Bd,male:Nd,female:Id}),Ud=kn("👱","Blond Person"),zd=Un("🧑","Person",Ud.default,xd.default),kd=Un("🧔","Bearded Man"),Gd=Fn("🕴️","Man in Suit, Levitating"),Hd=Un("👲","Man With Chinese Cap"),Wd=Un("🤵","Man in Tuxedo"),Vd=Gn("👨","Man",Ud.man,kd,Gd,Hd,xd.man,Wd),jd=Un("🤰","Pregnant Woman"),Qd=Un("🤱","Breast-Feeding"),Xd=Un("🧕","Woman With Headscarf"),Yd=Un("👰","Bride With Veil"),qd=Gn("👩","Woman",Ud.woman,jd,Qd,Xd,xd.woman,Yd),Zd=Nn(zd.value,"Adult",{default:zd,male:Vd,female:qd}),Jd=Un("🧓","Older Person"),Kd=Un("👴","Old Man"),$d=Un("👵","Old Woman"),tp=Nn(Jd.value,Jd.desc,{default:Jd,male:Kd,female:$d}),ep=Fn("⚕️","Medical"),np=Hn(ep,"Health Care"),ip=Fn("🎓","Graduation Cap"),rp=Hn(ip,"Student"),ap=Fn("🏫","School"),sp=Hn(ap,"Teacher"),op=Fn("⚖️","Balance Scale"),lp=Hn(op,"Judge"),cp=Fn("🌾","Sheaf of Rice"),hp=Hn(cp,"Farmer"),up=Fn("🍳","Cooking"),dp=Hn(up,"Cook"),pp=Fn("🔧","Wrench"),fp=Hn(pp,"Mechanic"),mp=Fn("🏭","Factory"),gp=Hn(mp,"Factory Worker"),Ap=Fn("💼","Briefcase"),vp=Hn(Ap,"Office Worker"),_p=Fn("🚒","Fire Engine"),xp=Hn(_p,"Fire Fighter"),wp=Fn("🚀","Rocket"),yp=Hn(wp,"Astronaut"),Mp=Fn("✈️","Airplane"),bp=Hn(Mp,"Pilot"),Sp=Fn("🎨","Artist Palette"),Ep=Hn(Sp,"Artist"),Tp=Fn("🎤","Microphone"),Pp=Hn(Tp,"Singer"),Dp=Fn("💻","Laptop"),Cp=Hn(Dp,"Technologist"),Lp=Fn("🔬","Microscope"),Rp=Hn(Lp,"Scientist"),Fp=Fn("👑","Crown"),Bp=Un("🤴","Prince"),Np=Un("👸","Princess"),Ip=Nn(Fp.value,Fp.desc,{symbol:Fp,male:Bp,female:Np}),Op=Nn("Roles","Depictions of people working",{healthCareWorkers:np,students:rp,teachers:sp,judges:lp,farmers:hp,cooks:dp,mechanics:fp,factoryWorkers:gp,officeWorkers:vp,scientists:Rp,technologists:Cp,singers:Pp,artists:Ep,pilots:bp,astronauts:yp,fireFighters:xp,spies:_d,guards:vd,constructionWorkers:Ad,royalty:Ip}),Up=Un("👼","Cherub"),zp=Un("🎅","Santa Claus"),kp=Un("🤶","Mrs. Claus"),Gp=zn(Fn("🧞","Genie")),Hp=zn(Fn("🧟","Zombie")),Wp=Nn("Fantasy","Depictions of fantasy characters",{cherub:Up,santaClaus:zp,mrsClaus:kp,superheroes:wd,supervillains:yd,mages:Md,fairies:bd,vampires:Sd,merpeople:Ed,elves:Td,genies:Gp,zombies:Hp}),Vp=Fn("🦯","Probing Cane"),jp=Hn(Vp,"Probing"),Qp=Fn("🦼","Motorized Wheelchair"),Xp=Hn(Qp,"In Motorized Wheelchair"),Yp=Fn("🦽","Manual Wheelchair"),qp=Hn(Yp,"In Manual Wheelchair"),Zp=Un("🕺","Man Dancing"),Jp=Un("💃","Woman Dancing"),Kp=Nn(Zp.value,"Dancing",{male:Zp,female:Jp}),$p=kn("🤹","Juggler"),tf=kn("🧗","Climber"),ef=Fn("🤺","Fencer"),nf=Un("🏇","Jockey"),rf=Fn("⛷️","Skier"),af=Un("🏂","Snowboarder"),sf=kn("🏌️","Golfer"),of=kn("🏄","Surfing"),lf=kn("🚣","Rowing Boat"),cf=kn("🏊","Swimming"),hf=kn("⛹️","Basket Baller"),uf=kn("🏋️","Weight Lifter"),df=kn("🚴","Biker"),pf=kn("🚵","Mountain Biker"),ff=kn("🤸","Cartwheeler"),mf=zn(Fn("🤼","Wrestler")),gf=kn("🤽","Water Polo Player"),Af=kn("🤾","Hand Baller"),vf=Nn("In Motion","Depictions of people in motion",{walking:Pd,standing:Dd,kneeling:Cd,withProbingCane:jp,inMotorizedWheelchair:Xp,inManualWheelchair:qp,dancers:Kp,jugglers:$p,climbers:tf,fencer:ef,jockeys:nf,skier:rf,snowboarders:af,golfers:sf,surfers:of,rowers:lf,swimmers:cf,runners:Ld,basketballers:hf,weightLifters:uf,bikers:df,mountainBikers:pf,cartwheelers:ff,wrestlers:mf,waterPoloers:gf,handBallers:Af}),_f=kn("🧘","In Lotus Position"),xf=Un("🛀","In Bath"),wf=Un("🛌","In Bed"),yf=kn("🧖","In Sauna"),Mf=Nn("Resting","Depictions of people at rest",{inLotusPosition:_f,inBath:xf,inBed:wf,inSauna:yf}),bf=Bn(Fd.value,Fd.desc,Fd,Up),Sf=Nn("People","People",{babies:bf,children:Od,adults:Zd,elderly:tp}),Ef=(Nn("All People","All People",{people:Sf,gestures:Rd,inMotion:vf,resting:Mf,roles:Op,fantasy:Wp}),Fn("👹","Ogre")),Tf=Fn("👺","Goblin"),Pf=Fn("👻","Ghost"),Df=Fn("👽","Alien"),Cf=Fn("👾","Alien Monster"),Lf=Fn("👿","Angry Face with Horns"),Rf=Fn("💀","Skull"),Ff=Fn("💩","Pile of Poo"),Bf=Fn("😀","Grinning Face"),Nf=Fn("😁","Beaming Face with Smiling Eyes"),If=Fn("😂","Face with Tears of Joy"),Of=Fn("😃","Grinning Face with Big Eyes"),Uf=Fn("😄","Grinning Face with Smiling Eyes"),zf=Fn("😅","Grinning Face with Sweat"),kf=Fn("😆","Grinning Squinting Face"),Gf=Fn("😇","Smiling Face with Halo"),Hf=Fn("😈","Smiling Face with Horns"),Wf=Fn("😉","Winking Face"),Vf=Fn("😊","Smiling Face with Smiling Eyes"),jf=Fn("😋","Face Savoring Food"),Qf=Fn("😌","Relieved Face"),Xf=Fn("😍","Smiling Face with Heart-Eyes"),Yf=Fn("😎","Smiling Face with Sunglasses"),qf=Fn("😏","Smirking Face"),Zf=Fn("😐","Neutral Face"),Jf=Fn("😑","Expressionless Face"),Kf=Fn("😒","Unamused Face"),$f=Fn("😓","Downcast Face with Sweat"),tm=Fn("😔","Pensive Face"),em=Fn("😕","Confused Face"),nm=Fn("😖","Confounded Face"),im=Fn("😗","Kissing Face"),rm=Fn("😘","Face Blowing a Kiss"),am=Fn("😙","Kissing Face with Smiling Eyes"),sm=Fn("😚","Kissing Face with Closed Eyes"),om=Fn("😛","Face with Tongue"),lm=Fn("😜","Winking Face with Tongue"),cm=Fn("😝","Squinting Face with Tongue"),hm=Fn("😞","Disappointed Face"),um=Fn("😟","Worried Face"),dm=Fn("😠","Angry Face"),pm=Fn("😡","Pouting Face"),fm=Fn("😢","Crying Face"),mm=Fn("😣","Persevering Face"),gm=Fn("😤","Face with Steam From Nose"),Am=Fn("😥","Sad but Relieved Face"),vm=Fn("😦","Frowning Face with Open Mouth"),_m=Fn("😧","Anguished Face"),xm=Fn("😨","Fearful Face"),wm=Fn("😩","Weary Face"),ym=Fn("😪","Sleepy Face"),Mm=Fn("😫","Tired Face"),bm=Fn("😬","Grimacing Face"),Sm=Fn("😭","Loudly Crying Face"),Em=Fn("😮","Face with Open Mouth"),Tm=Fn("😯","Hushed Face"),Pm=Fn("😰","Anxious Face with Sweat"),Dm=Fn("😱","Face Screaming in Fear"),Cm=Fn("😲","Astonished Face"),Lm=Fn("😳","Flushed Face"),Rm=Fn("😴","Sleeping Face"),Fm=Fn("😵","Dizzy Face"),Bm=Fn("😶","Face Without Mouth"),Nm=Fn("😷","Face with Medical Mask"),Im=Fn("😸","Grinning Cat with Smiling Eyes"),Om=Fn("😹","Cat with Tears of Joy"),Um=Fn("😺","Grinning Cat"),zm=Fn("😻","Smiling Cat with Heart-Eyes"),km=Fn("😼","Cat with Wry Smile"),Gm=Fn("😽","Kissing Cat"),Hm=Fn("😾","Pouting Cat"),Wm=Fn("😿","Crying Cat"),Vm=Fn("🙀","Weary Cat"),jm=Fn("🙁","Slightly Frowning Face"),Qm=Fn("🙂","Slightly Smiling Face"),Xm=Fn("🙃","Upside-Down Face"),Ym=Fn("🙄","Face with Rolling Eyes"),qm=Fn("🙈","See-No-Evil Monkey"),Zm=Fn("🙉","Hear-No-Evil Monkey"),Jm=Fn("🙊","Speak-No-Evil Monkey"),Km=Fn("🤐","Zipper-Mouth Face"),$m=Fn("🤑","Money-Mouth Face"),tg=Fn("🤒","Face with Thermometer"),eg=Fn("🤓","Nerd Face"),ng=Fn("🤔","Thinking Face"),ig=Fn("🤕","Face with Head-Bandage"),rg=Fn("🤖","Robot"),ag=Fn("🤗","Hugging Face"),sg=Fn("🤠","Cowboy Hat Face"),og=Fn("🤡","Clown Face"),lg=Fn("🤢","Nauseated Face"),cg=Fn("🤣","Rolling on the Floor Laughing"),hg=Fn("🤤","Drooling Face"),ug=Fn("🤥","Lying Face"),dg=Fn("🤧","Sneezing Face"),pg=Fn("🤨","Face with Raised Eyebrow"),fg=Fn("🤩","Star-Struck"),mg=Fn("🤪","Zany Face"),gg=Fn("🤫","Shushing Face"),Ag=Fn("🤬","Face with Symbols on Mouth"),vg=Fn("🤭","Face with Hand Over Mouth"),_g=Fn("🤮","Face Vomiting"),xg=Fn("🤯","Exploding Head"),wg=Fn("🥰","Smiling Face with Hearts"),yg=Fn("🥱","Yawning Face"),Mg=Fn("🥳","Partying Face"),bg=Fn("🥴","Woozy Face"),Sg=Fn("🥵","Hot Face"),Eg=Fn("🥶","Cold Face"),Tg=Fn("🥺","Pleading Face"),Pg=Fn("🧐","Face with Monocle"),Dg=Fn("☠️","Skull and Crossbones"),Cg=Fn("☹️","Frowning Face"),Lg=Fn("☺️","Smiling Face"),Rg=Fn("🗣️","Speaking Head"),Fg=Fn("👤","Bust in Silhouette"),Bg=Nn("Faces","Round emoji faces",{ogre:Ef,goblin:Tf,ghost:Pf,alien:Df,alienMonster:Cf,angryFaceWithHorns:Lf,skull:Rf,pileOfPoo:Ff,grinningFace:Bf,beamingFaceWithSmilingEyes:Nf,faceWithTearsOfJoy:If,grinningFaceWithBigEyes:Of,grinningFaceWithSmilingEyes:Uf,grinningFaceWithSweat:zf,grinningSquitingFace:kf,smillingFaceWithHalo:Gf,smilingFaceWithHorns:Hf,winkingFace:Wf,smilingFaceWithSmilingEyes:Vf,faceSavoringFood:jf,relievedFace:Qf,smilingFaceWithHeartEyes:Xf,smilingFaceWithSunglasses:Yf,smirkingFace:qf,neutralFace:Zf,expressionlessFace:Jf,unamusedFace:Kf,downcastFaceWithSweat:$f,pensiveFace:tm,confusedFace:em,confoundedFace:nm,kissingFace:im,faceBlowingAKiss:rm,kissingFaceWithSmilingEyes:am,kissingFaceWithClosedEyes:sm,faceWithTongue:om,winkingFaceWithTongue:lm,squintingFaceWithTongue:cm,disappointedFace:hm,worriedFace:um,angryFace:dm,poutingFace:pm,cryingFace:fm,perseveringFace:mm,faceWithSteamFromNose:gm,sadButRelievedFace:Am,frowningFaceWithOpenMouth:vm,anguishedFace:_m,fearfulFace:xm,wearyFace:wm,sleepyFace:ym,tiredFace:Mm,grimacingFace:bm,loudlyCryingFace:Sm,faceWithOpenMouth:Em,hushedFace:Tm,anxiousFaceWithSweat:Pm,faceScreamingInFear:Dm,astonishedFace:Cm,flushedFace:Lm,sleepingFace:Rm,dizzyFace:Fm,faceWithoutMouth:Bm,faceWithMedicalMask:Nm,grinningCatWithSmilingEyes:Im,catWithTearsOfJoy:Om,grinningCat:Um,smilingCatWithHeartEyes:zm,catWithWrySmile:km,kissingCat:Gm,poutingCat:Hm,cryingCat:Wm,wearyCat:Vm,slightlyFrowningFace:jm,slightlySmilingFace:Qm,updisdeDownFace:Xm,faceWithRollingEyes:Ym,seeNoEvilMonkey:qm,hearNoEvilMonkey:Zm,speakNoEvilMonkey:Jm,zipperMouthFace:Km,moneyMouthFace:$m,faceWithThermometer:tg,nerdFace:eg,thinkingFace:ng,faceWithHeadBandage:ig,robot:rg,huggingFace:ag,cowboyHatFace:sg,clownFace:og,nauseatedFace:lg,rollingOnTheFloorLaughing:cg,droolingFace:hg,lyingFace:ug,sneezingFace:dg,faceWithRaisedEyebrow:pg,starStruck:fg,zanyFace:mg,shushingFace:gg,faceWithSymbolsOnMouth:Ag,faceWithHandOverMouth:vg,faceVomitting:_g,explodingHead:xg,smilingFaceWithHearts:wg,yawningFace:yg,partyingFace:Mg,woozyFace:bg,hotFace:Sg,coldFace:Eg,pleadingFace:Tg,faceWithMonocle:Pg,skullAndCrossbones:Dg,frowningFace:Cg,smilingFace:Lg,speakingHead:Rg,bust:Fg}),Ng=Fn("💋","Kiss Mark"),Ig=Fn("💌","Love Letter"),Og=Fn("💓","Beating Heart"),Ug=Fn("💔","Broken Heart"),zg=Fn("💕","Two Hearts"),kg=Fn("💖","Sparkling Heart"),Gg=Fn("💗","Growing Heart"),Hg=Fn("💘","Heart with Arrow"),Wg=Fn("💙","Blue Heart"),Vg=Fn("💚","Green Heart"),jg=Fn("💛","Yellow Heart"),Qg=Fn("💜","Purple Heart"),Xg=Fn("💝","Heart with Ribbon"),Yg=Fn("💞","Revolving Hearts"),qg=Fn("💟","Heart Decoration"),Zg=Fn("🖤","Black Heart"),Jg=Fn("🤍","White Heart"),Kg=Fn("🤎","Brown Heart"),$g=Fn("🧡","Orange Heart"),tA=Fn("❣️","Heart Exclamation"),eA=Fn("❤️","Red Heart"),nA=Nn("Love","Hearts and kisses",{kissMark:Ng,loveLetter:Ig,beatingHeart:Og,brokenHeart:Ug,twoHearts:zg,sparklingHeart:kg,growingHeart:Gg,heartWithArrow:Hg,blueHeart:Wg,greenHeart:Vg,yellowHeart:jg,purpleHeart:Qg,heartWithRibbon:Xg,revolvingHearts:Yg,heartDecoration:qg,blackHeart:Zg,whiteHeart:Jg,brownHeart:Kg,orangeHeart:$g,heartExclamation:tA,redHeart:eA}),iA=Fn("💢","Anger Symbol"),rA=Fn("💣","Bomb"),aA=Fn("💤","Zzz"),sA=Fn("💥","Collision"),oA=Fn("💦","Sweat Droplets"),lA=Fn("💨","Dashing Away"),cA=Fn("💫","Dizzy"),hA=Fn("💬","Speech Balloon"),uA=Fn("💭","Thought Balloon"),dA=Fn("💯","Hundred Points"),pA=Fn("🕳️","Hole"),fA=Fn("🗨️","Left Speech Bubble"),mA=Fn("🗩️","Right Speech Bubble"),gA=Fn("🗪️","Conversation Bubbles 2"),AA=Fn("🗫️","Conversation Bubbles 3"),vA=Fn("🗬️","Left Thought Bubble"),_A=Fn("🗭️","Right Thought Bubble"),xA=Fn("🗮️","Left Anger Bubble"),wA=Fn("🗯️","Right Anger Bubble"),yA=Fn("🗰️","Anger Bubble"),MA=Fn("🗱️","Anger Bubble Lightning"),bA=Fn("🗲️","Lightning Bolt"),SA=Bn("Cartoon","Cartoon symbols",iA,rA,aA,sA,oA,lA,cA,hA,uA,dA,pA,fA,mA,gA,AA,vA,_A,xA,wA,yA,MA,bA),EA=Fn("👆","Backhand Index Pointing Up"),TA=Fn("👇","Backhand Index Pointing Down"),PA=Fn("👈","Backhand Index Pointing Left"),DA=Fn("👉","Backhand Index Pointing Right"),CA=Fn("👊","Oncoming Fist"),LA=Fn("👋","Waving Hand"),RA=Fn("🖏","OK Hand"),FA=Fn("👍","Thumbs Up"),BA=Fn("👎","Thumbs Down"),NA=Fn("👏","Clapping Hands"),IA=Fn("👐","Open Hands"),OA=Fn("💅","Nail Polish"),UA=Fn("🖐️","Hand with Fingers Splayed"),zA=Fn("🖑️","Hand with Fingers Splayed 2"),kA=Fn("🖒","Thumbs Up 2"),GA=Fn("🖓","Thumbs Down 2"),HA=Fn("🖔","Peace Fingers"),WA=Fn("🖕","Middle Finger"),VA=Fn("🖖","Vulcan Salute"),jA=Fn("🖗","Hand Pointing Down"),QA=Fn("🖘","Hand Pointing Left"),XA=Fn("🖙","Hand Pointing Right"),YA=Fn("🖚","Hand Pointing Left 2"),qA=Fn("🖛","Hand Pointing Right 2"),ZA=Fn("🖜","Index Pointing Left"),JA=Fn("🖝","Index Pointing Right"),KA=Fn("🖞","Index Pointing Up"),$A=Fn("🖟","Index Pointing Down"),tv=Fn("🖠","Index Pointing Up 2"),ev=Fn("🖡","Index Pointing Down 2"),nv=Fn("🖢","Index Pointing Up 3"),iv=Fn("🖣","Index Pointing Down 3"),rv=Fn("🙌","Raising Hands"),av=Fn("🙏","Folded Hands"),sv=Fn("🤏","Pinching Hand"),ov=Fn("🤘","Sign of the Horns"),lv=Fn("🤙","Call Me Hand"),cv=Fn("🤚","Raised Back of Hand"),hv=Fn("🤛","Left-Facing Fist"),uv=Fn("🤜","Right-Facing Fist"),dv=Fn("🤝","Handshake"),pv=Fn("🤞","Crossed Fingers"),fv=Fn("🤟","Love-You Gesture"),mv=Fn("🤲","Palms Up Together"),gv=Fn("☝️","Index Pointing Up 4"),Av=Fn("✊","Raised Fist"),vv=Fn("✋","Raised Hand"),_v=Fn("✌️","Victory Hand"),xv=Fn("✍️","Writing Hand"),wv=Bn("Hands","Hands pointing at things",EA,TA,PA,DA,CA,LA,RA,FA,BA,NA,IA,OA,UA,zA,zA,kA,GA,HA,WA,VA,jA,QA,XA,YA,qA,ZA,JA,KA,$A,tv,ev,nv,iv,rv,av,sv,ov,lv,cv,hv,uv,dv,pv,fv,mv,gv,Av,vv,_v,xv),yv=Bn("Body Parts","General body parts",Fn("👀","Eyes"),Fn("👁️","Eye"),Fn("👁️‍🗨️","Eye in Speech Bubble"),Fn("👂","Ear"),Fn("👃","Nose"),Fn("👄","Mouth"),Fn("👅","Tongue"),Fn("💪","Flexed Biceps"),Fn("🤳","Selfie"),Fn("🦴","Bone"),Fn("🦵","Leg"),Fn("🦶","Foot"),Fn("🦷","Tooth"),Fn("🦻","Ear with Hearing Aid"),Fn("🦾","Mechanical Arm"),Fn("🦿","Mechanical Leg"),Fn("🧠","Brain")),Mv=Bn("Animals","Animals and insects",Fn("🐀","Rat"),Fn("🐁","Mouse"),Fn("🐂","Ox"),Fn("🐃","Water Buffalo"),Fn("🐄","Cow"),Fn("🐅","Tiger"),Fn("🐆","Leopard"),Fn("🐇","Rabbit"),Fn("🐈","Cat"),Fn("🐉","Dragon"),Fn("🐊","Crocodile"),Fn("🐋","Whale"),Fn("🐌","Snail"),Fn("🐍","Snake"),Fn("🐎","Horse"),Fn("🐏","Ram"),Fn("🐐","Goat"),Fn("🐑","Ewe"),Fn("🐒","Monkey"),Fn("🐓","Rooster"),Fn("🐔","Chicken"),Fn("🐕","Dog"),Fn("🐕‍🦺","Service Dog"),Fn("🐖","Pig"),Fn("🐗","Boar"),Fn("🐘","Elephant"),Fn("🐙","Octopus"),Fn("🐚","Spiral Shell"),Fn("🐛","Bug"),Fn("🐜","Ant"),Fn("🐝","Honeybee"),Fn("🐞","Lady Beetle"),Fn("🐟","Fish"),Fn("🐠","Tropical Fish"),Fn("🐡","Blowfish"),Fn("🐢","Turtle"),Fn("🐣","Hatching Chick"),Fn("🐤","Baby Chick"),Fn("🐥","Front-Facing Baby Chick"),Fn("🐦","Bird"),Fn("🐧","Penguin"),Fn("🐨","Koala"),Fn("🐩","Poodle"),Fn("🐪","Camel"),Fn("🐫","Two-Hump Camel"),Fn("🐬","Dolphin"),Fn("🐭","Mouse Face"),Fn("🐮","Cow Face"),Fn("🐯","Tiger Face"),Fn("🐰","Rabbit Face"),Fn("🐱","Cat Face"),Fn("🐲","Dragon Face"),Fn("🐳","Spouting Whale"),Fn("🐴","Horse Face"),Fn("🐵","Monkey Face"),Fn("🐶","Dog Face"),Fn("🐷","Pig Face"),Fn("🐸","Frog"),Fn("🐹","Hamster"),Fn("🐺","Wolf"),Fn("🐻","Bear"),Fn("🐻‍❄️","Polar Bear"),Fn("🐼","Panda"),Fn("🐽","Pig Nose"),Fn("🐾","Paw Prints"),Fn("🐿️","Chipmunk"),Fn("🕊️","Dove"),Fn("🕷️","Spider"),Fn("🕸️","Spider Web"),Fn("🦁","Lion"),Fn("🦂","Scorpion"),Fn("🦃","Turkey"),Fn("🦄","Unicorn"),Fn("🦅","Eagle"),Fn("🦆","Duck"),Fn("🦇","Bat"),Fn("🦈","Shark"),Fn("🦉","Owl"),Fn("🦊","Fox"),Fn("🦋","Butterfly"),Fn("🦌","Deer"),Fn("🦍","Gorilla"),Fn("🦎","Lizard"),Fn("🦏","Rhinoceros"),Fn("🦒","Giraffe"),Fn("🦓","Zebra"),Fn("🦔","Hedgehog"),Fn("🦕","Sauropod"),Fn("🦖","T-Rex"),Fn("🦗","Cricket"),Fn("🦘","Kangaroo"),Fn("🦙","Llama"),Fn("🦚","Peacock"),Fn("🦛","Hippopotamus"),Fn("🦜","Parrot"),Fn("🦝","Raccoon"),Fn("🦟","Mosquito"),Fn("🦠","Microbe"),Fn("🦡","Badger"),Fn("🦢","Swan"),Fn("🦥","Sloth"),Fn("🦦","Otter"),Fn("🦧","Orangutan"),Fn("🦨","Skunk"),Fn("🦩","Flamingo"),Fn("🦮","Guide Dog")),bv=Fn("💮","White Flower"),Sv=Bn("Plants","Flowers, trees, and things",Fn("🌱","Seedling"),Fn("🌲","Evergreen Tree"),Fn("🌳","Deciduous Tree"),Fn("🌴","Palm Tree"),Fn("🌵","Cactus"),Fn("🌷","Tulip"),Fn("🌸","Cherry Blossom"),Fn("🌹","Rose"),Fn("🌺","Hibiscus"),Fn("🌻","Sunflower"),Fn("🌼","Blossom"),cp,Fn("🌿","Herb"),Fn("🍀","Four Leaf Clover"),Fn("🍁","Maple Leaf"),Fn("🍂","Fallen Leaf"),Fn("🍃","Leaf Fluttering in Wind"),Fn("🏵️","Rosette"),Fn("💐","Bouquet"),bv,Fn("🥀","Wilted Flower"),Fn("☘️","Shamrock")),Ev=Fn("🍌","Banana"),Tv=Bn("Food","Food, drink, and utensils",Fn("🌭","Hot Dog"),Fn("🌮","Taco"),Fn("🌯","Burrito"),Fn("🌰","Chestnut"),Fn("🌶️","Hot Pepper"),Fn("🌽","Ear of Corn"),Fn("🍄","Mushroom"),Fn("🍅","Tomato"),Fn("🍆","Eggplant"),Fn("🍇","Grapes"),Fn("🍈","Melon"),Fn("🍉","Watermelon"),Fn("🍊","Tangerine"),Fn("🍋","Lemon"),Ev,Fn("🍍","Pineapple"),Fn("🍎","Red Apple"),Fn("🍏","Green Apple"),Fn("🍐","Pear"),Fn("🍑","Peach"),Fn("🍒","Cherries"),Fn("🍓","Strawberry"),Fn("🍔","Hamburger"),Fn("🍕","Pizza"),Fn("🍖","Meat on Bone"),Fn("🍗","Poultry Leg"),Fn("🍘","Rice Cracker"),Fn("🍙","Rice Ball"),Fn("🍚","Cooked Rice"),Fn("🍛","Curry Rice"),Fn("🍜","Steaming Bowl"),Fn("🍝","Spaghetti"),Fn("🍞","Bread"),Fn("🍟","French Fries"),Fn("🍠","Roasted Sweet Potato"),Fn("🍡","Dango"),Fn("🍢","Oden"),Fn("🍣","Sushi"),Fn("🍤","Fried Shrimp"),Fn("🍥","Fish Cake with Swirl"),Fn("🍱","Bento Box"),Fn("🍲","Pot of Food"),up,Fn("🍿","Popcorn"),Fn("🥐","Croissant"),Fn("🥑","Avocado"),Fn("🥒","Cucumber"),Fn("🥓","Bacon"),Fn("🥔","Potato"),Fn("🥕","Carrot"),Fn("🥖","Baguette Bread"),Fn("🥗","Green Salad"),Fn("🥘","Shallow Pan of Food"),Fn("🥙","Stuffed Flatbread"),Fn("🥚","Egg"),Fn("🥜","Peanuts"),Fn("🥝","Kiwi Fruit"),Fn("🥞","Pancakes"),Fn("🥟","Dumpling"),Fn("🥠","Fortune Cookie"),Fn("🥡","Takeout Box"),Fn("🥣","Bowl with Spoon"),Fn("🥥","Coconut"),Fn("🥦","Broccoli"),Fn("🥨","Pretzel"),Fn("🥩","Cut of Meat"),Fn("🥪","Sandwich"),Fn("🥫","Canned Food"),Fn("🥬","Leafy Green"),Fn("🥭","Mango"),Fn("🥮","Moon Cake"),Fn("🥯","Bagel"),Fn("🦀","Crab"),Fn("🦐","Shrimp"),Fn("🦑","Squid"),Fn("🦞","Lobster"),Fn("🦪","Oyster"),Fn("🧀","Cheese Wedge"),Fn("🧂","Salt"),Fn("🧄","Garlic"),Fn("🧅","Onion"),Fn("🧆","Falafel"),Fn("🧇","Waffle"),Fn("🧈","Butter"),Fn("🍦","Soft Ice Cream"),Fn("🍧","Shaved Ice"),Fn("🍨","Ice Cream"),Fn("🍩","Doughnut"),Fn("🍪","Cookie"),Fn("🍫","Chocolate Bar"),Fn("🍬","Candy"),Fn("🍭","Lollipop"),Fn("🍮","Custard"),Fn("🍯","Honey Pot"),Fn("🍰","Shortcake"),Fn("🎂","Birthday Cake"),Fn("🥧","Pie"),Fn("🧁","Cupcake"),Fn("🍵","Teacup Without Handle"),Fn("🍶","Sake"),Fn("🍷","Wine Glass"),Fn("🍸","Cocktail Glass"),Fn("🍹","Tropical Drink"),Fn("🍺","Beer Mug"),Fn("🍻","Clinking Beer Mugs"),Fn("🍼","Baby Bottle"),Fn("🍾","Bottle with Popping Cork"),Fn("🥂","Clinking Glasses"),Fn("🥃","Tumbler Glass"),Fn("🥛","Glass of Milk"),Fn("🥤","Cup with Straw"),Fn("🧃","Beverage Box"),Fn("🧉","Mate"),Fn("🧊","Ice"),Fn("☕","Hot Beverage"),Fn("🍴","Fork and Knife"),Fn("🍽️","Fork and Knife with Plate"),Fn("🏺","Amphora"),Fn("🔪","Kitchen Knife"),Fn("🥄","Spoon"),Fn("🥢","Chopsticks")),Pv=(Bn("National Flags","Flags of countries from around the world",Fn("🇦🇨","Flag: Ascension Island"),Fn("🇦🇩","Flag: Andorra"),Fn("🇦🇪","Flag: United Arab Emirates"),Fn("🇦🇫","Flag: Afghanistan"),Fn("🇦🇬","Flag: Antigua & Barbuda"),Fn("🇦🇮","Flag: Anguilla"),Fn("🇦🇱","Flag: Albania"),Fn("🇦🇲","Flag: Armenia"),Fn("🇦🇴","Flag: Angola"),Fn("🇦🇶","Flag: Antarctica"),Fn("🇦🇷","Flag: Argentina"),Fn("🇦🇸","Flag: American Samoa"),Fn("🇦🇹","Flag: Austria"),Fn("🇦🇺","Flag: Australia"),Fn("🇦🇼","Flag: Aruba"),Fn("🇦🇽","Flag: Åland Islands"),Fn("🇦🇿","Flag: Azerbaijan"),Fn("🇧🇦","Flag: Bosnia & Herzegovina"),Fn("🇧🇧","Flag: Barbados"),Fn("🇧🇩","Flag: Bangladesh"),Fn("🇧🇪","Flag: Belgium"),Fn("🇧🇫","Flag: Burkina Faso"),Fn("🇧🇬","Flag: Bulgaria"),Fn("🇧🇭","Flag: Bahrain"),Fn("🇧🇮","Flag: Burundi"),Fn("🇧🇯","Flag: Benin"),Fn("🇧🇱","Flag: St. Barthélemy"),Fn("🇧🇲","Flag: Bermuda"),Fn("🇧🇳","Flag: Brunei"),Fn("🇧🇴","Flag: Bolivia"),Fn("🇧🇶","Flag: Caribbean Netherlands"),Fn("🇧🇷","Flag: Brazil"),Fn("🇧🇸","Flag: Bahamas"),Fn("🇧🇹","Flag: Bhutan"),Fn("🇧🇻","Flag: Bouvet Island"),Fn("🇧🇼","Flag: Botswana"),Fn("🇧🇾","Flag: Belarus"),Fn("🇧🇿","Flag: Belize"),Fn("🇨🇦","Flag: Canada"),Fn("🇨🇨","Flag: Cocos (Keeling) Islands"),Fn("🇨🇩","Flag: Congo - Kinshasa"),Fn("🇨🇫","Flag: Central African Republic"),Fn("🇨🇬","Flag: Congo - Brazzaville"),Fn("🇨🇭","Flag: Switzerland"),Fn("🇨🇮","Flag: Côte d’Ivoire"),Fn("🇨🇰","Flag: Cook Islands"),Fn("🇨🇱","Flag: Chile"),Fn("🇨🇲","Flag: Cameroon"),Fn("🇨🇳","Flag: China"),Fn("🇨🇴","Flag: Colombia"),Fn("🇨🇵","Flag: Clipperton Island"),Fn("🇨🇷","Flag: Costa Rica"),Fn("🇨🇺","Flag: Cuba"),Fn("🇨🇻","Flag: Cape Verde"),Fn("🇨🇼","Flag: Curaçao"),Fn("🇨🇽","Flag: Christmas Island"),Fn("🇨🇾","Flag: Cyprus"),Fn("🇨🇿","Flag: Czechia"),Fn("🇩🇪","Flag: Germany"),Fn("🇩🇬","Flag: Diego Garcia"),Fn("🇩🇯","Flag: Djibouti"),Fn("🇩🇰","Flag: Denmark"),Fn("🇩🇲","Flag: Dominica"),Fn("🇩🇴","Flag: Dominican Republic"),Fn("🇩🇿","Flag: Algeria"),Fn("🇪🇦","Flag: Ceuta & Melilla"),Fn("🇪🇨","Flag: Ecuador"),Fn("🇪🇪","Flag: Estonia"),Fn("🇪🇬","Flag: Egypt"),Fn("🇪🇭","Flag: Western Sahara"),Fn("🇪🇷","Flag: Eritrea"),Fn("🇪🇸","Flag: Spain"),Fn("🇪🇹","Flag: Ethiopia"),Fn("🇪🇺","Flag: European Union"),Fn("🇫🇮","Flag: Finland"),Fn("🇫🇯","Flag: Fiji"),Fn("🇫🇰","Flag: Falkland Islands"),Fn("🇫🇲","Flag: Micronesia"),Fn("🇫🇴","Flag: Faroe Islands"),Fn("🇫🇷","Flag: France"),Fn("🇬🇦","Flag: Gabon"),Fn("🇬🇧","Flag: United Kingdom"),Fn("🇬🇩","Flag: Grenada"),Fn("🇬🇪","Flag: Georgia"),Fn("🇬🇫","Flag: French Guiana"),Fn("🇬🇬","Flag: Guernsey"),Fn("🇬🇭","Flag: Ghana"),Fn("🇬🇮","Flag: Gibraltar"),Fn("🇬🇱","Flag: Greenland"),Fn("🇬🇲","Flag: Gambia"),Fn("🇬🇳","Flag: Guinea"),Fn("🇬🇵","Flag: Guadeloupe"),Fn("🇬🇶","Flag: Equatorial Guinea"),Fn("🇬🇷","Flag: Greece"),Fn("🇬🇸","Flag: South Georgia & South Sandwich Islands"),Fn("🇬🇹","Flag: Guatemala"),Fn("🇬🇺","Flag: Guam"),Fn("🇬🇼","Flag: Guinea-Bissau"),Fn("🇬🇾","Flag: Guyana"),Fn("🇭🇰","Flag: Hong Kong SAR China"),Fn("🇭🇲","Flag: Heard & McDonald Islands"),Fn("🇭🇳","Flag: Honduras"),Fn("🇭🇷","Flag: Croatia"),Fn("🇭🇹","Flag: Haiti"),Fn("🇭🇺","Flag: Hungary"),Fn("🇮🇨","Flag: Canary Islands"),Fn("🇮🇩","Flag: Indonesia"),Fn("🇮🇪","Flag: Ireland"),Fn("🇮🇱","Flag: Israel"),Fn("🇮🇲","Flag: Isle of Man"),Fn("🇮🇳","Flag: India"),Fn("🇮🇴","Flag: British Indian Ocean Territory"),Fn("🇮🇶","Flag: Iraq"),Fn("🇮🇷","Flag: Iran"),Fn("🇮🇸","Flag: Iceland"),Fn("🇮🇹","Flag: Italy"),Fn("🇯🇪","Flag: Jersey"),Fn("🇯🇲","Flag: Jamaica"),Fn("🇯🇴","Flag: Jordan"),Fn("🇯🇵","Flag: Japan"),Fn("🇰🇪","Flag: Kenya"),Fn("🇰🇬","Flag: Kyrgyzstan"),Fn("🇰🇭","Flag: Cambodia"),Fn("🇰🇮","Flag: Kiribati"),Fn("🇰🇲","Flag: Comoros"),Fn("🇰🇳","Flag: St. Kitts & Nevis"),Fn("🇰🇵","Flag: North Korea"),Fn("🇰🇷","Flag: South Korea"),Fn("🇰🇼","Flag: Kuwait"),Fn("🇰🇾","Flag: Cayman Islands"),Fn("🇰🇿","Flag: Kazakhstan"),Fn("🇱🇦","Flag: Laos"),Fn("🇱🇧","Flag: Lebanon"),Fn("🇱🇨","Flag: St. Lucia"),Fn("🇱🇮","Flag: Liechtenstein"),Fn("🇱🇰","Flag: Sri Lanka"),Fn("🇱🇷","Flag: Liberia"),Fn("🇱🇸","Flag: Lesotho"),Fn("🇱🇹","Flag: Lithuania"),Fn("🇱🇺","Flag: Luxembourg"),Fn("🇱🇻","Flag: Latvia"),Fn("🇱🇾","Flag: Libya"),Fn("🇲🇦","Flag: Morocco"),Fn("🇲🇨","Flag: Monaco"),Fn("🇲🇩","Flag: Moldova"),Fn("🇲🇪","Flag: Montenegro"),Fn("🇲🇫","Flag: St. Martin"),Fn("🇲🇬","Flag: Madagascar"),Fn("🇲🇭","Flag: Marshall Islands"),Fn("🇲🇰","Flag: North Macedonia"),Fn("🇲🇱","Flag: Mali"),Fn("🇲🇲","Flag: Myanmar (Burma)"),Fn("🇲🇳","Flag: Mongolia"),Fn("🇲🇴","Flag: Macao Sar China"),Fn("🇲🇵","Flag: Northern Mariana Islands"),Fn("🇲🇶","Flag: Martinique"),Fn("🇲🇷","Flag: Mauritania"),Fn("🇲🇸","Flag: Montserrat"),Fn("🇲🇹","Flag: Malta"),Fn("🇲🇺","Flag: Mauritius"),Fn("🇲🇻","Flag: Maldives"),Fn("🇲🇼","Flag: Malawi"),Fn("🇲🇽","Flag: Mexico"),Fn("🇲🇾","Flag: Malaysia"),Fn("🇲🇿","Flag: Mozambique"),Fn("🇳🇦","Flag: Namibia"),Fn("🇳🇨","Flag: New Caledonia"),Fn("🇳🇪","Flag: Niger"),Fn("🇳🇫","Flag: Norfolk Island"),Fn("🇳🇬","Flag: Nigeria"),Fn("🇳🇮","Flag: Nicaragua"),Fn("🇳🇱","Flag: Netherlands"),Fn("🇳🇴","Flag: Norway"),Fn("🇳🇵","Flag: Nepal"),Fn("🇳🇷","Flag: Nauru"),Fn("🇳🇺","Flag: Niue"),Fn("🇳🇿","Flag: New Zealand"),Fn("🇴🇲","Flag: Oman"),Fn("🇵🇦","Flag: Panama"),Fn("🇵🇪","Flag: Peru"),Fn("🇵🇫","Flag: French Polynesia"),Fn("🇵🇬","Flag: Papua New Guinea"),Fn("🇵🇭","Flag: Philippines"),Fn("🇵🇰","Flag: Pakistan"),Fn("🇵🇱","Flag: Poland"),Fn("🇵🇲","Flag: St. Pierre & Miquelon"),Fn("🇵🇳","Flag: Pitcairn Islands"),Fn("🇵🇷","Flag: Puerto Rico"),Fn("🇵🇸","Flag: Palestinian Territories"),Fn("🇵🇹","Flag: Portugal"),Fn("🇵🇼","Flag: Palau"),Fn("🇵🇾","Flag: Paraguay"),Fn("🇶🇦","Flag: Qatar"),Fn("🇷🇪","Flag: Réunion"),Fn("🇷🇴","Flag: Romania"),Fn("🇷🇸","Flag: Serbia"),Fn("🇷🇺","Flag: Russia"),Fn("🇷🇼","Flag: Rwanda"),Fn("🇸🇦","Flag: Saudi Arabia"),Fn("🇸🇧","Flag: Solomon Islands"),Fn("🇸🇨","Flag: Seychelles"),Fn("🇸🇩","Flag: Sudan"),Fn("🇸🇪","Flag: Sweden"),Fn("🇸🇬","Flag: Singapore"),Fn("🇸🇭","Flag: St. Helena"),Fn("🇸🇮","Flag: Slovenia"),Fn("🇸🇯","Flag: Svalbard & Jan Mayen"),Fn("🇸🇰","Flag: Slovakia"),Fn("🇸🇱","Flag: Sierra Leone"),Fn("🇸🇲","Flag: San Marino"),Fn("🇸🇳","Flag: Senegal"),Fn("🇸🇴","Flag: Somalia"),Fn("🇸🇷","Flag: Suriname"),Fn("🇸🇸","Flag: South Sudan"),Fn("🇸🇹","Flag: São Tomé & Príncipe"),Fn("🇸🇻","Flag: El Salvador"),Fn("🇸🇽","Flag: Sint Maarten"),Fn("🇸🇾","Flag: Syria"),Fn("🇸🇿","Flag: Eswatini"),Fn("🇹🇦","Flag: Tristan Da Cunha"),Fn("🇹🇨","Flag: Turks & Caicos Islands"),Fn("🇹🇩","Flag: Chad"),Fn("🇹🇫","Flag: French Southern Territories"),Fn("🇹🇬","Flag: Togo"),Fn("🇹🇭","Flag: Thailand"),Fn("🇹🇯","Flag: Tajikistan"),Fn("🇹🇰","Flag: Tokelau"),Fn("🇹🇱","Flag: Timor-Leste"),Fn("🇹🇲","Flag: Turkmenistan"),Fn("🇹🇳","Flag: Tunisia"),Fn("🇹🇴","Flag: Tonga"),Fn("🇹🇷","Flag: Turkey"),Fn("🇹🇹","Flag: Trinidad & Tobago"),Fn("🇹🇻","Flag: Tuvalu"),Fn("🇹🇼","Flag: Taiwan"),Fn("🇹🇿","Flag: Tanzania"),Fn("🇺🇦","Flag: Ukraine"),Fn("🇺🇬","Flag: Uganda"),Fn("🇺🇲","Flag: U.S. Outlying Islands"),Fn("🇺🇳","Flag: United Nations"),Fn("🇺🇸","Flag: United States"),Fn("🇺🇾","Flag: Uruguay"),Fn("🇺🇿","Flag: Uzbekistan"),Fn("🇻🇦","Flag: Vatican City"),Fn("🇻🇨","Flag: St. Vincent & Grenadines"),Fn("🇻🇪","Flag: Venezuela"),Fn("🇻🇬","Flag: British Virgin Islands"),Fn("🇻🇮","Flag: U.S. Virgin Islands"),Fn("🇻🇳","Flag: Vietnam"),Fn("🇻🇺","Flag: Vanuatu"),Fn("🇼🇫","Flag: Wallis & Futuna"),Fn("🇼🇸","Flag: Samoa"),Fn("🇽🇰","Flag: Kosovo"),Fn("🇾🇪","Flag: Yemen"),Fn("🇾🇹","Flag: Mayotte"),Fn("🇿🇦","Flag: South Africa"),Fn("🇿🇲","Flag: Zambia"),Fn("🇿🇼","Flag: Zimbabwe")),Bn("Flags","Basic flags",Fn("🎌","Crossed Flags"),Fn("🏁","Chequered Flag"),Fn("🏳️","White Flag"),Fn("🏳️‍🌈","Rainbow Flag"),Fn("🏴","Black Flag"),Fn("🏴󠁧󠁢󠁥󠁮󠁧󠁿","Flag: England"),Fn("🏴󠁧󠁢󠁳󠁣󠁴󠁿","Flag: Scotland"),Fn("🏴󠁧󠁢󠁷󠁬󠁳󠁿","Flag: Wales"),Fn("🚩","Triangular Flag"))),Dv=Fn("🏍️","Motorcycle"),Cv=Fn("🏎️","Racing Car"),Lv=Fn("💺","Seat"),Rv=Fn("🚁","Helicopter"),Fv=Fn("🚂","Locomotive"),Bv=Fn("🚃","Railway Car"),Nv=Fn("🚄","High-Speed Train"),Iv=Fn("🚅","Bullet Train"),Ov=Fn("🚆","Train"),Uv=Fn("🚇","Metro"),zv=Fn("🚈","Light Rail"),kv=Fn("🚉","Station"),Gv=Fn("🚊","Tram"),Hv=Fn("🚋","Tram Car"),Wv=Fn("🚌","Bus"),Vv=Fn("🚍","Oncoming Bus"),jv=Fn("🚎","Trolleybus"),Qv=Fn("🚏","Bus Stop"),Xv=Fn("🚐","Minibus"),Yv=Fn("🚑","Ambulance"),qv=(Fn("🚓","Police Car"),Fn("🚔","Oncoming Police Car"),Fn("🚕","Taxi")),Zv=Fn("🚖","Oncoming Taxi"),Jv=Fn("🚗","Automobile"),Kv=Fn("🚘","Oncoming Automobile"),$v=Fn("🚙","Sport Utility Vehicle"),t_=Fn("🚚","Delivery Truck"),e_=Fn("🚛","Articulated Lorry"),n_=Fn("🚜","Tractor"),i_=Fn("🚝","Monorail"),r_=Fn("🚞","Mountain Railway"),a_=Fn("🚟","Suspension Railway"),s_=Fn("🚠","Mountain Cableway"),o_=Fn("🚡","Aerial Tramway"),l_=Fn("🚢","Ship"),c_=Fn("🚤","Speedboat"),h_=Fn("🚥","Horizontal Traffic Light"),u_=Fn("🚦","Vertical Traffic Light"),d_=Fn("🚧","Construction"),p_=(Fn("🚨","Police Car Light"),Fn("🚲","Bicycle")),f_=Fn("🛑","Stop Sign"),m_=Fn("🛢️","Oil Drum"),g_=Fn("🛣️","Motorway"),A_=Fn("🛤️","Railway Track"),v_=Fn("🛥️","Motor Boat"),__=Fn("🛩️","Small Airplane"),x_=Fn("🛫","Airplane Departure"),w_=Fn("🛬","Airplane Arrival"),y_=Fn("🛰️","Satellite"),M_=Fn("🛳️","Passenger Ship"),b_=Fn("🛴","Kick Scooter"),S_=Fn("🛵","Motor Scooter"),E_=Fn("🛶","Canoe"),T_=Fn("🛸","Flying Saucer"),P_=Fn("🛹","Skateboard"),D_=Fn("🛺","Auto Rickshaw"),C_=Fn("🪂","Parachute"),L_=Fn("⚓","Anchor"),R_=Fn("⛴️","Ferry"),F_=Fn("⛵","Sailboat"),B_=Fn("⛽","Fuel Pump"),N_=Bn("Vehicles","Things that go",Dv,Cv,Lv,wp,Rv,Fv,Bv,Nv,Iv,Ov,Uv,zv,kv,Gv,Hv,Wv,Vv,jv,Qv,Xv,Yv,_p,qv,Zv,Jv,Kv,$v,t_,e_,n_,i_,r_,a_,s_,o_,l_,c_,h_,u_,d_,p_,f_,m_,g_,A_,v_,__,x_,w_,y_,M_,b_,S_,E_,T_,P_,D_,Qp,Yp,C_,L_,R_,F_,B_,Mp),I_=(Bn("Blood Types","Blood types",Fn("🅰","A Button (Blood Type)"),Fn("🅱","B Button (Blood Type)"),Fn("🅾","O Button (Blood Type)"),Fn("🆎","AB Button (Blood Type)")),Bn("Regions","Region indicators",Fn("🇦","Regional Indicator Symbol Letter A"),Fn("🇧","Regional Indicator Symbol Letter B"),Fn("🇨","Regional Indicator Symbol Letter C"),Fn("🇩","Regional Indicator Symbol Letter D"),Fn("🇪","Regional Indicator Symbol Letter E"),Fn("🇫","Regional Indicator Symbol Letter F"),Fn("🇬","Regional Indicator Symbol Letter G"),Fn("🇭","Regional Indicator Symbol Letter H"),Fn("🇮","Regional Indicator Symbol Letter I"),Fn("🇯","Regional Indicator Symbol Letter J"),Fn("🇰","Regional Indicator Symbol Letter K"),Fn("🇱","Regional Indicator Symbol Letter L"),Fn("🇲","Regional Indicator Symbol Letter M"),Fn("🇳","Regional Indicator Symbol Letter N"),Fn("🇴","Regional Indicator Symbol Letter O"),Fn("🇵","Regional Indicator Symbol Letter P"),Fn("🇶","Regional Indicator Symbol Letter Q"),Fn("🇷","Regional Indicator Symbol Letter R"),Fn("🇸","Regional Indicator Symbol Letter S"),Fn("🇹","Regional Indicator Symbol Letter T"),Fn("🇺","Regional Indicator Symbol Letter U"),Fn("🇻","Regional Indicator Symbol Letter V"),Fn("🇼","Regional Indicator Symbol Letter W"),Fn("🇽","Regional Indicator Symbol Letter X"),Fn("🇾","Regional Indicator Symbol Letter Y"),Fn("🇿","Regional Indicator Symbol Letter Z")),Bn("Japanese","Japanse symbology",Fn("🔰","Japanese Symbol for Beginner"),Fn("🈁","Japanese “Here” Button"),Fn("🈂️","Japanese “Service Charge” Button"),Fn("🈚","Japanese “Free of Charge” Button"),Fn("🈯","Japanese “Reserved” Button"),Fn("🈲","Japanese “Prohibited” Button"),Fn("🈳","Japanese “Vacancy” Button"),Fn("🈴","Japanese “Passing Grade” Button"),Fn("🈵","Japanese “No Vacancy” Button"),Fn("🈶","Japanese “Not Free of Charge” Button"),Fn("🈷️","Japanese “Monthly Amount” Button"),Fn("🈸","Japanese “Application” Button"),Fn("🈹","Japanese “Discount” Button"),Fn("🈺","Japanese “Open for Business” Button"),Fn("🉐","Japanese “Bargain” Button"),Fn("🉑","Japanese “Acceptable” Button"),Fn("㊗️","Japanese “Congratulations” Button"),Fn("㊙️","Japanese “Secret” Button")),Bn("Clocks","Time-keeping pieces",Fn("🕐","One O’Clock"),Fn("🕑","Two O’Clock"),Fn("🕒","Three O’Clock"),Fn("🕓","Four O’Clock"),Fn("🕔","Five O’Clock"),Fn("🕕","Six O’Clock"),Fn("🕖","Seven O’Clock"),Fn("🕗","Eight O’Clock"),Fn("🕘","Nine O’Clock"),Fn("🕙","Ten O’Clock"),Fn("🕚","Eleven O’Clock"),Fn("🕛","Twelve O’Clock"),Fn("🕜","One-Thirty"),Fn("🕝","Two-Thirty"),Fn("🕞","Three-Thirty"),Fn("🕟","Four-Thirty"),Fn("🕠","Five-Thirty"),Fn("🕡","Six-Thirty"),Fn("🕢","Seven-Thirty"),Fn("🕣","Eight-Thirty"),Fn("🕤","Nine-Thirty"),Fn("🕥","Ten-Thirty"),Fn("🕦","Eleven-Thirty"),Fn("🕧","Twelve-Thirty"),Fn("🕰️","Mantelpiece Clock"),Fn("⌚","Watch"),Fn("⏰","Alarm Clock"),Fn("⏱️","Stopwatch"),Fn("⏲️","Timer Clock"),Fn("⌛","Hourglass Done"),Fn("⏳","Hourglass Not Done"))),O_=Fn("🔃️","Clockwise Vertical Arrows"),U_=Fn("🔄️","Counterclockwise Arrows Button"),z_=Fn("↔️","Left-Right Arrow"),k_=Fn("↕️","Up-Down Arrow"),G_=Fn("↖️","Up-Left Arrow"),H_=Fn("↗️","Up-Right Arrow"),W_=(Fn("↘","Down-Right Arrow"),Fn("↘︎","Down-Right Arrow"),Fn("↘️","Down-Right Arrow")),V_=Fn("↙️","Down-Left Arrow"),j_=Fn("↩️","Right Arrow Curving Left"),Q_=Fn("↪️","Left Arrow Curving Right"),X_=Fn("➡️","Right Arrow"),Y_=Fn("⤴️","Right Arrow Curving Up"),q_=Fn("⤵️","Right Arrow Curving Down"),Z_=Fn("⬅️","Left Arrow"),J_=Fn("⬆️","Up Arrow"),K_=Fn("⬇️","Down Arrow"),$_=Bn("Arrows","Arrows pointing in different directions",O_,U_,z_,k_,G_,H_,W_,V_,j_,Q_,X_,Y_,q_,Z_,J_,K_),tx=Bn("Shapes","Colored shapes",Fn("🔴","Red Circle"),Fn("🔵","Blue Circle"),Fn("🔶","Large Orange Diamond"),Fn("🔷","Large Blue Diamond"),Fn("🔸","Small Orange Diamond"),Fn("🔹","Small Blue Diamond"),Fn("🔺","Red Triangle Pointed Up"),Fn("🔻","Red Triangle Pointed Down"),Fn("🟠","Orange Circle"),Fn("🟡","Yellow Circle"),Fn("🟢","Green Circle"),Fn("🟣","Purple Circle"),Fn("🟤","Brown Circle"),Fn("⭕","Hollow Red Circle"),Fn("⚪","White Circle"),Fn("⚫","Black Circle"),Fn("🟥","Red Square"),Fn("🟦","Blue Square"),Fn("🟧","Orange Square"),Fn("🟨","Yellow Square"),Fn("🟩","Green Square"),Fn("🟪","Purple Square"),Fn("🟫","Brown Square"),Fn("🔲","Black Square Button"),Fn("🔳","White Square Button"),Fn("▪️","Black Small Square"),Fn("▫️","White Small Square"),Fn("◽","White Medium-Small Square"),Fn("◾","Black Medium-Small Square"),Fn("◻️","White Medium Square"),Fn("◼️","Black Medium Square"),Fn("⬛","Black Large Square"),Fn("⬜","White Large Square"),Fn("⭐","Star"),Fn("💠","Diamond with a Dot")),ex=Fn("🆑","CL Button"),nx=Fn("🆒","Cool Button"),ix=Fn("🆓","Free Button"),rx=Fn("🆔","ID Button"),ax=Fn("🆕","New Button"),sx=Fn("🆖","NG Button"),ox=Fn("🆗","OK Button"),lx=Fn("🆘","SOS Button"),cx=Fn("🆙","Up! Button"),hx=Fn("🆚","Vs Button"),ux=Fn("🔘","Radio Button"),dx=Fn("🔙","Back Arrow"),px=Fn("🔚","End Arrow"),fx=Fn("🔛","On! Arrow"),mx=Fn("🔜","Soon Arrow"),gx=Fn("🔝","Top Arrow"),Ax=Fn("☑️","Check Box with Check"),vx=Fn("🔠","Input Latin Uppercase"),_x=Fn("🔡","Input Latin Lowercase"),xx=Fn("🔢","Input Numbers"),wx=Fn("🔣","Input Symbols"),yx=Fn("🔤","Input Latin Letters"),Mx=Fn("🔀","Shuffle Tracks Button"),bx=Fn("🔁","Repeat Button"),Sx=Fn("🔂","Repeat Single Button"),Ex=Fn("🔼","Upwards Button"),Tx=Fn("🔽","Downwards Button"),Px=Fn("▶️","Play Button"),Dx=Fn("◀️","Reverse Button"),Cx=Fn("⏏️","Eject Button"),Lx=Fn("⏩","Fast-Forward Button"),Rx=Fn("⏪","Fast Reverse Button"),Fx=Fn("⏫","Fast Up Button"),Bx=Fn("⏬","Fast Down Button"),Nx=Fn("⏭️","Next Track Button"),Ix=Fn("⏮️","Last Track Button"),Ox=Fn("⏯️","Play or Pause Button"),Ux=Fn("⏸️","Pause Button"),zx=Fn("⏹️","Stop Button"),kx=Bn("Buttons","Buttons",ex,nx,ix,rx,ax,sx,ox,lx,cx,hx,ux,dx,px,fx,mx,gx,Ax,vx,_x,xx,wx,yx,Mx,bx,Sx,Ex,Tx,Px,Ux,Dx,Cx,Lx,Rx,Fx,Bx,Nx,Ix,Ox,Ux,zx,Fn("⏺️","Record Button")),Gx=Bn("Zodiac","The symbology of astrology",Fn("♈","Aries"),Fn("♉","Taurus"),Fn("♊","Gemini"),Fn("♋","Cancer"),Fn("♌","Leo"),Fn("♍","Virgo"),Fn("♎","Libra"),Fn("♏","Scorpio"),Fn("♐","Sagittarius"),Fn("♑","Capricorn"),Fn("♒","Aquarius"),Fn("♓","Pisces"),Fn("⛎","Ophiuchus")),Hx=(Bn("Numbers","Numbers",Fn("0️","Digit Zero"),Fn("1️","Digit One"),Fn("2️","Digit Two"),Fn("3️","Digit Three"),Fn("4️","Digit Four"),Fn("5️","Digit Five"),Fn("6️","Digit Six"),Fn("7️","Digit Seven"),Fn("8️","Digit Eight"),Fn("9️","Digit Nine"),Fn("*️","Asterisk"),Fn("#️","Number Sign"),Fn("0️⃣","Keycap Digit Zero"),Fn("1️⃣","Keycap Digit One"),Fn("2️⃣","Keycap Digit Two"),Fn("3️⃣","Keycap Digit Three"),Fn("4️⃣","Keycap Digit Four"),Fn("5️⃣","Keycap Digit Five"),Fn("6️⃣","Keycap Digit Six"),Fn("7️⃣","Keycap Digit Seven"),Fn("8️⃣","Keycap Digit Eight"),Fn("9️⃣","Keycap Digit Nine"),Fn("*️⃣","Keycap Asterisk"),Fn("#️⃣","Keycap Number Sign"),Fn("🔟","Keycap: 10")),Fn("󠀫","Tag Plus Sign")),Wx=Fn("󠀭","Tag Hyphen-Minus"),Vx=(Bn("Tags","Tags",Fn("󠀠","Tag Space"),Fn("󠀡","Tag Exclamation Mark"),Fn("󠀢","Tag Quotation Mark"),Fn("󠀣","Tag Number Sign"),Fn("󠀤","Tag Dollar Sign"),Fn("󠀥","Tag Percent Sign"),Fn("󠀦","Tag Ampersand"),Fn("󠀧","Tag Apostrophe"),Fn("󠀨","Tag Left Parenthesis"),Fn("󠀩","Tag Right Parenthesis"),Fn("󠀪","Tag Asterisk"),Hx,Fn("󠀬","Tag Comma"),Wx,Fn("󠀮","Tag Full Stop"),Fn("󠀯","Tag Solidus"),Fn("󠀰","Tag Digit Zero"),Fn("󠀱","Tag Digit One"),Fn("󠀲","Tag Digit Two"),Fn("󠀳","Tag Digit Three"),Fn("󠀴","Tag Digit Four"),Fn("󠀵","Tag Digit Five"),Fn("󠀶","Tag Digit Six"),Fn("󠀷","Tag Digit Seven"),Fn("󠀸","Tag Digit Eight"),Fn("󠀹","Tag Digit Nine"),Fn("󠀺","Tag Colon"),Fn("󠀻","Tag Semicolon"),Fn("󠀼","Tag Less-Than Sign"),Fn("󠀽","Tag Equals Sign"),Fn("󠀾","Tag Greater-Than Sign"),Fn("󠀿","Tag Question Mark"),Fn("󠁀","Tag Commercial at"),Fn("󠁁","Tag Latin Capital Letter a"),Fn("󠁂","Tag Latin Capital Letter B"),Fn("󠁃","Tag Latin Capital Letter C"),Fn("󠁄","Tag Latin Capital Letter D"),Fn("󠁅","Tag Latin Capital Letter E"),Fn("󠁆","Tag Latin Capital Letter F"),Fn("󠁇","Tag Latin Capital Letter G"),Fn("󠁈","Tag Latin Capital Letter H"),Fn("󠁉","Tag Latin Capital Letter I"),Fn("󠁊","Tag Latin Capital Letter J"),Fn("󠁋","Tag Latin Capital Letter K"),Fn("󠁌","Tag Latin Capital Letter L"),Fn("󠁍","Tag Latin Capital Letter M"),Fn("󠁎","Tag Latin Capital Letter N"),Fn("󠁏","Tag Latin Capital Letter O"),Fn("󠁐","Tag Latin Capital Letter P"),Fn("󠁑","Tag Latin Capital Letter Q"),Fn("󠁒","Tag Latin Capital Letter R"),Fn("󠁓","Tag Latin Capital Letter S"),Fn("󠁔","Tag Latin Capital Letter T"),Fn("󠁕","Tag Latin Capital Letter U"),Fn("󠁖","Tag Latin Capital Letter V"),Fn("󠁗","Tag Latin Capital Letter W"),Fn("󠁘","Tag Latin Capital Letter X"),Fn("󠁙","Tag Latin Capital Letter Y"),Fn("󠁚","Tag Latin Capital Letter Z"),Fn("󠁛","Tag Left Square Bracket"),Fn("󠁜","Tag Reverse Solidus"),Fn("󠁝","Tag Right Square Bracket"),Fn("󠁞","Tag Circumflex Accent"),Fn("󠁟","Tag Low Line"),Fn("󠁠","Tag Grave Accent"),Fn("󠁡","Tag Latin Small Letter a"),Fn("󠁢","Tag Latin Small Letter B"),Fn("󠁣","Tag Latin Small Letter C"),Fn("󠁤","Tag Latin Small Letter D"),Fn("󠁥","Tag Latin Small Letter E"),Fn("󠁦","Tag Latin Small Letter F"),Fn("󠁧","Tag Latin Small Letter G"),Fn("󠁨","Tag Latin Small Letter H"),Fn("󠁩","Tag Latin Small Letter I"),Fn("󠁪","Tag Latin Small Letter J"),Fn("󠁫","Tag Latin Small Letter K"),Fn("󠁬","Tag Latin Small Letter L"),Fn("󠁭","Tag Latin Small Letter M"),Fn("󠁮","Tag Latin Small Letter N"),Fn("󠁯","Tag Latin Small Letter O"),Fn("󠁰","Tag Latin Small Letter P"),Fn("󠁱","Tag Latin Small Letter Q"),Fn("󠁲","Tag Latin Small Letter R"),Fn("󠁳","Tag Latin Small Letter S"),Fn("󠁴","Tag Latin Small Letter T"),Fn("󠁵","Tag Latin Small Letter U"),Fn("󠁶","Tag Latin Small Letter V"),Fn("󠁷","Tag Latin Small Letter W"),Fn("󠁸","Tag Latin Small Letter X"),Fn("󠁹","Tag Latin Small Letter Y"),Fn("󠁺","Tag Latin Small Letter Z"),Fn("󠁻","Tag Left Curly Bracket"),Fn("󠁼","Tag Vertical Line"),Fn("󠁽","Tag Right Curly Bracket"),Fn("󠁾","Tag Tilde"),Fn("󠁿","Cancel Tag")),Bn("Math","Math",Fn("✖️","Multiply"),Fn("➕","Plus"),Fn("➖","Minus"),Fn("➗","Divide"))),jx=Bn("Games","Games",Fn("♠️","Spade Suit"),Fn("♣️","Club Suit"),Fn("♥️","Heart Suit",{color:"red"}),Fn("♦️","Diamond Suit",{color:"red"}),Fn("🀄","Mahjong Red Dragon"),Fn("🃏","Joker"),Fn("🎯","Direct Hit"),Fn("🎰","Slot Machine"),Fn("🎱","Pool 8 Ball"),Fn("🎲","Game Die"),Fn("🎳","Bowling"),Fn("🎴","Flower Playing Cards"),Fn("🧩","Puzzle Piece"),Fn("♟️","Chess Pawn"),Fn("🪀","Yo-Yo"),Fn("🪁","Kite")),Qx=Bn("Sports Equipment","Sports equipment",Fn("🎽","Running Shirt"),Fn("🎾","Tennis"),Fn("🎿","Skis"),Fn("🏀","Basketball"),Fn("🏅","Sports Medal"),Fn("🏆","Trophy"),Fn("🏈","American Football"),Fn("🏉","Rugby Football"),Fn("🏏","Cricket Game"),Fn("🏐","Volleyball"),Fn("🏑","Field Hockey"),Fn("🏒","Ice Hockey"),Fn("🏓","Ping Pong"),Fn("🏸","Badminton"),Fn("🛷","Sled"),Fn("🥅","Goal Net"),Fn("🥇","1st Place Medal"),Fn("🥈","2nd Place Medal"),Fn("🥉","3rd Place Medal"),Fn("🥊","Boxing Glove"),Fn("🥌","Curling Stone"),Fn("🥍","Lacrosse"),Fn("🥎","Softball"),Fn("🥏","Flying Disc"),Fn("⚽","Soccer Ball"),Fn("⚾","Baseball"),Fn("⛸️","Ice Skate")),Xx=Bn("Clothing","Clothing",Fn("🎩","Top Hat"),Fn("🤿","Diving Mask"),Fn("👒","Woman’s Hat"),Fn("👓","Glasses"),Fn("🕶️","Sunglasses"),Fn("👔","Necktie"),Fn("👕","T-Shirt"),Fn("👖","Jeans"),Fn("👗","Dress"),Fn("👘","Kimono"),Fn("👙","Bikini"),Fn("👚","Woman’s Clothes"),Fn("👛","Purse"),Fn("👜","Handbag"),Fn("👝","Clutch Bag"),Fn("👞","Man’s Shoe"),Fn("👟","Running Shoe"),Fn("👠","High-Heeled Shoe"),Fn("👡","Woman’s Sandal"),Fn("👢","Woman’s Boot"),Fn("🥋","Martial Arts Uniform"),Fn("🥻","Sari"),Fn("🥼","Lab Coat"),Fn("🥽","Goggles"),Fn("🥾","Hiking Boot"),Fn("🥿","Flat Shoe"),Vp,Fn("🦺","Safety Vest"),Fn("🧢","Billed Cap"),Fn("🧣","Scarf"),Fn("🧤","Gloves"),Fn("🧥","Coat"),Fn("🧦","Socks"),Fn("🧿","Nazar Amulet"),Fn("🩰","Ballet Shoes"),Fn("🩱","One-Piece Swimsuit"),Fn("🩲","Briefs"),Fn("🩳","Shorts")),Yx=Bn("Town","Town",Fn("🏗️","Building Construction"),Fn("🏘️","Houses"),Fn("🏙️","Cityscape"),Fn("🏚️","Derelict House"),Fn("🏛️","Classical Building"),Fn("🏜️","Desert"),Fn("🏝️","Desert Island"),Fn("🏞️","National Park"),Fn("🏟️","Stadium"),Fn("🏠","House"),Fn("🏡","House with Garden"),Fn("🏢","Office Building"),Fn("🏣","Japanese Post Office"),Fn("🏤","Post Office"),Fn("🏥","Hospital"),Fn("🏦","Bank"),Fn("🏧","ATM Sign"),Fn("🏨","Hotel"),Fn("🏩","Love Hotel"),Fn("🏪","Convenience Store"),ap,Fn("🏬","Department Store"),mp,Fn("🌉","Bridge at Night"),Fn("⛲","Fountain"),Fn("🛍️","Shopping Bags"),Fn("🧾","Receipt"),Fn("🛒","Shopping Cart"),Fn("💈","Barber Pole"),Fn("💒","Wedding"),Fn("🗳️","Ballot Box with Ballot")),qx=Bn("Music","Music",Fn("🎼","Musical Score"),Fn("🎶","Musical Notes"),Fn("🎵","Musical Note"),Fn("🎷","Saxophone"),Fn("🎸","Guitar"),Fn("🎹","Musical Keyboard"),Fn("🎺","Trumpet"),Fn("🎻","Violin"),Fn("🥁","Drum"),Fn("🪕","Banjo")),Zx=Bn("Weather","Weather",Fn("🌄","Sunrise Over Mountains"),Fn("🌅","Sunrise"),Fn("🌆","Cityscape at Dusk"),Fn("🌇","Sunset"),Fn("🌃","Night with Stars"),Fn("🌂","Closed Umbrella"),Fn("☂️","Umbrella"),Fn("☔️","Umbrella with Rain Drops"),Fn("☃️","Snowman"),Fn("⛄","Snowman Without Snow"),Fn("☀️","Sun"),Fn("☁️","Cloud"),Fn("🌤️","Sun Behind Small Cloud"),Fn("⛅","Sun Behind Cloud"),Fn("🌥️","Sun Behind Large Cloud"),Fn("🌦️","Sun Behind Rain Cloud"),Fn("🌧️","Cloud with Rain"),Fn("🌨️","Cloud with Snow"),Fn("🌩️","Cloud with Lightning"),Fn("⛈️","Cloud with Lightning and Rain"),Fn("❄️","Snowflake"),Fn("🌀","Cyclone"),Fn("🌪️","Tornado"),Fn("🌬️","Wind Face"),Fn("🌊","Water Wave"),Fn("🌫️","Fog"),Fn("🌁","Foggy"),Fn("🌈","Rainbow"),Fn("🌡️","Thermometer")),Jx=Bn("Astronomy","Astronomy",Fn("🌌","Milky Way"),Fn("🌍","Globe Showing Europe-Africa"),Fn("🌎","Globe Showing Americas"),Fn("🌏","Globe Showing Asia-Australia"),Fn("🌐","Globe with Meridians"),Fn("🌑","New Moon"),Fn("🌒","Waxing Crescent Moon"),Fn("🌓","First Quarter Moon"),Fn("🌔","Waxing Gibbous Moon"),Fn("🌕","Full Moon"),Fn("🌖","Waning Gibbous Moon"),Fn("🌗","Last Quarter Moon"),Fn("🌘","Waning Crescent Moon"),Fn("🌙","Crescent Moon"),Fn("🌚","New Moon Face"),Fn("🌛","First Quarter Moon Face"),Fn("🌜","Last Quarter Moon Face"),Fn("🌝","Full Moon Face"),Fn("🌞","Sun with Face"),Fn("🌟","Glowing Star"),Fn("🌠","Shooting Star"),Fn("☄️","Comet"),Fn("🪐","Ringed Planet")),Kx=Bn("Finance","Finance",Fn("💰","Money Bag"),Fn("💱","Currency Exchange"),Fn("💲","Heavy Dollar Sign"),Fn("💳","Credit Card"),Fn("💴","Yen Banknote"),Fn("💵","Dollar Banknote"),Fn("💶","Euro Banknote"),Fn("💷","Pound Banknote"),Fn("💸","Money with Wings"),Fn("💹","Chart Increasing with Yen")),$x=Bn("Writing","Writing",Fn("🖊️","Pen"),Fn("🖋️","Fountain Pen"),Fn("🖌️","Paintbrush"),Fn("🖍️","Crayon"),Fn("✏️","Pencil"),Fn("✒️","Black Nib")),tw=Fn("⚗️","Alembic"),ew=Fn("⚙️","Gear"),nw=Fn("⚛️","Atom Symbol"),iw=Fn("⌨️","Keyboard"),rw=Fn("☎️","Telephone"),aw=Fn("🎙️","Studio Microphone"),sw=Fn("🎚️","Level Slider"),ow=Fn("🎛️","Control Knobs"),lw=Fn("🎥","Movie Camera"),cw=Fn("🎧","Headphone"),hw=Fn("🎮","Video Game"),uw=Fn("💡","Light Bulb"),dw=Fn("💽","Computer Disk"),pw=Fn("💾","Floppy Disk"),fw=Fn("💿","Optical Disk"),mw=Fn("📀","DVD"),gw=Fn("📞","Telephone Receiver"),Aw=Fn("📟","Pager"),vw=Fn("📠","Fax Machine"),_w=Fn("📡","Satellite Antenna"),xw=Fn("📢","Loudspeaker"),ww=Fn("📣","Megaphone"),yw=Fn("📱","Mobile Phone"),Mw=Fn("📲","Mobile Phone with Arrow"),bw=Fn("📳","Mobile Phone Vibrating"),Sw=Fn("📴","Mobile Phone Off"),Ew=Fn("📵","No Mobile Phone"),Tw=Fn("📶","Antenna Bars"),Pw=Fn("📷","Camera"),Dw=Fn("📸","Camera with Flash"),Cw=Fn("📹","Video Camera"),Lw=Fn("📺","Television"),Rw=Fn("📻","Radio"),Fw=Fn("📼","Videocassette"),Bw=Fn("📽️","Film Projector"),Nw=(Fn("📾️","Portable Stereo"),Fn("🔅","Dim Button")),Iw=Fn("🔆","Bright Button"),Ow=Fn("🔇","Muted Speaker"),Uw=Fn("🔈","Speaker Low Volume"),zw=Fn("🔉","Speaker Medium Volume"),kw=Fn("🔊","Speaker High Volume"),Gw=Fn("🔋","Battery"),Hw=Fn("🔌","Electric Plug"),Ww=Fn("🔍","Magnifying Glass Tilted Left"),Vw=Fn("🔎","Magnifying Glass Tilted Right"),jw=Fn("🔏","Locked with Pen"),Qw=Fn("🔐","Locked with Key"),Xw=Fn("🔑","Key"),Yw=Fn("🔒","Locked"),qw=Fn("🔓","Unlocked"),Zw=Fn("🔔","Bell"),Jw=Fn("🔕","Bell with Slash"),Kw=Fn("🔖","Bookmark"),$w=Fn("🔗","Link"),ty=Fn("🕹️","Joystick"),ey=Fn("🖥️","Desktop Computer"),ny=Fn("🖨️","Printer"),iy=Fn("🖱️","Computer Mouse"),ry=Fn("🖲️","Trackball"),ay=(Fn("🖿","Black Folder"),Fn("🗀","Folder"),Fn("🗁","Open Folder"),Fn("🗂","Card Index Dividers")),sy=Fn("🗃","Card File Box"),oy=Fn("🗄","File Cabinet"),ly=(Fn("🗅","Empty Note"),Fn("🗆","Empty Note Page"),Fn("🗇","Empty Note Pad"),Fn("🗈","Note"),Fn("🗉","Note Page"),Fn("🗊","Note Pad"),Fn("🗋","Empty Document"),Fn("🗌","Empty Page"),Fn("🗍","Empty Pages"),Fn("🗎","Document"),Fn("🗏","Page"),Fn("🗐","Pages"),Fn("🗑","Wastebasket")),cy=Fn("🗒","Spiral Note Pad"),hy=Fn("🗓","Spiral Calendar"),uy=(Fn("🗔","Desktop Window"),Fn("🗕","Minimize"),Fn("🗖","Maximize"),Fn("🗗","Overlap"),Fn("🗘","Reload"),Fn("🗙","Close"),Fn("🗚","Increase Font Size"),Fn("🗛","Decrease Font Size"),Fn("🗜","Compression")),dy=Fn("🗝","Old Key"),py=Bn("Technology","Technology",ty,hw,uw,Dp,Ap,dw,pw,fw,mw,ey,iw,ny,iy,ry,rw,gw,Aw,vw,_w,xw,ww,Lw,Rw,Fw,Bw,aw,sw,ow,Tp,lw,cw,Pw,Dw,Cw,yw,Sw,Mw,jw,Qw,Yw,qw,Zw,Jw,Kw,$w,bw,Tw,Nw,Iw,Ow,Uw,zw,kw,Gw,Hw),fy=Bn("Mail","Mail",Fn("📤","Outbox Tray"),Fn("📥","Inbox Tray"),Fn("📦","Package"),Fn("📧","E-Mail"),Fn("📨","Incoming Envelope"),Fn("📩","Envelope with Arrow"),Fn("📪","Closed Mailbox with Lowered Flag"),Fn("📫","Closed Mailbox with Raised Flag"),Fn("📬","Open Mailbox with Raised Flag"),Fn("📭","Open Mailbox with Lowered Flag"),Fn("📮","Postbox"),Fn("📯","Postal Horn")),my=Bn("Celebration","Celebration",Fn("🎀","Ribbon"),Fn("🎁","Wrapped Gift"),Fn("🎃","Jack-O-Lantern"),Fn("🎄","Christmas Tree"),Fn("🧨","Firecracker"),Fn("🎆","Fireworks"),Fn("🎇","Sparkler"),Fn("✨","Sparkles"),Fn("❇️","Sparkle"),Fn("🎈","Balloon"),Fn("🎉","Party Popper"),Fn("🎊","Confetti Ball"),Fn("🎋","Tanabata Tree"),Fn("🎍","Pine Decoration"),Fn("🎎","Japanese Dolls"),Fn("🎏","Carp Streamer"),Fn("🎐","Wind Chime"),Fn("🎑","Moon Viewing Ceremony"),Fn("🎒","Backpack"),ip,Fn("🧧","Red Envelope"),Fn("🏮","Red Paper Lantern"),Fn("🎖️","Military Medal")),gy=Bn("Tools","Tools",Fn("🎣","Fishing Pole"),Fn("🔦","Flashlight"),pp,Fn("🔨","Hammer"),Fn("🔩","Nut and Bolt"),Fn("🛠️","Hammer and Wrench"),Fn("🧭","Compass"),Fn("🧯","Fire Extinguisher"),Fn("🧰","Toolbox"),Fn("🧱","Brick"),Fn("🪓","Axe"),Fn("⚒️","Hammer and Pick"),Fn("⛏️","Pick"),Fn("⛑️","Rescue Worker’s Helmet"),Fn("⛓️","Chains"),uy),Ay=Bn("Office","Office",Fn("📁","File Folder"),Fn("📂","Open File Folder"),Fn("📃","Page with Curl"),Fn("📄","Page Facing Up"),Fn("📅","Calendar"),Fn("📆","Tear-Off Calendar"),Fn("📇","Card Index"),ay,sy,oy,ly,cy,hy,Fn("📈","Chart Increasing"),Fn("📉","Chart Decreasing"),Fn("📊","Bar Chart"),Fn("📋","Clipboard"),Fn("📌","Pushpin"),Fn("📍","Round Pushpin"),Fn("📎","Paperclip"),Fn("🖇️","Linked Paperclips"),Fn("📏","Straight Ruler"),Fn("📐","Triangular Ruler"),Fn("📑","Bookmark Tabs"),Fn("📒","Ledger"),Fn("📓","Notebook"),Fn("📔","Notebook with Decorative Cover"),Fn("📕","Closed Book"),Fn("📖","Open Book"),Fn("📗","Green Book"),Fn("📘","Blue Book"),Fn("📙","Orange Book"),Fn("📚","Books"),Fn("📛","Name Badge"),Fn("📜","Scroll"),Fn("📝","Memo"),Fn("✂️","Scissors"),Fn("✉️","Envelope")),vy=Bn("Signs","Signs",Fn("🎦","Cinema"),Ew,Fn("🔞","No One Under Eighteen"),Fn("🚫","Prohibited"),Fn("🚬","Cigarette"),Fn("🚭","No Smoking"),Fn("🚮","Litter in Bin Sign"),Fn("🚯","No Littering"),Fn("🚰","Potable Water"),Fn("🚱","Non-Potable Water"),Fn("🚳","No Bicycles"),Fn("🚷","No Pedestrians"),Fn("🚸","Children Crossing"),Fn("🚹","Men’s Room"),Fn("🚺","Women’s Room"),Fn("🚻","Restroom"),Fn("🚼","Baby Symbol"),Fn("🚾","Water Closet"),Fn("🛂","Passport Control"),Fn("🛃","Customs"),Fn("🛄","Baggage Claim"),Fn("🛅","Left Luggage"),Fn("🅿️","Parking Button"),Fn("♿","Wheelchair Symbol"),Fn("☢️","Radioactive"),Fn("☣️","Biohazard"),Fn("⚠️","Warning"),Fn("⚡","High Voltage"),Fn("⛔","No Entry"),Fn("♻️","Recycling Symbol"),Yu,qu,Fn("⚧️","Transgender Symbol")),_y=Bn("Religion","Religion",Fn("🔯","Dotted Six-Pointed Star"),Fn("✡️","Star of David"),Fn("🕉️","Om"),Fn("🕋","Kaaba"),Fn("🕌","Mosque"),Fn("🕍","Synagogue"),Fn("🕎","Menorah"),Fn("🛐","Place of Worship"),Fn("🛕","Hindu Temple"),Fn("☦️","Orthodox Cross"),Fn("✝️","Latin Cross"),Fn("☪️","Star and Crescent"),Fn("☮️","Peace Symbol"),Fn("☯️","Yin Yang"),Fn("☸️","Wheel of Dharma"),Fn("♾️","Infinity"),Fn("🪔","Diya Lamp"),Fn("⛩️","Shinto Shrine"),Fn("⛪","Church"),Fn("✴️","Eight-Pointed Star"),Fn("📿","Prayer Beads")),xy=Fn("🚪","Door"),wy=Bn("Household","Household",Fn("💄","Lipstick"),Fn("💍","Ring"),Fn("💎","Gem Stone"),Fn("📰","Newspaper"),Xw,Fn("🔥","Fire"),Fn("🔫","Pistol"),Fn("🕯️","Candle"),Fn("🖼️","Framed Picture"),dy,Fn("🗞️","Rolled-Up Newspaper"),Fn("🗺️","World Map"),xy,Fn("🚽","Toilet"),Fn("🚿","Shower"),Fn("🛁","Bathtub"),Fn("🛋️","Couch and Lamp"),Fn("🛏️","Bed"),Fn("🧴","Lotion Bottle"),Fn("🧵","Thread"),Fn("🧶","Yarn"),Fn("🧷","Safety Pin"),Fn("🧸","Teddy Bear"),Fn("🧹","Broom"),Fn("🧺","Basket"),Fn("🧻","Roll of Paper"),Fn("🧼","Soap"),Fn("🧽","Sponge"),Fn("🪑","Chair"),Fn("🪒","Razor"),Fn("🎗️","Reminder Ribbon")),yy=Bn("Activities","Activities",Fn("🎞️","Film Frames"),Fn("🎟️","Admission Tickets"),Fn("🎠","Carousel Horse"),Fn("🎡","Ferris Wheel"),Fn("🎢","Roller Coaster"),Sp,Fn("🎪","Circus Tent"),Fn("🎫","Ticket"),Fn("🎬","Clapper Board"),Fn("🎭","Performing Arts")),My=Bn("Travel","Travel",Fn("🏷️","Label"),Fn("🌋","Volcano"),Fn("🏔️","Snow-Capped Mountain"),Fn("⛰️","Mountain"),Fn("🏕️","Camping"),Fn("🏖️","Beach with Umbrella"),Fn("⛱️","Umbrella on Ground"),Fn("🏯","Japanese Castle"),Fn("👣","Footprints"),Fn("🗻","Mount Fuji"),Fn("🗼","Tokyo Tower"),Fn("🗽","Statue of Liberty"),Fn("🗾","Map of Japan"),Fn("🗿","Moai"),Fn("🛎️","Bellhop Bell"),Fn("🧳","Luggage"),Fn("⛳","Flag in Hole"),Fn("⛺","Tent"),Fn("♨️","Hot Springs")),by=Bn("Medieval","Medieval",Fn("🏰","Castle"),Fn("🏹","Bow and Arrow"),Fp,Fn("🔱","Trident Emblem"),Fn("🗡️","Dagger"),Fn("🛡️","Shield"),Fn("🔮","Crystal Ball"),Fn("⚔️","Crossed Swords"),Fn("⚜️","Fleur-de-lis")),Sy=Fn("‼️","Double Exclamation Mark"),Ey=Fn("⁉️","Exclamation Question Mark"),Ty=Fn("ℹ️","Information"),Py=Fn("Ⓜ️","Circled M"),Dy=Fn("✅","Check Mark Button"),Cy=Fn("✔️","Check Mark"),Ly=Fn("✳️","Eight-Spoked Asterisk"),Ry=Fn("❌","Cross Mark"),Fy=Fn("❎","Cross Mark Button"),By=Fn("❓","Question Mark"),Ny=Fn("❔","White Question Mark"),Iy=Fn("❕","White Exclamation Mark"),Oy=Fn("❗","Exclamation Mark"),Uy=Fn("➰","Curly Loop"),zy=Fn("➿","Double Curly Loop"),ky=Fn("〰️","Wavy Dash"),Gy=Fn("〽️","Part Alternation Mark"),Hy=Fn("™️","Trade Mark"),Wy=Fn("©️","Copyright"),Vy=Fn("®️","Registered"),jy=(Fn("⛶️","Square: Four Corners"),Nn("Marks","Marks",{doubleExclamationMark:Sy,interrobang:Ey,information:Ty,circledM:Py,checkMarkButton:Dy,checkMark:Cy,eightSpokedAsterisk:Ly,crossMark:Ry,crossMarkButton:Fy,questionMark:By,whiteQuestionMark:Ny,whiteExclamationMark:Iy,exclamationMark:Oy,curlyLoop:Uy,doubleCurlyLoop:zy,wavyDash:ky,partAlternationMark:Gy,tradeMark:Hy,copyright:Wy,registered:Vy}),Fn("💧","Droplet")),Qy=Fn("🩸","Drop of Blood"),Xy=Fn("🩹","Adhesive Bandage"),Yy=Fn("🩺","Stethoscope"),qy=Fn("💉","Syringe"),Zy=Fn("💊","Pill"),Jy=Fn("🧪","Test Tube"),Ky=Fn("🧫","Petri Dish"),$y=Fn("🧬","DNA"),tM=Fn("🧮","Abacus"),eM=Fn("🧲","Magnet"),nM=Nn("Science","Science",{droplet:jy,dropOfBlood:Qy,adhesiveBandage:Xy,stethoscope:Yy,syringe:qy,pill:Zy,microscope:Lp,testTube:Jy,petriDish:Ky,dna:$y,abacus:tM,magnet:eM,telescope:Fn("🔭","Telescope"),medical:ep,balanceScale:op,alembic:tw,gear:ew,atomSymbol:nw,magnifyingGlassTiltedLeft:Ww,magnifyingGlassTiltedRight:Vw}),iM=Fn("♔","White Chess King"),rM=Fn("♕","White Chess Queen"),aM=Fn("♖","White Chess Rook"),sM=Fn("♗","White Chess Bishop"),oM=Fn("♘","White Chess Knight"),lM=Fn("♙","White Chess Pawn"),cM=Nn(iM.value+rM.value+aM.value+sM.value+oM.value+lM.value,"White Chess Pieces",{width:"auto",king:iM,queen:rM,rook:aM,bishop:sM,knight:oM,pawn:lM}),hM=Fn("♚","Black Chess King"),uM=Fn("♛","Black Chess Queen"),dM=Fn("♜","Black Chess Rook"),pM=Fn("♝","Black Chess Bishop"),fM=Fn("♞","Black Chess Knight"),mM=Fn("♟","Black Chess Pawn"),gM=Nn(hM.value+uM.value+dM.value+pM.value+fM.value+mM.value,"Black Chess Pieces",{width:"auto",king:hM,queen:uM,rook:dM,bishop:pM,knight:fM,pawn:mM}),AM=Nn(lM.value+mM.value,"Chess Pawns",{width:"auto",white:lM,black:mM}),vM=Nn(aM.value+dM.value,"Chess Rooks",{width:"auto",white:aM,black:dM}),_M=Nn(sM.value+pM.value,"Chess Bishops",{width:"auto",white:sM,black:pM}),xM=Nn(oM.value+fM.value,"Chess Knights",{width:"auto",white:oM,black:fM}),wM=Nn(rM.value+uM.value,"Chess Queens",{width:"auto",white:rM,black:uM}),yM=Nn(iM.value+hM.value,"Chess Kings",{width:"auto",white:iM,black:hM}),MM=Nn("Chess Pieces","Chess Pieces",{width:"auto",white:cM,black:gM,pawns:AM,rooks:vM,bishops:_M,knights:xM,queens:wM,kings:yM}),bM=Fn("⚀","Dice: Side 1"),SM=Fn("⚁","Dice: Side 2"),EM=Fn("⚂","Dice: Side 3"),TM=Fn("⚃","Dice: Side 4"),PM=Fn("⚄","Dice: Side 5"),DM=Nn("Dice","Dice",{dice1:bM,dice2:SM,dice3:EM,dice4:TM,dice5:PM,dice6:Fn("⚅","Dice: Side 6")});Nn("All Icons","All Icons",{faces:Bg,love:nA,cartoon:SA,hands:wv,bodyParts:yv,people:Sf,gestures:Rd,inMotion:vf,resting:Mf,roles:Op,fantasy:Wp,animals:Mv,plants:Sv,food:Tv,flags:Pv,vehicles:N_,clocks:I_,arrows:$_,shapes:tx,buttons:kx,zodiac:Gx,chess:MM,dice:DM,math:Vx,games:jx,sportsEquipment:Qx,clothing:Xx,town:Yx,music:qx,weather:Zx,astro:Jx,finance:Kx,writing:$x,science:nM,tech:py,mail:fy,celebration:my,tools:gy,office:Ay,signs:vy,religion:_y,household:wy,activities:yy,travel:My,medieval:by});class CM extends rl{constructor(t,e){super(t,{lit:!1,side:ir}),e&&(this.textBgColor="transparent",this.textColor="#000000",this.fontFamily="Segoe UI Emoji",this.fontSize=100,this.value=e)}}const LM=new CM("playbackButtonPlay",Px.value+Uw.value),RM=new CM("playbackButtonPause",Ux.value+kw.value),FM={type:"play"},BM={type:"stop"};class NM extends _{constructor(t,e,n,i){super(),this.name="play-"+t;let r=!1;const a=()=>{r&&(this.playButton.visible=!0,this.pauseButton.visible=!1,i.stopClip(t),this.dispatchEvent(BM),r=!1)};this.playButton=LM.clone(),this.playButton.addEventListener("click",async()=>{this.playButton.visible=!1,this.pauseButton.visible=!0,this.dispatchEvent(FM),await i.playClip(t,e),r=!0,await l(n.audioElement,"ended"),a()}),this.pauseButton=RM.clone(),this.pauseButton.visible=!1,this.pauseButton.addEventListener("click",a),this.add(this.playButton,this.pauseButton),this.scale.setScalar(.5)}}const IM=new zu;let OM=null;function Wn(t,e,n){IM.onProgress(t,e,n)}IM.addEventListener("started",(async function t(){if(await IM.fadeOut(),IM.audio.ready){OM=new Vu(IM.audio,"music"),await OM.load(!0,!1,!0,Wn,"/audio/Planet.wav"),OM.minDistance=1,OM.maxDistance=10,OM.add(new Uo),IM.foreground.add(OM);const t=new NM("music",1,OM,IM.audio);t.position.set(0,1.75,-3),t.lookAt(0,1.75,0),IM.foreground.add(t)}else!async function(t,e,n){await IM.fadeOut(),await IM.skybox.setImage("images/default-background.jpg"),IM.sun.position.set(1,1,-1),IM.sun.lookAt(0,0,0),IM.showSkybox=!0,IM.menu.remove(...IM.menu.children),IM.stage.position.set(0,0,0);const r=i(t)?await d(t):t;e&&r.push(backButton);for(let t=0;t<r.length;++t){Vn(r[t],.4*((r.length-1)/2-t)+1.5,t=>{t===backButton?history.back():n(t)})}await IM.fadeIn()}([{name:"Start"}],!1,async e=>{await l(IM.audio,"audioready"),t()});await IM.fadeIn()})),IM.addEventListener("tick",(function(t){OM&&(zM.y=t.t/1e4,UM.setFromEuler(zM),OM.position.set(0,1.75,-4).applyQuaternion(UM),OM.lookAt(0,1.75,0))})),IM.start();const UM=new Kn,zM=new Di;function Vn(t,e,n){const i=Object.assign(new rl(t.name),{name:t.name,disabled:!1===t.enabled,textBgColor:!1!==t.enabled?t===backButton?"#000000":"#ffffff":"#a0a0a0",textColor:!1!==t.enabled?t===backButton?"#ffffff":"#000000":"#505050",textPadding:[15,30]},menuItemFont);i.position.set(0,e,-5),i.value=t.name,i.addEventListener("click",()=>{i.disabled||n(t)}),IM.menu.add(i)}}catch(t){TraceKit.report(t)}
//# sourceMappingURL=vrtest.min.js.map
